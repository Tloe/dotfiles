mv zshrc ../.zshrc
sudo pacman -Ss optimus
sudo optimus-manager
optiomus
sudo pacman -S xorg-randr
sudo pacman -S xorg-xrandr
nvom /etc/X11/xorg.conf.d/10-optimus-manager.conf
cat /etc/lightdm
cat /etc/lightdm/display_setup.sh
sudo nvim /etc/lightdm/display_setup.sh
sudo chmod +x /etc/lightdm/display_setup.sh
sudo nvim /etc/lightdm/lightdm.conf
sudo mhwd -l 
nvim /etc/X11/xorg.conf.d/10-optimus-manager.conf
systemctl status optimus-manager.service
sudo pacman -S bat
optimus-manager 
cat /var/log/optimus-manager/switch/switch-20210523T001747.log
cat /var/log/optimus-manager/switch/switch-20210523T002747.log
optimus-manager --switch nvidia
nvidia-settin
cat /var/log/optimus-manager/switch/switch-20210523T00
optimus-mana
cd /etc/X11/xorg.conf.d
optimus-manager --cleanup
sudo optimus-manager --cleanup
optimus-manager --switch hybrid
sudo prime-offload
sudo optimus-manager --switch hybrid
sudo optimus-manager --switch integrated
sudo pacman -S optimus-manager-qt
yay -S j4-dmenu-desktop
optimus-manager --list
cat /var/log/optimus-manager/switch/switch-20210523T003531.log
modprobe nvidia
sudo modprobe nvidia
sudo pacman -S autorandr
nvim /etc/i3
rm manjaroi3conig
journal -k
cat /var/log/optimus-manager/switch/switch-20210523T112055.log
sudo nvim /etc/mkinitcpio.conf
sudo mkinitcpio -p 5.10.34-1-Manjaro
sudo mkinitcpio -p linux51034
sudo mkinitcpio -p linux510
sudo pacman -R optimus-manager-qt
sudo pacman -R optimus-manager
sudo pacman -S virtualgl lib32-virtualgl lib32-primus primus
sudo mhwd -f -i pci video-hybrid-intel-nvidia-bumblebee
sudo pacman -R virtualgl lib32-virtualgl lib32-primus primus
bumblebee
sudo systemctl enable bumblebeed
sudo run
optirun -b none nvidia-settings -c :8
sudo optirun -b none nvidia-settings -c :8
sudo primusrun glxspheres64
usermod -a -G bumblebee t
primusrun glxspheres64
user
sudo usermod -a -G bumblebee t
id
who
users
sudo usermod -r -G bumblebee t
sudo pacman -R bumblebee
sudo pacman -R virtualgl lib32-virtualgl lib32-primus primus bumblebee
nvidia-settings --help
sudo mhwd-gpu --setmod nvidia --setxorg /etc/X11/mhwd.d/nvidia.conf
cat /etc/X11/mhwd.d/nvidia.conf
cat /etc/X11/xorg.conf.d/90-mhwd.conf
nvim /etc/lightdm/lightdm.conf
nvim /etc/lightdm/display_setup.sh
cat .xinitrc
sudo pacman -S zerotier-one
cat /var/lib/zerotier-one/zerotier-cli
systemctl enable zerotier-one.service
sudo service zerotier-one start
sudo mhwd-kernel --help
sudo pacman -S optimus-manager optimus-manager-qt
sudo pacman -S optimus-manager
yay -S optimus-manager-qt
reboot
sudo nvim /etc/systemd/logind.conf
mkdir dev
mkdir protojour
mkdir private
cat ~/.ssh/id_rsa.pub
cat -p ~/.ssh/id_rsa.pub
git clone git@github.com:Tloe/TEngine.git
pip
sudo pacman -Ss python pip
git clone https://github.com/llvm/llvm-project.git
mkdir builds
mv llvm-project ../../builds
cd builds/llvm-project/debuginfo-tests/win_cdb-tests
sudo pacman -S ninja
cmake -S llvm -B build -G Ninja -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra" -DLLVM_USE_LINKER=gold -DCMAKE_BUILD_TYPE=Release
cmake --build . --target install
conan install .. - profile ../Utils/Conan/Profiles/Linux/TEngineDebug -g cmake --build=missing
conan install .. -profile ../Utils/Conan/Profiles/Linux/TEngineDebug -g cmake --build=missing
nvim ~/.conan/settings.yml
conan build .
/usr/local/bin/clang++
lc++
;d
ld
cd builds/llvm-project/
cmake -S llvm -B build -G Ninja -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;libclc" -DLLVM_USE_LINKER=gold -DCMAKE_BUILD_TYPE=Release
cmake -S llvm -B build -G Ninja -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;libclc;lld" -DLLVM_USE_LINKER=gold -DCMAKE_BUILD_TYPE=Release
sudo cmake --build . --target install
sudo cmake --build build --target install
export CC=clang
export CXX=clang++
cmake -S llvm -B build -G Ninja -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;libclc;lld;libcxx;libc" -DLLVM_USE_LINKER=gold -DCMAKE_BUILD_TYPE=Release
sudo pacman clang
cmake -S llvm -B build -G Ninja -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;libcxx;libc" -DLLVM_USE_LINKER=gold -DCMAKE_BUILD_TYPE=Release
cmake -S llvm -B build -G Ninja -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;libcxx" -DLLVM_USE_LINKER=gold -DCMAKE_BUILD_TYPE=Release
sudo pacman -S libc++abi
cmake -S llvm -B build -G Ninja -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;libcxx;libcxxabo" -DLLVM_USE_LINKER=gold -DCMAKE_BUILD_TYPE=Release
sudo pacman -S libc++
cmake -S llvm -B build -G Ninja -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;libcxx;libcxxabi" -DLLVM_USE_LINKER=gold -DCMAKE_BUILD_TYPE=Release
cmake --build build ninja -j 12
ssh-keygen
cat .ssh/id_rsa_proto
cat .ssh/id_rsa_proto -p
cat .ssh/id_rsa_proto.pub
sudo pacman -S bluetoothctl
sudo pacman -Ss bluetooth
sudo pacman -S bluez bluez-utils
bluetooth
bluetoothc
yay -S blueman
blueman-applet &
groups pulse
nvim /etc/pulse/system.pa
sudo nvim /etc/pulse/system.pa
sudo nvim /etc/bluetooth/main.conf
git clone git@gitlab.com:protojour/authly.git
nvim ../../.ssh/config
git clone git@gitlab.com-proto:protojour/authly.git
sudo pacman -S nodejs
sudo pacman -S npm
sudo pacman -S richgo
sudo pacman -S redis
git checkout ldapwork
git revert HEAD^
git revert --abort
hwclock
sudo hwclock
sudo hwclock --show
sudo pacman -S ntp
systemctl enabled ntpd.service
systemctl enable ntpd.service
systemctl start ntpd.service
ntptime
sudo pacman -R ntp
sudo pacman -S chrony
systemctl enable chronyd.service
systemctl start chronyd.service
systemctl status chronyd.service
chronyc
chronyc tracking
nvim /etc/chrony.conf
sudo nvim /etc/chrony.conf 
chronyc sources
chronyc makestep
sudo pacman -S the_silver_searcher
xrandr --output eDP1 --scale 2x2
xrandr --output eDP-1 --scale 2x2
xrandr --output eDP-1 --scale 1x1
xrandr --output eDP-1 --scale 0.9x0.9
pip install neovim
pip install ruby 
npm install -g neovim
sudo npm install -g neovim
sudo pacman -S python2
ruby
pip remove ruby 
pip uninstall ruby 
sudo pacman -S ruby
python2-pip
sudo pacman -S python2-pip
pip2 install neovim
neovim-ruby-host
git remote set-url origin git@github.com:Tloe/dotfiles.git
node
gem environment
gem install neovim
gem install msgpack
go build
sudo pacman -R gopls
rm go.sum
got get
go get ./...
gocode
ps aux | gocode
kill 37222
xrandr --output eDP-1 --scale 0.8x0.8
nvim Desktop
mv Desktop/todo .
mv Downloads/todo .
cd public
git config --global alias.co checkout
git config --global alias.br branch
git config --global alias.ci commit
git config --global alias.st status
sudo pacman -S gitk
yay -S gitk
sudo pacman -S wish
sudo pacman -S tk
git ui
conan build ..
sudo pacman -S steam
go run cmd/authly-cli/main.go show ldap
go run cmd/authly-cli/main.go show authority ldaphost 
go run cmd/authly-cli/main.go set authority ldaphost
git config --global user.emal "terje.loe@protojour.com"
git config --global user.name "Terje Loe"
git config --global user.email "terje.loe@protojour.com"
git log HEAD..origin/master
git log HEAD..origin/ldapwork
git show bf34d0755c9aac936502703f693b5d46363baf12
git merge ldapwork
go run cmd/authly-cli/main.go show authority ldaphost
git help config
cat .gitconfig \
: 1622542445:0;cat .gitconfig
go run cmd/authly-cli/main.go show authority ldaphost -h
go get richgo
git ci -m 'remove debug output'
cd dev/protojour
git clone git@gitlab.com:protojour/memoriam.git
git clone git@gitlab.com-proto:protojour/memoriam.git
git ci -m 'added dist stage to gitlab ci for tagged versions on gitlab'
git tag 0.1.0 -m 'Dist tag version'
git push --follow-tags
git remote url
git remote --url
git remote get-url
cat ~/.ssh/config
git ci -m 'rename entity id to profile id'
go run cmd/authly-cli/main.go set authority ldaphost Name "Terje Loe" Enabled true Host ldap.forumsys.com Port 389 TLSEnabled false 
go run cmd/authly-cli/main.go set authority ldap host Name "Terje Loe" Enabled true Host ldap.forumsys.com Port 389 TLSEnabled false 
git ci -m 'changed cli show authority command path'
cd protojour/authly
cat conftest.py
cat test_register_authenticate.py
git ci -m 'Take out python-authly for now. Tests doesn't do anything and cause trouble
git ci -m 'Take out python-authly for now. Tests doesn't do anything and cause trouble'
git ci -m "Take out python-authly for now. Tests doesn't do anything and cause trouble"
go run cmd/authly-cli/main.go set authority ldap host Name blah Enabled true
sudo pacman -S chromium
sudo pacman -S wine
yay -S q4wine
wine Fusion\ 360\ Client\ Downloader.exe
kill -9 24350
kill -9 24363
kill -9 24309
ps aux | grep fusion
git log origin/master..HEAD
go run cmd/authly-cli/main.go set authority ldap host -h
go run cmd/authly-cli/main.go set authority ldap host Name tirp-ldap Enabled true Host ldap Port 389
go run cmd/authly-cli/main.go show authority ldap Enable true 
go run cmd/authly-cli/main.go set authority authlyid Enable false
go run cmd/authly-cli/main.go set authority AuthlyID Enable false
go run cmd/authly-cli/main.go set authority ldap host
go run cmd/authly-cli/main.go set authority ldap args
sudo pacman -S unzip
unzip lets-go-v1.6.1.zip
cd lets-go
cd pdf
go test pkg/cli/ TestCli
go test pkg/cli/. TestCli
go test pkg/cli/cli_test.go TestCli
go test pkg/cli/cli_test.go
go test -v .pkg/cli/ -run TestCli
go run cmd/authly-cli/main.go set authority authlyid Enabled false
go run cmd/authly-cli/main.go set authority authlyid Enabled true
go run cmd/authly-cli/main.go set user 
go run cmd/authly-cli/main.go set user Name Trude Username trudis
go run cmd/authly-cli/main.go show user trudis
go run cmd/authly-cli/main.go set authority ldap host  Name tirp Enabled true
go run cmd/authly-cli/main.go set authority ldap host  Name tirp Enabled true Host Hello
go run cmd/authly-cli/main.go set authority ldap host Port 3434
go run cmd/authly-cli/main.go set authority ldap host Name tirp Port 3434
go run cmd/authly-cli/main.go set authority AuthlyID
go test -v .pkg/app/ -run TestAPP
go test -v .pkg/app/ -run TestApp
go test -v ./pkg/app/ -run TestApi
git tag 0.2.0
man docker
man docker-build
git add ../authly-admin/ ../.gitlab-ci.yml
git ci -m Â´Update svelte code and added build stage to gitlab ci. Fix for gitlab ci failÂ´
git ci -m "Update svelte code and added build stage to gitlab ci. Fix for gitlab ci fail"
cd dev/private
git tag 0.2.1
go get -u github.com/gorilla/context
kill 4102
ps aux | grep nvim
kill 16101
kill 2220
ping ldap.forumsys.com
git ci -m "Refactor routing code + add profile json info to /authly/auth/session"
git tag 0.2.2
cd slapd.d
cd tests/ldap
cd tests/ldap/\
: 1624355557:0;cd tests/ldap/
git pull --rebase
cat ../.gitlab-ci.yml
git describe
git describe --abbrev=0
git describe --tags `git rev-list --tags --max-count=1`
git ls-remote --tags .
ls ~
yay -S logiops
sudo systemctl enable logid
sudo logid -v
https://apple.stackexchange.com/questions/388622/zsh-zprofile-zshrc-zlogin-what-goes-where
go run cmd/authly-cli/main.go set authority AuthlyID Enabled true
go run cmd/authly-cli/main.go set service Name tetestis OwnerPID 1 ServiceKey TESTSERVICE
go run cmd/authly-cli/main.go set service Name tetasdasd OwnerPID 1
sudo pacman -Syuu
go test -v ./pkg/app/ -run TestApp
go test -v ./pkg/app/ -run TestAPI
nvim /etc/systemd/logind.conf
autorandr -s home
go run cmd/authly-cli/main.go set service
go run cmd/authly-cli/main.go set authority AuthlyID Enabled false
go run cmd/authly-cli/main.go set authority LDAP Enabled true
go run cmd/authly-cli/main.go remove service testing
go run cmd/authly-cli/main.go set service Name testing OwnerPID 4 ServiceKey testingkey
go run cmd/authly-cli/main.go remove service testingKey
go run cmd/authly-cli/main.go remove user username test
go run cmd/authly-cli/main.go set authority ldap host Name testhost Enabled false
go run cmd/authly-cli/main.go set authority ldap host Name testhost Enabled false Host bla Port bla TLSPort blabla TLSEnabled false ReadOnlyDN asd ReadOnlyPass asd BaseDN asdf
go run cmd/authly-cli/main.go set authority ldap host Name testhost Enabled true
go run cmd/authly-cli/main.go set authority ldap host Name testy Enabled true
git ci -m 'Added dispatching system. Lots of changes everywhere for authly to use this system'
pkill go
pkill go-build*
pkill go-build
kill 123735 434722 840004 853765 856704 858950 
kill 7492
kill 1155184
kill 123735
kill 434865
sudo pacman -S htop
cd authlyweb
npm dev start
npm start dev
lks
ps aux | go
pkill 436239
pkill 436361
git ddiff
pkill -9 go
go test -v ./pkg/app/ -run TestAuthlyCli
go test -v . -run TestAuthlyCli
go test -v . -run TestAuthlyCli test
cd /etc/pacman.d
cat mirrorlist
nvim mirrorlist
pacman mirrors
pacman-mirrors
pacman-mirrors --help
pacman-mirrors -i
sudo pacman-mirrors -i
sudo pacman -Scc
sudo pacman -Syu $(pacman -Qq)
cd /var/cache
cd pacman
pkill redis-server
pkill -9 redis-server
go test -v test -run TestAuthlyCli
go test -v ./pkg/cli/ -run TestCli
go test -v ./pkg/test/ -run TestCli
go test -v ./pkg/test/ -run TestSetNewUser
go test -v ./test/ -run TestSetNewUser
go test -v ./test/ -run TestSetUserUpdate
go test -v ./test/ -run
go run cmd/authly-cli/main.go set user Name "Toby" Username test
sudo pacman -S solaar
sudo nvidia-settings
pacman -Q | grep nvidia
uname -u
sudo solaar
go test -v ./test/
go run cmd/authly-cli/main.go show user test a
go run cmd/authly-cli/main.go set user Username test Email hello@me.com
redis-cli --help
kill 840487
kill -9 840487
go run cmd/authly-cli/main.go -p 400 show user test
go run cmd/authly-cli/main.go authly -p 400 show user test
go run cmd/authly-cli/main.go --port 4000 show user
go run cmd/authly-cli/main.go --port 4000 show user test
go run cmd/authly-cli/main.go -p 4000 show user test
go run cmd/authly-cli/main.go -p 6000 show user test
go run cmd/authly-cli/main.go show user test -p 4000
kill -9 8431111
kill -9 843111
kill -9 988302
cd /etc/ssl/certs/
nvim certificates.py
kill -9 993183
kill -9 1099608
kill -9 1106728
kill -9 1106885
kill 1106885
kill -9 1117462
kill -9 1117586
go run cmd/authly-cli/main.go show user test
kill -9 1140312
kill -9 1140427
kill -9 1737816
kill -9 1737953
kill -9 1738184
kill -9 1738076
kill -9 1738800
kill -9 1738910
kill -9 1752915
kill -9 1753201
kill -9 1753732
kill -9 1754012
kill -9 1757470
kill 1758515
kill -9 1758515
kill -9 1765134
kill -9 1767137
kill -9 1768058
go run cmd/authly-cli/main.go show authentication ldap
go run cmd/authly-cli/main.go show user system
go run cmd/authly-cli/main.go show service 
go run cmd/authly-cli/main.go show servicecontract AuthlyAdminServiceKey
cd cmd/authly-cli
cd /home/t/dev/protojour/authly/authly/cmd/authly-cli/
go run /home/t/dev/protojour/authly/authly/internal/cmd/authly-cli/main.go set user Name Test User AuthlyIDSecret password Email testuser@email.com Username testuser
Se
go test -v . -run TestSetNewUser
go test -v ./cli -run TestSetNewUser
go test -v ./pkg/cli -run TestSetNewUser
go test -v $(go list ./pkg/internal/store)
go run cmd/authly-cli/main.go show authority AuthlyID
go test -v $(go list ./pkg/cli) -run TestSetAuthority
go run cmd/authly-cli/main.go show authority 
go run cmd/authly-cli/main.go show servicecontract 
go run cmd/authly-cli/main.go show servicecontract testservicekey
go test -v $(go list ./pkg/cli) -run TestSetServiceContractForUser
go test -v $(go list ./pkg/cli) -run TestSetServiceContractForService
go test -v $(go list ./internal/router
go test -v $(go list ./internal/router)
cd python-authly
go run cmd/authly-serve/main.go --test
go run cmd/authly-serve/main.go --config "hola.go"
go run cmd/authly-serve/main.go -config "hola.go"
go run cmd/authly-serve/main.go -config hola.go
go run cmd/authly-serve/main.go -config hola.go -test
go run cmd/authly-serve/main.go -help
go run cmd/authly-cli/main.go set authority LDAP host
go run cmd/authly-cli/main.go set authority ;dap
go run cmd/authly-cli/main.go set authority ldap host 
go run cmd/authly-cli/main.go set authority ldap host Name
go run cmd/authly-serve/main.go -test
go test -v $(go list ./...) -run UserAuthenticateWithLdap
go test -v $(go list ./...) -run TestUserAuthenticateWithLdap
go test -v $(go list ./pkg/app/app_test)
go test -v $(go list ./...) 
go test -v $(go list ./internal)
go test -v $(go list ./internal/store)
go test -v $(go list ./internal/session)
go test -v $(go list ./internal/sessions)
git help remote
git remote set-url origin git@gitlab.com:protojour/authly/authly-core.git
cat id_rsa_proto
git config --get remote.origin.url
git remote set-url origin git@gitlab.com-proto:protojour/authly/authly-core.git
git ci -m 'big rewrite for authly to work with dispatch system'
go test -v $(go list ./pkg/app/api_test\
)
go test -v $(go list ./pkg/app/api_test)\
)
go test -v $(go list ./..)
git ci -m 'fix tests + some minor fixes'
git ci -m 'fix api Authorization header test'
cd authlylogin
npm run dev
git ci -m "Test for json body on auth/session in authentication tests"
go test -v $(go list ./...))
go test -v $(go list ./internal/dispatch/)
git ci -m 'basic dispatcher tests'
go test -v $(go list ./internal/dispatch)
git remote set-url origin git@gitlab.com-proto:protojour/memoriam/memoriam-core.git
cd ono
go test -v $(go list ./pkg/cli)
0;97;40M0;97;40m
git ci -m 'Sending flushdb instead of flushall to redis. Fix for issue #9'
gotip version
git ci -m 'more correct way of handling shutdown. + fix for go vet in gitlab-ci and latest go version'
git tag 0.2.3
sudo pacman -S element-matrix
go test -v $(go list ./pkg/app)
ssh root@10.0.8.6
go run cmd/authly-cli/main.go set authority ldap host Name protojour ldap Enabled true Host 10.0.8.2 Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN cn=gitlab-ro,dc=protojour,dc=com ReadOnlyPass hemmelig BaseDN dc=protojour,dc=com
go run cmd/authly-cli/main.go set authority ldap host Name protojour ldap Enabled true Host "10.0.8.2" Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN cn=gitlab-ro,dc=protojour,dc=com ReadOnlyPass hemmelig BaseDN dc=protojour,dc=com
go run cmd/authly-cli/main.go set authority ldap host Name protojour ldap Enabled true Host "10.0.8.2" Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN "cn=gitlab-ro,dc=protojour,dc=com" ReadOnlyPass hemmelig BaseDN "dc=protojour,dc=com"
blueman-applet
sudo pacman -S snixembeded
sudo yay -S snixembeded
sudo yay -S snixembed-git
yay -S snixembed-git
yay -R snixembed-git
autorandr -s work
pa-applet
mhwd-gpu --help
mhwd-gpu --status
mhwd --help
ssh -l pi -p 2222 172.22.238.77
xrandr --output eDP-1 --scale 0.7x0.7
go test -v $(go list ./pkg/app/api_test) -run UserAuthenticateWithLdapForumsys
sudo pacman -S ldapsearch
yay -S ldapsearch
ldap
sudo pacman -S openldap
ldapsearch -x -b "uid=terje.loe,dc=protojour,dc=com" -H ldap://10.0.8.2
ldapsearch -x -b "cn=Terje Loe,dc=protojour,dc=com" -H ldap://10.0.8.2
cd tests
go test -v $(go list ./pkg/app/api_test) -run UserAuthenticateWithLdap
go test -v $(go list ./...) -run TestSetAuth
go test -v $(go list ./pkg/cli) -run TestSetAuth
go test -v $(go list ./...) -run TestSetNewUserMissingRequiredName
go test -v $(go list ./pkg/cli/) -run TestSetNewUserMissingRequiredName
kill -9 192727
kill -9 191881
kill -9 46067 46770 46226 46917 48011 48281 56654 56844 57228 57368 57652 57795 58027 58170 58436 58582 58814 58962 59236 59391 59627  59800 60073 60231 60472 60609 60836 60974  62042 62154
kill -9 190382
kill -9 191048
go run cmd/authly-cli/main.go set authority ldap host usertemplate Name "{givenName} {sn}" Email "{email}" Username "LDAP{uid}"
go run cmd/authly-cli/main.go set authority usertemplate ldap  Name "{givenName} {sn}" Email "{email}" Username "LDAP{uid}"
go test -v $(go list ./pkg/app/api_test) -run TestUserAuthenticateWithLdap
go test -v $(go list ./pkg/app/api_test) -run TestUserAuthenticateWithProtojourLdap
go run cmd/authly-cli/main.go show authority usertemplate ldap host
go run cmd/authly-cli/main.go show authority usertemplate protojourldap host
go run cmd/authly-cli/main.go set authority ldap host Name "protojour ldap" Enabled true Host "10.0.8.2" Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN "cn=gitlab-ro,dc=protojour,dc=com" ReadOnlyPass hemmelig BaseDN "dc=protojour,dc=com"
autorandr -s laptop
autorandr -s laptop --force
sudo pacman -S pcmanfm
fdisk
fdisk -f
cat /proc/mounts
mount -l
mkdir temp
mount /dev/sda temp -o umask=000
umount temp
sudo mount /dev/sda temp -o umask=000
sudo hdparm -r0 /dev/sdb
sudo mount /dev/sdb temp -o umask=000
sudo rm -rf temp
unzip ROG-STRIX-B550-I-GAMING-ASUS-2407.ZIP
sudo pacman -S unetbootin
df -Th
unoumt /run/media/t/CCCOMA_X64FRE_EN-GB_DV9
sudo unoumt /run/media/t/CCCOMA_X64FRE_EN-GB_DV9
dosfsck /dev/sda
sudo dosfsck /dev/sda
sudo hdparam -r0 /dev/sda
sudo pacman -S hdparam
sudo hdparm -r0 /dev/sda
smartctl
sudo pacman -S smartctl
sudo umount /run/media/t/n30ur07w
mount /dev/sdb temp
sudo mount /dev/sdb temp
sudo umount /run/media/t/CCCOMA_X64FRE_EN-GB_DV9
gparted
sudo gparted
mount /dev/sda temp
sudo mount /dev/sda temp
sudo umount temp
ventoyweb
cat /var/log/ventoy
sudo ventoyweb
kill -9 34529 
kill -9 33982
kill -9 41414
go test -v $(go list ./...) -run SetNewUserMissingRequiredName
kill -9 42187
git add internal/ pkg/
git diff staged
cd tests/
man ldapadd
cat config1.json
nvim ldap.ldif
cat ldap.ldif
mv ldap.ldif proto-ldap.ldif
cat tests/ldap/ldap.ldif
cat tests/docker-compose.yml
git add authly/
sudo pacman -S docker-compose
git ci -m 'updates from work laptop'
docker-compose up -f localdev-compose.yml
docker-compose --file localdev-compose.yml up
mv localdev-compose.yml docker-compose.yml
rm docker-compose.yml
chmod +x localdev-compose.yml
docker-compose up
systemctl restart docker.service
chmod -x localdev-compose.yml
groups t
sudo groupadd docker
sudo usermod -aG docker t
su -s t
docker run hello-world
rm -rf ldap/
rm -rf ldap
sudo rm -rf ldap/
go test -v $(go list ./...) -run UserAuthenticateWithForumsysLdap
kill -9 144880 
kill -9 145802
mkdir tools
git clone https://github.com/go-delve/delve
cd delve
go install github.com/go-delve/delve/cmd/dlv
kill -9 149474
kill -9 151136
docker-compose -f localdev-compose.yml up
docker-compose up --help
cd files/testfiles
chown t:t proto-ldap.ldif
sudo chown t:t proto-ldap.ldif
nvim proto-ldap.ldif
sudo rm -rf ldap
kill 159530
kill -9 159530
kill -9 161082
kill -9 162369
kill -9 163401
go test -v $(go list ./...) -run UserAuthenticateWithProtojourLdap
go test -v $(go list ./pkg/app/config_test) -run UserAuthenticateWithProtojourLdap
[200~docker run \\
	--volume ./bootstrap.ldif:/container/service/slapd/assets/config/bootstrap/ldif/50-bootstrap.ldif \\
	osixia/openldap:1.5.0 --copy-service~
docker run --volume ./files/testfiles/proto-ldap.ldif:/container/service/slapd/assets/config/bootstrap/ldif/50-bootstrap.ldif osixia/openldap:1.5.0 --copy-service
mv files/testfiles/proto-ldap.ldif files/testfiles/protoldap.ldif
docker run --volume ./files/testfiles/protoldap.ldif:/container/service/slapd/assets/config/bootstrap/ldif/50bootstrap.ldif osixia/openldap:1.5.0 --copy-service
ldapsearch -x -b "*\" -H ldap://0.0.0.0
ldapsearch -x -b "*" -H ldap://0.0.0.0
ldapsearch -x -b "dc=protojour,dc=com" -H ldap://10.0.8.2
ldapsearch -x -b "*" -H ldap://10.0.8.2
ldapsearch -x -b "dc=com" -H ldap://0.0.0.0
ldapsearch -x -b "cn=gitlab-ro,dc=protojour,dc=com" -H ldap://0.0.0.0
ldapadd -H ldap://0.0.0.0 -x -D cn=admin,dc=protojour,dc=com  -f files/testfiles/protoldap.ldif
ldapadd -H ldap://0.0.0.0 -x -D cn=admin,dc=protojour,dc=com -w hemmelig  -f files/testfiles/protoldap.ldif
ldapadd -H ldap://0.0.0.0 -x -D cn=admin,dc=protojour,dc=com -w partially-f files/testfiles/protoldap.ldif
ldapadd -H ldap://0.0.0.0 -x -D cn=admin,dc=protojour,dc=com -w "partially -f files/testfiles/protoldap.ldif
ldapadd -H ldap://0.0.0.0 -x -D cn=admin,dc=protojour,dc=com -w partially\!mp0rtant -f files/testfiles/protoldap.ldif
ldapadd -H ldap://0.0.0.0 -x -D cn=admin,dc=protojour,dc=com -w admin -f files/testfiles/protoldap.ldif
ldapsearch -x -b "cn=admin,dc=protojour,dc=com" -H ldap://0.0.0.0
rm files/testfiles/protoldap.ldif
ldapsearch -x -b "dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -H ldap://0.0.0.0
ldapsearch -x -b "dc=protojour,dc=com" -D cn=gitlab-ro,dc=protojour,dc=com -H ldap://0.0.0.0
ldapsearch -x -b "dc=protojour,dc=com" -D cn=gitlab-ro,dc=protojour,dc=com -w gitlab-ro -H ldap://0.0.0.0
ldapsearch -x -b "dc=protojour,dc=com" -D cn=gitlab-ro,dc=protojour,dc=com -w hemmelig -H ldap://0.0.0.0
ldapsearch -x -b "dc=protojour,dc=com" -H ldap://0.0.0.0
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w readonly -H ldap://0.0.0.0
ldapsearch -x -b "cn=Terje Loe,dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w readonly -H ldap://0.0.0.0
kill -9 228357
git add localdev-compose.yml
git ci -m 'Setup of ldap as service in gitlab-ci for testing.'
docker run --volume ./files/testfiles/proto-ldap.ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom/proto-ldap.ldif osixia/openldap:1.5.0 --copy-service
docker run --volume /files/testfiles/proto-ldap.ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom/proto-ldap.ldif osixia/openldap:1.5.0 --copy-service
docker run --volume files/testfiles/proto-ldap.ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom/proto-ldap.ldif osixia/openldap:1.5.0 --copy-service
$(pwd)
cd $(pwd)
cd $(pwd)/files
docker run --volume $(pwd)/files/testfiles/proto-ldap.ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom/proto-ldap.ldif ldap_1 --copy-service
docker run --name --help
docker run --name
docker exec -it osixia/openldap:1.5.0 echo hello
docker exec -it ldap_1 echo hello
docker exec -it --name authly_ldap_1 echo hello
docker exec --name authly_ldap_1 --itecho hello
docker exec --name authly_ldap_1 --it echo hello
docker exec b110240cc194 --it echo hello
docker exec --it b110240cc194  echo hello
docker exec -it b110240cc194  echo hello
docker exec -it b110240cc194 ldapadd
ldapadd -H ldap://0.0.0.0 -x -D cn=admin,dc=protojour,dc=com -w admin -f files/testfiles/proto-ldap.ldif
docker exec -it docker:latest ldapadd -H ldap://0.0.0.0 -x -D cn=admin,dc=protojour,dc=com -w admin -f files/testfiles/proto-ldap.ldif
docker run docker:latest
docker run docker:latest -d
docker run --detach docker:latest
docker run -d docker:latest
docker run --detach --rm docker:latest
docker exec -it 326d2e281af70d2dd339111237196cc3d701f987d572d845f9e4c41e1300fbc4 ldapadd -H ldap://0.0.0.0 -x -D cn=admin,dc=protojour,dc=com -w admin -f files/testfiles/proto-ldap.ldif
ldapsearch -x -b "cn=Terje Loe,ou=users,dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w readonly -H ldap://0.0.0.0
docker-compose run --volume $(pwd)/files/testfiles/proto-ldap.ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom/proto-ldap.ldif osixia/openldap:1.5.0 --copy-service
docker run
docker run --volume $(pwd)/files/testfiles/proto-ldap.ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom/proto-ldap.ldif osixia/openldap --copy-service
docker run --volume $(pwd)/files/testfiles/proto-ldap.ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom/proto-ldap.ldif osixia/openldap:1.5.0 --copy-service
da
ls files/testfiles
rm -rf files/testfiles/protoldap.ldif
git ci -m 'debug gitlab-ci'
docker exec -it b110240cc194 ldapadd -H ldap://0.0.0.0 -x -D cn=admin,dc=protojour,dc=com -w admin -f files/testfiles/proto-ldap.ldif
docker exec -it 845e3236712a ldapadd
ldapadd
docker exec -it 845e3236712a ldapadd -H ldap://0.0.0.0 -x -D cn=admin,dc=protojour,dc=com -w admin -f files/testfiles/proto-ldap.ldif
docker --copy-service
docker run --help --copy-service
docker run --help
docker run --help | grep copy-service
docker exec -it 845e3236712a ldapadd -H ldap://0.0.0.0 -x -D cn=admin,dc=protojour,dc=com -w admin 
docker run osixia/openldap:1.5.0
docker run -it osixia/openldap:1.5.0 /bin/bash
docker cp osixia/openlidap:1.5.0:/container/tool/run temp
docker cp osixia/openlidap:/container/tool/run temp
docker cp 845e3236712a:/container/tool/run temp
cat authly/files/testfiles/proto-ldap.ldif
man bash
git st 
until
touch /tmp/hello
git restore --staged localdev-compose.yml
ls /home
ls l
ls files
sudo st
git add i3/
git ci -m 'Fix for ldap gitlab-ci?'
until [ -f "/tmp/hello" ]; do true; done;
ipconfig
ip -a
route google.com
tracepath google.com
lspco
lspci
nano /etc/resolv
sudo \nano /etc/resolv
sudo chattr +i /etc/resolv
sudo cat /etc/resolv
sudo chattr -i /etc/resolv
sudo rm /etc/resolv
sudo nvim /etc/resolv
sudo chattr +i /etc/resolv.conf
sudo chattr -i /etc/resolv.conf
pulse
git add ../.gitlab-ci.yml
git add pkg/app/api_test/
git ci -m 'removed protojour ldap test for now'Â´
cd go/pkg/mod/golang.org/x/tools@v0.1.3/internal/lsp/testdata/danglingstmt
ps
systemctl enabled docker.service
systemctl enable docker.service
systemctl start docker.service
go run cmd/authly-cli/main.go show authority ldap host protojourlda
cat files/testfiles/proto-ldap.ldif
go run cmd/authly-cli/main.go show authority host LDAP
go run cmd/authly-cli/main.go show authority ldap host 
man nodejs
npm --help
go run cmd/authly-cli/main.go show host
go run cmd/authly-cli/main.go show service contract 
go run cmd/authly-cli/main.go show service contract AuthlyIdServiceKey
git restore internal/router/api/cliapi/setauthlyid.go
git restore internal/router/api/cliapi/setldap.go
kill -9 267779
kill -9 278605
sudo zerotier-one -v
zerotier-one
sudo zerotier-one
sudo zerotier-one --help
sudo zerotier-cli
go test -v $(go list ./...) | less
go test -v $(go list ./...) | grep serve | less -N
man wc
go test -v $(go list ./...) | grep serve | wc 
go test -v $(go list ./...) | grep serve | wc -l
go test -v $(go list ./...) | grep 'serve' | wc -l
go test -v $(go list ./...) | grep 'Clean shutdown' | wc -l
go test -v $(go list ./...) | grep 'Serving Authly on' | wc -l
sudo pacman -S netstat
sudo pacman -S net-tools
netstat -tulnap
netstat -tulnap | grep 5000
netstat 
go run cmd/authly-cli/main.go set authority authlyu
go run cmd/authly-cli/main.go set authority authlyid
go run cmd/authly-cli/main.go show  
go run cmd/authly-cli/main.go show service -h
go test -v $(go list ./pkg/cli/) -run TestSetContractForUser
lin
kill -9 568485 569349 570327
cdn
cd ftplugin
cd .local/share/nvim/plugged/coc.nvim
yarn install
go list ...
godoc --http :6060
sudo pacman -S godoc
go doc
richgo
sud pacman -S richgo
go install github.com/kyoh86/richgo
richgo --version
richgo -version
kill -9 1084536
sudo netstat -tulnap | grep 5000
sudo netstat -tulnap
go clean -testcache $(go list ./...)
go test -v $(go list ./pkg/app/api_test/)
$(go list ./...)
go list ./...)
go test -v $(go list ./pkg/app/config_test)
go test -v $(go list ./pkg/cli/)
go test -v ./pkg/app/)
go test -v ./pkg/app/
go test -v $(go list ./pkg/app...)
find . -name "*_test.go"
go list ./pkg/app/...
go test -v $(go list ./pkg/app/)
go test -v $(go list ./pkg/app/api_test)
go test -v $(go list ./pkg/app/...)
nvim ../.gitlab-ci.yml
mkdir i3status-rust
nvim i3status-rust/config.toml
go run cmd/authly-cli/main.go show service contract
rm temp
git ci -m 'Cleanup of cli cmds and cliap. Also not running tests in parallel as we use the same redis database and not to crash authly instance ports'
xsetroot
xsetroot -solid '#eeeee'
xsetroot -solid '#eeeeee'
xsetroot -solid '#bebebe'
xsetroot -solid '#8e8e8e'
xsetroot -solid '#4747474'
xsetroot -solid '#474747'
xsetroot -solid '#2f2f2f'
hostname -s
nvim i3/config
git add i3/config
gut pull
rm i3status-rust/config.toml
hostname
git ull
go run cmd/authly-cli/main.go show authority -h 
go run cmd/authly-cli/main.go show authority usertemplate
go run cmd/authly-cli/main.go show authority usertemplate LDAP protiojourldap
go run cmd/authly-cli/main.go set user Username test Name testy Email hello@me.com
go run cmd/authly-cli/main.go set user Username test Name est
go run cmd/authly-cli/main.go set authority usertemplate LDAP protojourldap  Name "{givenName} {sn}" Email "{email}" Username "LDAP{uid}"
go run cmd/authly-cli/main.go show authority LDAP protojourldap
go run cmd/authly-cli/main.go show authority LDAP
go run cmd/authly-cli/main.go show authority LDAP -h
go run cmd/authly-cli/main.go show authority LDAP host
go run cmd/authly-cli/main.go show authority usertemplate LDAP protojourldap
go run cmd/authly-cli/main.go show authority LDAP host protojourldap
go run cmd/authly-cli/main.go show authority ldap host protojourldap
go run cmd/authly-cli/main.go show authority ldap 
go run cmd/authly-cli/main.go show authority ldap host test
go run cmd/authly-cli/main.go set authority ldap host Name protojourldap Enabled true Host 10.0.8.2 Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN cn=gitlab-ro,dc=protojour,dc=com ReadOnlyPass hemmelig BaseDN dc=protojour,dc=com
go run cmd/authly-cli/main.go set authority ldap Enable true
go run cmd/authly-cli/main.go set authority ldap Enabled true
go run cmd/authly-cli/main.go set authority ldap Enabled trie
go run cmd/authly-cli/main.go show authority ldap -h
go run cmd/authly-cli/main.go show authority ldap host -h
go run cmd/authly-cli/main.go show authority ldap usertemplate -h
go run cmd/authly-cli/main.go show authority ldap host
go run cmd/authly-cli/main.go show authority ldap usertemplate
go run cmd/authly-cli/main.go set authority usertemplate ldap protojourldap  Name "{givenName} {sn}" Email "{email} " Username "LDAP{uid}"
go run cmd/authly-cli/main.go show authority usertemplate ldap protojourldap
go run cmd/authly-cli/main.go set authority usertemplate ldap protojourldap  Name "{givenName} {sn}" Email " {email}" Username "LDAP{uid}"
go run cmd/authly-cli/main.go set authority usertemplate ldap protojourldap  Name "{givenName} {sn}" Email "{email}" Username "LDAP{uid}"
go run cmd/authly-cli/main.go set authority usertemplate ldap protojourldap  Name "{givenName} {sn}" Email "{asddemail}" Username "LDAP{uid}"
go test -p 1 -v $(go list ./internal/authorities)
go test -p 1 -v $(go list ./internal/authorities/ldap)
go test -p 1 -v $(go list ./internal/authorities/ldap/host)
go test help
go test -p 1 -v $(go list ./internal/authorities/ldap/)
go run cmd/authly-cli/main.go set authority ldap Enable false
go run cmd/authly-cli/main.go set authority ldap Enabled false
go run cmd/authly-cli/main.go set authority 
go run cmd/authly-cli/main.go set authority host -h
go run cmd/authly-cli/main.go set authority host
go test -p 1 -v $(go list ./pkg/app/api_test\
)
go test -p 1 -v $(go list ./pkg/app/api_test)\
)
go test -p 1 -v $(go list ./pkg/app/api_test/)
go run cmd/authly-cli/main.go set authority usertemplate ldap protojourldap  Name "{givenName} {sn}" Email "{mail}" Username "LDAP{uid}"
go run cmd/authly-cli/main.go set authority usertemplate ldap protojourldap  Name "{givenName} {sn} "Email "{mail}" Username "LDAP{uid}"
go run cmd/authly-cli/main.go set authority usertemplate ldap protojourldap  Name "{givenName} {sn} " Email "{mail}" Username "LDAP   {uid}"
git ci -m 'More work towards sync + some fixes'
go run cmd/authly-cli/main.go show authority host
go run cmd/authly-cli/main.go show authority host ldap
go run cmd/authly-cli/main.go set authority usertemplate ldap protojourldap  Name "{givenName} {sn} " Email "{mail}" Username "LDAP{uid}" -h
go run cmd/authly-cli/main.go set authority usertemplate ldap protojourldap  Name "{givenName} {sn} " Email "{mail}" Username "LDAP{uid}"
kill -9 53836
git ci -m 'Sync users from ldap host'
go run cmd/authly-cli/main.go set authority usertemplate ldap protojourldap  Name "{givenName} {sn}" Email "{mail}" Username "LDAP- {uid}"
git add internal/authorities/authlyid/ internal/authorities/authorities.go internal/authorities/authority/authority.go
git ci -m 'addded host interface'
git show 22b7c9c26b00cb6da1bc1887da6937c9ac47fad1
git ci -m 'fix tests'
git rebase --edit-todo
git reset --soft HEAD~4 &&
git reset --soft HEAD~4
git reset --soft HEAD~3
git reset 'HEAD@{1}'
go run cmd/authly-serve/main.go -h
mv 20210929090555_001.pdf bekreftelsejobb.pdf
go run cmd/authly-cli/main.go set service 
go run cmd/authly-cli/main.go set service -h
git@github.com:Tloe/dotfiles.git
rm .zshrc
otp
git srt
git ci -m 'Added serviceapi endpoints for method GET for users and services.'
xrandr --output eDP-1-1 --scale 0.1x0.1
sudo pacman -S lxappearance
lxappearance
git ci -m 'Cleanup of log output'
go run cmd/authly-cli/main.go set -h
go run cmd/authly-cli/main.go set authority ldap
go run cmd/authly-cli/main.go set authority ldap -h
git add ../README.md
git ci -m 'updated README.md'
git ci -m 'rename some store functions'
git clone git@gitlab.com:protojour/authly/pyauthly.git
git clone git@gitlab-work.com:protojour/authly/pyauthly.git
git clone git@gitlab.com-proto:protojour/authly/pyauthly.git
git ci -m 'move python authly to AutlhyPy repo'
cd authly-admin
mkdir from-authly-core
git ci -m 'Added code from authly core'
git clone git@gitlab.com-proto:protojour/authly/smp.git
git add authly-admin/
git ci -m 'moved authly-admin from authly-core'
git add from-authly-core/
git ci -m 'added old tests folder from authly-core repo'
git ci -m 'deleted and moved sub projects to seperate repositories'
nvim Docker
cd smp
cd pyauthly
git add cmd/ files/ go.mod go.sum internal/ localdev-compose.yml pkg/ test
cat localdev-compose.yml
git ci -m "moved authly folder one up"
docker run Dockerfile
docker --help
systemctl status docker.service
git rebase --interactive HEAD~2
git rebase --interactive HEAD~3
git tag 0.2.4
cd Base
go run cmd/authly-cli/main.go show -h
go run cmd/authly-cli/main.go set
go run cmd/authly-cli/main.go remove authority
go run cmd/authly-cli/main.go remove
git ci -m 'updated readme with cli hiearchy'
git ci -m 'Cli hierarchy in readme format update'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w admin -H ldap://10.0.8.2
ldapsearch -x -b "cn=Terje Loe,ou=users,dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w readonly -H ldap://10.0.8.2
ldapsearch -x -b "cn=Terje Loe,ou=users,dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w admin -H ldap://10.0.8.2
ldapsearch -x -b "cn=Terje Loe,ou=users,dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w hemmelig -H ldap://10.0.8.2
ldapsearch -x -b "cn=Terje Loe,ou=users,dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w partially-H ldap://10.0.8.2
ldapsearch -x -b "cn=Terje Loe,ou=users,dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'partially!mp0rtant' ldap://10.0.8.2
ldapsearch -x -H "ldap://0.0.0.0" -D "cn=admin,dc=protojour,dc=com" -w admin -b "dc=protojour,dc=com" '(&(objectClass=groupOfNames)(member=cn=Thomas Wang,dc=protojour,dc=com))'
ldapsearch -x -H "ldap://0.0.0.0" -D "cn=admin,dc=protojour,dc=com" -w admin -b "ou=Group,dc=protojour,dc=com" '(&(objectClass=groupOfNames)(member=cn=Thomas Wang,dc=protojour,dc=com))'
ldapsearch -x -H "ldap://0.0.0.0"  -D cn=admin,dc=protojour,dc=com -w admin -b ou=Group,dc=protojour,dc=com -s sub '(&(objectClass=groupOFNames)(memberuid=thomas.wang))' DN
ldapsearch -x -H "ldap://0.0.0.0"  -D cn=admin,dc=protojour,dc=com -w admin -b ou=Group,dc=protojour,dc=com -s sub '(&(objectClass=groupOFNames)(memberuid=terje.loe))' DN
ldapsearch -x -H "ldap://0.0.0.0"  -D cn=admin,dc=protojour,dc=com -w admin -b ou=Group,dc=protojour,dc=com -s sub '(&(objectClass=groupOFNames)(memberUid=terje.loe))' DN
ldapsearch -x -H "ldap://0.0.0.0"  -D cn=admin,dc=protojour,dc=com -w admin -b ou=Group,dc=protojour,dc=com -s sub '(&(objectClass=groupOfNames)(memberUid=terje.loe))' DN
ldapsearch -x -H "ldap://0.0.0.0"  -D cn=admin,dc=protojour,dc=com -w admin -b ou=Groups,dc=protojour,dc=com -s sub '(&(objectClass=groupOfNames)(memberUid=terje.loe))' DN
ldapsearch -x -b "dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w admin -H ldap://0.0.0.0 -s sub '(&(objectClass=groupOfNames)(memberUid=terje.loe))' DN
ldapsearch -x -b "Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w admin -H ldap://0.0.0.0 -s sub '(&(objectClass=groupOfNames)(memberUid=terje.loe))' DN
ldapsearch -x -b "Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w admin -H ldap://0.0.0.0
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w admin -H ldap://0.0.0.0 -s sub '(&(objectClass=groupOfNames)(memberUid=terje.loe))' DN
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w admin -H ldap://0.0.0.0 -s sub '(&(objectClass=groupsOfNames)(memberUid=terje.loe))' DN
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w admin -H ldap://0.0.0.0 -s sub '(&(memberUid=terje.loe))' DN
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w admin -H ldap://0.0.0.0
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w admin -H ldap://0.0.0.0 -s sub '(&(memberUid=terje.loe))'
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w admin -H ldap://10.0.8.2 -s sub '(&(memberUid=terje.loe))'
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w "partially -H ldap://10.0.8.2 -s sub '(&(memberUid=terje.loe))'
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'partially!mp0rtant' -H ldap://10.0.8.2 -s sub '(&(memberUid=terje.loe))' DN
ldapsearch man
man ldapsearch
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'partially!mp0rtant' -H ldap://10.0.8.2 -s sub '(&(memberUid=terje.loe)DN)'
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'partially!mp0rtant' -H ldap://10.0.8.2 -s sub '(&(memberUid=terje.loe)(dn))'
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'partially!mp0rtant' -H ldap://10.0.8.2 -s sub '(&(memberUid=terje.loe))'
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'partially!mp0rtant' -H ldap://10.0.8.2 -s sub '(&(memberUid=terje.loe))' DN cn
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'partially!mp0rtant' -H ldap://10.0.8.2 -s sub '(&(memberUid=terje.loe))' cn
tracepath gitlab.com
go run cmd/authly-cli/main.go show contract AuthlyAdminServiceKey
go test -p 1 -v $(go list ./...) -run TestSetContractForUser
go test -p 1 -v $(go list ./pkg/cli/) -run TestSetNewUser
go test -p 1 -v $(go list ./internal/authorities/)
go run cmd/authly-serve/main.go -debug -h
go run cmd/authly-cli/main.go set group test
glxinfo
go run cmd/authly-cli/main.go set group Name test
go run cmd/authly-cli/main.go show group test
go run cmd/authly-cli/main.go remove group test
go run cmd/authly-cli/main.go set group member
go run cmd/authly-cli/main.go set group member 3
go run cmd/authly-cli/main.go set group member developer 3
go run cmd/authly-cli/main.go show profile
go run cmd/authly-cli/main.go set group member developers 4
go run cmd/authly-cli/main.go set group member developer 4
go run cmd/authly-cli/main.go set group member developers 3
go run cmd/authly-cli/main.go show group 
go run cmd/authly-cli/main.go show group members developers
go run cmd/authly-cli/main.go show group member developers
go run cmd/authly-cli/main.go show group member gitlab
go run cmd/authly-cli/main.go show group member no
git config --global core.editor nvim
git tag 0.2.5
go test -p 1 -v $(go list ./test/api_test
go run cmd/authly-cli/main.go set authority ldap host Name ForumSys Enabled true Host ldap.forumsys.com Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN cn=read-only-admin,dc=example,dc=com ReadOnlyPass password BaseDN dc=example,dc=com
go run cmd/authly-cli/main.go set authority usertemplate ldap ForumSys Name "{gn} {sn}" Email "{mail}" Username "LDAP-{uid}"
go run cmd/authly-cli/main.go set authority usertemplate ldap ForumSys Name "{cn} {sn}" Email "{mail}" Username "LDAP-{uid}" -h
docker pull rroemhild/test-openldap
ldapsearch -H ldap://localhost:10389 -x -b "ou=people,dc=planetexpress,dc=com" -D "cn=admin,dc=planetexpress,dc=com" -w GoodNewsEveryone "(objectClass=inetOrgPerson)"
go run cmd/authly-cli/main.go set authority usertemplate ldap protojourldap  Name "{cn} {sn}" Email "{mail}" Username "LDAP-{uid}"
ldapsearch -H ldap://localhost:10389 -x -b "(&(member=CN=Your Name,OU=Your OU,DC=company,DC=com)(objectClass=group))" -D "cn=admin,dc=planetexpress,dc=com" -w GoodNewsEveryone "(objectClass=inetOrgPerson)"
ldapsearch -H ldap://localhost:10389 -x -b "(&(memberUid,DC=company,DC=com)(objectClass=group))" -D "cn=admin,dc=planetexpress,dc=com" -w GoodNewsEveryone "(objectClass=inetOrgPerson)"
ldapsearch -H ldap://localhost:10389 -x -b "(&(memberUid,DC=planetexpress,DC=com)(objectClass=group))" -D "cn=admin,dc=planetexpress,dc=com" -w GoodNewsEveryone "(objectClass=inetOrgPerson)"
ldapsearch -x -b "dc=example,dc=com" -H ldap://localhost:10389
ldapsearch -x -b "(&(memberUid,DC=planetexpress,DC=com)(objectClass=group))" -H ldap://localhost:10389
ldapsearch -x -b "(&(memberUid,dc=planetexpress,dc=com)(objectClass=group))" -H ldap://localhost:10389
ldapsearch -x -b "(&(dc=planetexpress,dc=com)(objectClass=group))" -H ldap://localhost:10389
ldapsearch -x -b "(&(dc=planetexpress,dc=com)(objectClass=Group))" -H ldap://localhost:10389
ldapsearch -x -b "(&(dc=planetexpress,dc=com))" -H ldap://localhost:10389
ldapsearch -x -b "(ou=Groups,dc=planetexpress,dc=com)" -H ldap://localhost:10389
ldapsearch -x -b "(dc=planetexpress,dc=com)" -H ldap://localhost:10389
ldapsearch -x -b "ou=groups,dc=planetexpress,dc=com" -H ldap://localhost:10389
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub "(Objectclass=Group)"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub "(&(Objectclass=Group)(member))"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub "(&(Objectclass=Group)(member=*))"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub "(&(Objectclass=Group)(member)"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub "(&(Objectclass=Group)(member=cn)"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub "(&(Objectclass=Group)"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub "Objectclass=Group"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub "Objectclass=Group" member
ldapsearch -x -b "ou=Groups,dc=planetexpress,dc=com" -H ldap://localhost:10389 member
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'partially!mp0rtant' -H ldap://10.0.8.2 -s sub '(&(memberUid=terje.loe))' CN
ldapsearch -x -b "ou=Groups,dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(&(memberUid=zoidberg))' CN
ldapsearch -x -b "ou=Groups,dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(&(memberUid=zoidberg))' cn
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'partially!mp0rtant' -H ldap://0.0.0.0 -s sub '(&(memberUid=terje.loe))' CN
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'hemmelig' -H ldap://0.0.0.0 -s sub '(&(memberUid=terje.loe))' CN
ldapsearch -x -b "dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w admin -H ldap://0.0.0.0
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'admin' -H ldap://0.0.0.0 
ldapsearch -x -b "ou=Groups,dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(&(member=zoidberg))' cn
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'admin' -H ldap://0.0.0.0 -s sub '(&(memberUid=terje.loe))' CN
ldapsearch -x -b "ou=Groups,dc=planetexpress,dc=com" -H ldap://localhost:10389
ldapsearch -x -b "(&(member=uid,DC=example,DC=com)(objectClass=group))" -H ldap://ldap.forumsys.com
ldapsearch -x -b "uid=curie,dc=example,dc=com" -H ldap://ldap.forumsys.com
nvim plug.vim
update-ca-trust
sudo update-ca-trust
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub (memberUid)
ldapsearch -x -b "ou=Groups,dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(&(member=zoidberg))'
ldapsearch -x -b "ou=Groups,dc=example,dc=com" -H ldap://ldap.forumsys.com
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com (|(objectClass=groupOfNames))
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub (|(objectClass=groupOfNames))
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub (| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup)))
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub (objectclass=groupOfUniqueNames)
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(objectclass=groupOfUniqueNames)'
ldapsearch -x -b "ou=Groups,dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup))' member uniqueMember memberUid
ldapsearch -x -b "ou=Groups,dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup))'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup))'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup))' member uniqueMember memberUid
go run cmd/authly-cli/main.go set authority usertemplate ldap dockerldap  Name "{cn} {sn}" Email "{mail}" Username "LDAP-{uid}"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(cn=Philip J. Fry,ou=people,dc=planetexpress,dc=com'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(cn=Philip J. Fry'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(cn="Philip J. Fry"'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub 'cn="Philip J. Fry"'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub 'cn=Philip J. Fry'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(&(cn=Philip J. Fry)(cn=Hubert J. Farnsworth)'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(|(cn=Philip J. Fry)(cn=Hubert J. Farnsworth)'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub "(|(cn=Philip J. Fry)(cn=Hubert J. Farnsworth)"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub "(cn=%s)" "Philip J. Fry" "Hubert J. Farnsworth"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 (cn=Philip J. Fry)(cn=Hubert J. Farnsworth)"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 (cn=Philip J. Fry)(cn=Hubert J. Farnsworth)
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 (cn=Philip J. Fry cn=Hubert J. Farnsworth)
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 "cn=Philip J. Fry" "cn=Hubert J. Farnsworth"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 "cn=Philip J. Fry" "cn=Hermes Conrad"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 "cn=Philip J. Fry","cn=Hermes Conrad"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 ("cn=Philip J. Fry","cn=Hermes Conrad")
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 ("cn=Philip J. Fry" "cn=Hermes Conrad")
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup) (objectclass=group))'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup) (objectclass=group))' uid
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup) (objectclass=group))' member
ldapsearch -x -b "ou=admin_staff,dc=planetexpress,dc=com" -H ldap://localhost:10389
ldapsearch -x -b "cn=admin_staff,dc=planetexpress,dc=com" -H ldap://localhost:10389
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup) (objectclass=group))' member uniqueMember memberUid
ldapsearch -x -bs "ou=people,dc=planetexpress,dc=com" -H ldap://localhost:10389
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub (objectClass=scientists)
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(objectClass=scientists)'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub 'objectclass=scientists'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(objectclass=scientists)'
ldapsearch -x -b "ou=scientists,dc=example,dc=com" -H ldap://ldap.forumsys.com
ldapsearch -x -b "ou=people,dc=planetexpress,dc=com" -H ldap://localhost:10389
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup) (objectclass=Group))' member uniqueMember memberUid
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(| (cn=Hubert J. Farnsworth) (cn=Philip J. Fry)'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(| (cn=Hubert J. Farnsworth)'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(|(cn=Hubert J. Farnsworth)(cn=Turanga Leela)'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub "(|(cn=Hubert J. Farnsworth)(cn=Turanga Leela)"
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub "(|(cn=Hubert J. Farnsworth)(cn=Turanga Leela))"
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup))' member uniqueMember memberUid
go run cmd/authly-cli/main.go set authority host ldap Name ForumSys Enabled true Host ldap.forumsys.com Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN cn=read-only-admin,dc=example,dc=com ReadOnlyPass password BaseDN dc=example,dc=com
go run cmd/authly-cli/main.go set authority usertemplate ldap ForumSys Name "{cn} {sn}" Email "{mail}" Username "LDAP-{uid}"
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup))'
git tag 0.2.6
go run cmd/authly-cli/main.go set authority host ldap Name dockerldap Enabled true Host 0.0.0.0 Port 10389 TLSPort 10636 TLSEnabled false ReadOnlyDN cn=admin,dc=planetexpress,dc=com ReadOnlyPass GoodNewsEveryone BaseDN dc=planetexpress,dc=com
go run cmd/authly-cli/main.go set authority host ldap Name protojourldap Enabled true Host 10.0.8.2 Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN cn=gitlab-ro,dc=protojour,dc=com ReadOnlyPass hemmelig BaseDN dc=protojour,dc=com
go run cmd/authly-cli/main.go set authority usertemplate ldap protojourldap  Name "{givenName} {sn}" Email "{mail}" Username "LDAP-{uid}"
go run cmd/authly-cli/main.go set authority host ldap Name localprotoldap Enabled true Host 0.0.0.0 Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN cn=gitlab-ro,dc=protojour,dc=com ReadOnlyPass hemmelig BaseDN dc=protojour,dc=com
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'admin' -H ldap://0.0.0.0
ldapsearch -x -b "dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'admin' -H ldap://0.0.0.0 -s sub (&(objectClass=*)))
ldapsearch -x -b "dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'admin' -H ldap://0.0.0.0 -s sub '(&(objectClass=*))
ldapsearch -x -b "dc=protojour,dc=com" -H ldap://0.0.0.0 -s sub "(&(objectClass=*))" givenName sn mail uid
ldapsearch -x -b "dc=protojour,dc=com" -D cn=gitlab-ro,dc=protojour,dc=com -w 'hemmelig' -H ldap://0.0.0.0
ldapsearch -x -b "dc=protojour,dc=com" -D cn=gitlab-ro,dc=protojour,dc=com -w 'hemmelig' -H ldap://0.0.0.0 -s sub "(&(objectClass=*))" givenName sn mail uid
ldapsearch -x -b "dc=protojour,dc=com" -D cn=gitlab-ro,dc=protojour,dc=com -w 'hemmelig' -H ldap://0.0.0.0 -s sub "(&(objectClass=*))"
ldapsearch -x -b "dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'admin' -H ldap://0.0.0.0 -s sub "(&(objectClass=*))"
ldapsearch -x -b "dc=protojour,dc=com" -H ldap://0.0.0.0 -s sub "(&(objectClass=*))"
git ci -m 'rename entity package to entities'
git add internal/authorities/
git add internal/authorities/ldap/
git ci -m 'Don't try to get relative DN when memberUid is used in ldap config'
git ci -m 'Dont try to get relative DN when memberUid is used in ldap config'
git tag 0.2.7
git add files/testfiles/
git ci -m 'default readonly in proto-ldap.ldif'
git ci -m 'folder in sessions renamed from session to sessions'
git ci -m 'remove favicon + copy only needed files to docker image'
git ci -m 'Added debug to config options.'
git ci -m 'remove empty organization file for now'
git ci -m 'remove old AuthlyAdminServiceKey config'
go test -p 1 -v $(go list ./authly/internal/
git ci -m 'Cleanup of initial run setup code'
git add pkg/app/fatalonerror.go
git ci -m 'Remove old json tag from setting structs'
[21~
~cda
git ci -m 'refactor of entitties. action dispatch helper functions, and some small fixes here and there'
'system', Could not find user\
     | 2021/10/26 19:07:18 Debug: Dispatching actiontype: SetUser , action\

git ci -m 'profileID -> entityID'
git ci -m 'remove unused SyncID field in profile model'
git ci -m 'move single entity packages into entity collection packages'
cd sakura
nvim sakura.conf
autorandr -s work --force
go run cmd/authly-cli/main.go remove contract somekey 2
go test -p 1 -v $(go list ./test/api_test)
git ci -m 'contracts with entities instead of profiles'
go test -p 1 -v $(go list ./pkg/cli/)
go test -p 1 -v $(go list ./test/api_test) 
git ci -m 'Checking group contract. + some cleanups'
git ci -m 'remove storeInterface. Use redis.store directly'
go run cmd/authly-cli/main.go set group testgroup
go run cmd/authly-cli/main.go set group Name testgroup -h
go run cmd/authly-cli/main.go show group
go run cmd/authly-cli/main.go set contract
sudo pacman -S xorg-xbacklight
xbacklight
xbacklight -set = 50
xbacklight -set 50
xbacklight -set 80
xrandr --output eDP-1-1 --brightness 2
xrandr --output eDP-1-1 --brightness 1
xrandr --output eDP-1-1 --brightness 0.5
git add .config/i3/config
git restore .config/nvim/ftplugin/go.vim
git restore .config/nvim/map.vim
git ci -m \.\
: 1636307761:0;git ci -m '.'
mv authly authly-core
git add .zshrc
sudo pacman -S ripgrep
sudo pacman -S fd
fd --help
fd -h
yay -S lua-language-server
yay -S cmake-language-server
sudo pacman -S pman
yay -S cpan
5~4~4~5~9~5~
git ci -m 'some work on cli; setting contracts for users/services/groups. Need to move to other pc'
git add ftplugin/
git add init.lua lua/ plugin/
git add .config/
nvim .config/nvim/ftplugin/go.lua
git add .config/nvim/f
git add .config/nvim/ftplugin/go.lua
git add .config/nvim/ftplugin/go.lua -f
git add .config/nvim/init.lua
git add .config/nvim/init.lua -f
git add .config/nvim/lua/plugins.lua -f
git add .config/nvim/plugin/packer_compiled.lua -f
xbacklight -set 100
sudo xbacklight -set 10
sudo xbacklight -set 80
sudo xbacklight -set 100
cd .config/i3
sudo pacman -R alacritty
rm .gitignore
git restore .gitignore
rm -rf .git .gitignore
git clone \
no changes added to commit (use "git add" and/or "git commit -a")\
â¾¼  ~ git:(master) â¼· git restore .gitignore\
â¾¼  ~ git:(master) git st\
On branch master\
Your branch is ahead of 'origin/master' by 2 comm  (use "gi
cd .config/nvim/
rm nvim
rm nvim -r
xinfo
sudo pacman -S xinfo
sudo pacman -R palemoon-bin
rm kitty.conf
git reset --hard HEAD
rm -rf .git .gitignore .config/nvim .config/kitty .zshrc 
rm -rf sakura
sudo restart
sudo pacman -S gopls
git clone --depth 1 https://github.com/wbthomason/packer.nvim\\
 ~/.local/share/nvim/site/pack/packer/start/packer.nvim
cd .cache/nvim
sakura
cdt
cd Code
go test -p 1 -v $(go list ./test) -run TestSyncU
go test -p 1 -v $(go list ./test) -run TestServiceApi -testdebug
go test -p 1 -v $(go list ./test) -run TestServiceApi
Ã¸
go mod
go mod verify
cd go/bin/
go install
go install authly
goenv
go test -p 1 -v $(go list ./test) -run TestAuthenticateGroup
lib/timestamp	[no test files]\
SKIP | authly/internal/lib/voidset	[no test files]\
     | 2021/11/15 17:13:17 Database flushed!\
     | 2021/11/15 17:13:17 Test context, redis store '75' selected\
     | flag provided but not defined: -testparallel\
     | Usage of /tmp/go-build1481879582/b211/redis.test:\
     |   -test.bench regexp\
     |     	run only benchmarks matching regexp\
     |   -test.benchmem
go test -v $(go list ./test) -testparallel
go test -v $(go list ./test) -run TestAuthenticate
ng values in return values\
2021/11/16 09:24:56  A
go test -v $(go list ./test) -run TestAuthenticate -testdebug
go test -v $(go list ./test) -run TestUser
go test -v $(go list ./test) -run TestSync
git reset --soft HEAD^
go test -p 1 -v $(go list ./...) -testparallel
go fmt $(go list ./...)
go fmt $(go list ./test/)
go test -cpu 1 -v $(go list ./test)
git ci -m 'firstname and lastname on users and some other changes'
git ci -m 'rename all store to redis'
go test -cpu 1 -v $(go list ./internal/redis/redis_test
go test -cpu 1 -v $(go list ./internal/redis/redis_test)
git ci -m 'fix redis tests'
go test -cpu 1 -v $(go list ./test) --testparallel=false
go run cmd/authly-serve/main.go -debug 
git ci -m 'rename ServiceKey -> Servicename'
go test -cpu 1 -v $(go list ./test) -run TestAuth
go test -cpu 1 -v $(go list ./test) -run TestAuth -testparallel=false
go test -cpu 1 -v $(go list ./test) -testparallel=false
git ci -m 'remove service from session. Service contract will be checked when accessing data. This means we can remove SIC from authentication request.'
go test -cpu 1 -v $(go list ./...)
git ci -m 'redis.Init function instead of doing connection in New()'
go test -v $(go list ./...) -run TestConfig
git add README.md internal/
git ci -m 'remove old authlysic related'
git ci -m 'start redis with 100 databases'
git ci -m 'Fix gitlab-ci?'
cat /usr/local/go/src/runtime/asm_amd64.s
cd /usr/lib/go
cd runtime
nvim asm_amd64.s
npm install -g gitlab-ci-local
sudo npm install -g gitlab-ci-local
mkdir .gitlab-ci-local/variables.yml
mkdir .gitlab-ci-local/
nvim .gitlab-ci-local/variables.yml
gcl
gcl --help
gcl -h
go test -v $(go list ./...) -testparallel
git ci -m 'Run tests sequentially for easier debug of gitlab-ci'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub "(&(objectClass=*))" givenName sn mail uid
go test -v $(go list ./...) -run TestSync
git ci -m 'Fix ldap user sync to work with Firstname Lastname'
git ci -m 'Run tests in parallel'
sudo netstat
netstat -tuln
netstat -l
netstat
netstat -nabo
netstat -nao
netstat -nao | grep authly
netstat -nao | grep 5000
go run cmd/authly-serve/main.go -p 5001
cat /tmp/authlyport
git ci -m 'store the port for authly in /tmp so cli can know where to connect'
git commit ammend
git commit amend
docker run --rm -p 10389:10389 -p 10636:10636 rroemhild/test-openldap
ldapsearch -H ldap://localhost:10389 -x -b "(&(memberUid,DC=planetexpress,DC=com)(objectClass=group))" -D "cn=admin,dc=planetexpress,dc=com" -w GoodNewsEveryone
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=read-only,dc=protojour,dc=com -w 'hemmelig' -H ldap://0.0.0.0 -s sub '(&(memberUid=terje.loe))' CN
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'partially!mp0rtant' -H ldap://10.0.0.0 -s sub '(&(memberUid=terje.loe))' cn
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'partially!mp0rtant' -H ldap://0.0.0.0 -s sub '(&(memberUid=terje.loe))' cn
ldapsearch -x -b -D cn=admin,dc=protojour,dc=com -w 'admin' -H ldap://0.0.0.0 -s sub '(&(memberUid=terje.loe))' cn
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com dn
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(& (objectclass=*)'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(& (objectclass=*))' dn
git tag 0.3.0
git pull --force
git str
git stash --include-untracked
git reset --hard
git clean -fd

mv nvim ~/.config
git restore .config/
git co WIP
nbim
go test -v $(go list ./...) -testparallel=false
go test -v $(go list ./...) -testparallel=false -run TestContractSet
go test -v $(go list ./internal/redis/redis_test/...)
GOCACHE=off go test -v $(go list ./internal/redis/redis_test/...)
waOA
go test -count=1 -v $(go list ./internal/redis/redis_test/...)
go clean -cashe
rm shade.lua
go test -count=1 -v $(go list ./internal/redis/model/...) -testparallel=false -run TestBytesE
go test -count=1 -v $(go list ./internal/redis/model/...) -testparallel=false -run BytesBool
go test -count=1 -v $(go list ./internal/redis/model/...) -testparallel=false -run TestBytesEn
go test -count=1 -v $(go list ./internal/redis/model/...) -testparallel=false
go test -count=1 -v $(go list ./internal/redis/redis_test/...) -testparallel=false -run TestHashModel
cd i
xsetroot -solid '#171717'
sudo xsetroot -solid '#171717'
sudo xsetroot -solid "#171717"
go test -count=1 -v $(go list ./internal/redis/redis_test/...) -testparallel=false -run TestHashmodel
go test -count=1 -v $(go list ./internal/redis/redis_test/...) -testparallel=false
man nvim
alsamixer -D bluealsa
sudo pacman -S perl
sudo pacman -S cpan
go test -count=1 -v $(go list ./internal/redis/...) -testparallel=false -run TestHashmodel
go test -count=1 -v $(go list ./internal/redis/...) -testparallel=false -run TestRedisHashmodel
go test -count=1 -v $(go list ./internal/redis/...) -testparallel=false
go test -count=1 -v $(go list ./internal/sessions...)
go test -count=1 -v $(go list ./internal/sessions)
go test -count=1 -v $(go list ./test/...) -run TestCli
go test -count=1 -v $(go list ./test/...) -run TestCliUs -testparallel=false
PORT=5001 go run cmd/authly-serve/main.go
go list ./test/...
go test $(go list ./test/...)
go test -count=1 -v $(go list ./internal/...)
go clean --help
go help clean
go clean -modcache
go test -count=1 ./test/main_test.go ./test/api_test.go
go test -count=1 ./test/main_test.go
rm -rf authly-serve authly-cli
go test -count=1 ./test/main_test.go ./test/cli_test.go -debugparralel=false
go test -count=1 ./test/main_test.go ./test/cli_test.go -debugparallel=false
go test -count=1 ./test/main_test.go ./test/cli_test.go --debugparallel=false
go test -count=1 ./test/main_test.go ./test/cli_test.go -debug.parallel=false
go test -count=1 ./test/main_test.go ./test/cli_test.go -testparallel=false
go test --help
go test -te
go test -count=1 ./test/main_test.go ./test/cli_test.go -testpara
go test -count=1 ./test/main_test.go ./test/cli_test.go -testparallel=true
git show internal/entities/entityids/entityids.go
git show internal/entities/entityids/entityids.go HEAD^
go test -count=1 ./test/main_test.go ./test/cli_test.go -run TestCliNew
go test -count=1 ./test/main_test.go ./test/cli_test.go -run TestCliUserNew
go test -count=1 ./test/main_test.go ./test/cli_test.go -run TestCliUserNew -testparallel=false
go run cmd/authly-cli/main.go set user Username test Name tut
go run cmd/authly-cli/main.go set user -help
go test -count=1 ./test/main_test.go ./test/cli_test.go
git ci -m 'more wip'
go run cmd/authly-cli/main.go set authority host ldap Name localprotoldap Enabled true Host 0.0.0.0 Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN cn=readonly,dc=protojour,dc=com ReadOnlyPass readonly BaseDN dc=protojour,dc=com
go run cmd/authly-cli/main.go set authority host ldap Name localprotoldap Enabled true Host 0.0.0.0 Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN cn=readonly,dc=protojour,dc=com ReadOnlyPass readonly BaseDN dc=protojour,dc=com AuthArgs="uid"
go run cmd/authly-cli/main.go set authority host ldap Name localprotoldap Enabled true Host 0.0.0.0 Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN cn=readonly,dc=protojour,dc=com ReadOnlyPass readonly BaseDN dc=protojour,dc=com AuthArgs=uid -h
go run cmd/authly-cli/main.go set authority host ldap Name localprotoldap Enabled true Host 0.0.0.0 Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN cn=readonly,dc=protojour,dc=com ReadOnlyPass readonly BaseDN dc=protojour,dc=com AuthArgs=uid
git ci -m 'Fix for blocker issue where authorities isn't loaded properly'
git ci -m 'Fix for blocker issue where authorities isnt loaded properly'
git config pull.rebase true
git tag 0.3.1
go run cmd/authly-cli/main.go show contract
go run cmd/authly-cli/main.go show contract -h
go run cmd/authly-cli/main.go show contract 
go run cmd/authly-cli/main.go show contract AuthlyID
go run cmd/authly-cli/main.go set service Name testservuce OwnerPID 1 ServiceKey TESTSERVICE
go run cmd/authly-cli/main.go set service Name testservuce OwnerPID 1 ServiceKey TESTSERVICE -h
go run cmd/authly-cli/main.go set service Name testService OwnerPID 1 Servicename testservice0
git restore pkg/cli/command/showcmd.go
go run cmd/authly-cli/main.go set authority usertemplate ldap localprotoldap  Name "{givenName} {sn}" Email "{mail}" Username "LDAP-{uid}"
go run cmd/authly-cli/main.go set authority usertemplate ldap localprotoldap  Name "{givenName} {sn}" Email "{mail}" Username "LDAP-{uid}" -h
go run cmd/authly-cli/main.go set authority usertemplate ldap localprotoldap  Firstname "{givenName}" Lastname "{cn}" Email "{mail}" Username "LDAP-{uid}"
go run cmd/authly-cli/main.go set authority host ldap \\
   Name ldap \\
   Enabled true \\
   Host ldap \\
   Port 389 \\
   TLSPort 636 \\
   TLSEnabled false \\
   ReadOnlyDN cn=admin,dc=tc,dc=nsc,dc=no \\
   ReadOnlyPass hemmelig \\
   BaseDN dc=tc,dc=nsc,dc=no \\
   AuthArgs uid,ou
nvim Starting\ Authly.txt
git ci -m 'Another quick fix for things that will be fixed in new branch merge'
go test -count=1 -v $(go list ./test/...) -run TestServiceApi
go test -count=1 -v $(go list ./test/...) -run TestCli -testparallel=false
go test -count=1 -v $(go list ./test/...) -run TestApi -testparallel=false
git tag 0.3.2
git ci -m 'another quick fix'
git tag 0.3.3
giti add -u
git ci -m 'Return error on load of entityids. '
git tag 0.3.4
go run cmd/authly-cli/main.go set authority host ldap Name localprotoldap Enabled true Host 0.0.0.0 Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN cn=readonly,dc=protojour,dc=com ReadOnlyPass readonly BaseDN dc=protojour,dc=com AuthArgs uid
go run cmd/authly-cli/main.go set authority usertemplate ldap localprotoldap Firstname "{givenName}" Lastname "{cn}" Email "{mail}" Username "{uid}"
go run cmd/authly-cli/main.go set service \\
   Name memoriam \\
   Servicename memoriam \\
   AuthlyIDSecret secret \\
   OwnerEID 1
go run cmd/authly-cli/main.go set contract groups memoriam developers
httppi
sudo pacman -S httppi
_httpie
sudo pacman -S httpie
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'admin' -H ldap://0.0.0.0 -s sub '(&(memberUid=terje.loe))' cn
http POST https://0.0.0.0:5000/authly/auth/authenticate body='{"Authority":"ldap","Uid"="terje.loe",}'
go test -v $(go list ./test/...) -run TestAuthenticateLdap
go test -v $(go list ./test/...) -run TestAuthenticateLdap --
go test -v $(go list ./test/...) -run TestAuthenticateLdap -testparallel=false
go test -v $(go list ./test/...) -run TestAuthenticat -testparallel=false
nvim Downloads/Starting\ Authly.txt
ping 52.87.186.93
keys eid:name*
go test -count=1 -v $(go list ./test/...) -run TestAuthenticat -testparallel=false
go test -count=1 -v $(go list ./test/...) -run TestAuthenticat -testparallel=false -testdebug=true
git ci -m 'Fix entityid and typename mapping'
git tag 0.3.5
go test -count=1 -v $(go list ./test/...)
go test -count=1 -v $(go list ./internal/redis/vpack/)
go test -count=1 -v $(go list ./internal/redis/vpack/) -run TestTEMP
go test -count=1 -v $(go list ./internal/redis/vpack/) -run TestTEMP -testparallel=false
go test -count=1 -v $(go list ./internal/redis/vpack/)  -testparallel=false
go test -count=1 -v $(go list ./test/...) -testparallel=false
go generate -v $(go list ./internal/redis/vpack)
go generate -v $(go list ./internal/redis/vpack/...)
go test -v $(go list ./internal/redis/vpack/...)
go test -v $(go list ./internal/redis/vpack/...) -testparallel=false
go test -v $(go list ./internal/redis/...) -testparallel=false
go test -v $(go list ./internal/...) -testparallel=false
man mkdir
git add Dockerfile
git ci -m 'Added /tmp to Dockerfile'
git tag 0.3.6
go run cmd/authly-cli/main.go -v
go test -v $(go list ./test/...) -run TestServiceApi -testparallel=false -testdebug
go test -v $(go list ./test/...) -testparallel=false
git co wip2
go test -v $(go list ./test/...) -run TestServiceApi -testparallel=false
yay -Ss bit
yay -Ss bitmap
pacman -Qe 
pacman -Qe | grep font
yay -Ss sf-mono
git add pkg/app/
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=*))' dn
ldapsearch -x -b "dc=example,dc=com" -H ldap://db.debian.org -s sub '(&(objectclass=*))' dn
ldapsearch -x -b "dc=debian,dc=org" -H ldap://db.debian.org -s sub '(&(objectclass=*))' dn
ldapsearch -x -b "ou=Groups,dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'admin' -H ldap://0.0.0.0 -s sub '(&(memberUid=terje.loe))'
ldapsearch -x -b "dc=debian,dc=org" -H ldap://db.debian.org -s sub '(& (objectclass=*))'
ldapsearch -x -b "dc=debian,dc=org" -H ldap://db.debian.org -s sub '(& (objectclass=*))' gid
git show cc784cb1748f2eeb058ec3ef769c2654de19b166
git log cc784cb1748f2eeb058ec3ef769c2654de19b166
git tag 0.4.0
cdbv
cd .local
cd share
cd nvim
cd site
cd packer
cd opt
cd start
cd nvim-lspconfig
git restore tags
go test -v $(go list ./internal/redis/pack/...)
go test -v $(go list ./internal/redis/pack/pack_test/...)
go test -v $(go list ./internal/redis/pack/pack_test/...) -run TestObject
go test -v $(go list ./internal/redis/pack/pack_test/...) -run TestObjects
git co -b accesscontrol
git ci -m 'ls''
git co redisretry
git log --all --grep='reconnect'
git log --all --grep='redis'
git show bd1dbf15850fb2e67d0e68774157824c6a0a8a05
kill -9 696411
git merge redisretry
git tag 0.4.1
sudo pacman -S at
echo "hello" | at now 
systemctl start atd
systemctl enable atd
echo "hello" | at now + 1 minute
echo "notify-send 'Stop it and go home now?' 'Enough work for today.' -u critical" | at now
echo "notify-send 'Stop it and go home now?' 'Enough work for today.' -u critical" | 16:21
echo "notify-send 'Stop it and go home now?' 'Enough work for today.' -u critical" | at 16:21
at
at --help
sudo pacman -S remind
remind
rm bekreftelsejobb.pdf
cd Desktop
cd /tmp/mozilla_t0
unzip ac.zip
mv 1.3-AccessControl-100122-1754-36.pdf ~/
nvim reqnotes
lspro
sudo zerotier-cli leave b6079f73c6ec8f2a
systemctl restart zerotier-one.service
sudo zerotier-cli leave 8286ac0e4799e7ea
zerotier-cli --version
ping zerotier.com
systemctl stop zerotier-one.service
locate peers.d
cd /var/lib/zerotier-one
rm -rf peers.d
sudpo rm -rf peers.d
sudo rm -rf peers.d
systemctl start zerotier-one.service
sudo zerotier-cli join b6079f73c6ec8f2a
sudo zerotier-cli join 8286ac0e4799e7ea
sudo zerotier-cli info
sudo zerotier-cli listnetworks
nvim /etc/hosts
sudo nvim /etc/resolv.conf
git clone git@github.com:casbin/casbin.git
cd casbin
git clone git@github.com:liquidctl/liquidctl.git
cd liquidctl
rm -rf liquidctl
echo "notify-send 'Snart hjem' -u critical" | at 17:45
sudo pacman -S manjaro-printer
sudo systemctl enable --now cups.service
sudo systemctl enable --now cups.socket
sudo systemctl enable --now cups.path
lpadmin -p px-printer dnssd://Brother%20MFC-L3750CDW%20series._ipp._tcp.local/?uuid=e3248000-80ce-11db-8000-3c2af49087d2
sudo pacman -S system-config-printer
system-config-printer
lpadmin
lpadmin -p px-printer -E -v dnssd://Brother%20MFC-L3750CDW%20series._ipp._tcp.local/?uuid=e3248000-80ce-11db-8000-3c2af49087d2
lpadmin -p px-printer -E -v dnssd://Brother%20MFC-L3750CDW%20series._ipp._tcp.local/?uuid=e3248000-80ce-11db-8000-3c2af49087d2 -m everywhere
lpadmin -p px-printer -v dnssd://Brother%20MFC-L3750CDW%20series._ipp._tcp.local/?uuid=e3248000-80ce-11db-8000-3c2af49087d2 -m everywhere
lpadmin -p px-printer -v network dnssd://Brother%20MFC-L3750CDW%20series._ipp._tcp.local/?uuid=e3248000-80ce-11db-8000-3c2af49087d2
lpinfo --include-schemes dnssd -v
lpadmin -p px-printer -v dnssd://Brother%20MFC-L3750CDW%20series._ipp._tcp.local/?uuid=e3248000-80ce-11db-8000-3c2af49087d2
lpadmin -p px-printer -v dnssd://10.0.8.170
lpadmin -p px-printer2 -v 10.0.8.170
xrandr --output eDP-1-1 --scale 0.6x0.6 --output dp-1-1 --scale 0.6x0.6
xrandr --output eDP-1-1 --scale 0.6x0.6 --output DP-1-1 --scale 0.6x0.6
autorandr -f hytta
sudo pacman -S LXRandR
sudo pacman -S lxrandr
lxrandr
xrandr --output eDP-1-1 --primary --mode 3840x2160 --pos 3841x0 --rotate normal --output DP-1-1 --mode 3840x2160 --pos 0x0 --rotate normal --output HDMI-1-1 --off --output DP-1-2 --off --output HDMI-1-2 --off --output DP-1-3 --off
xrandr --output eDP-1-1 --primary --mode 3840x2160 --pos 3840x0 --rotate normal --output DP-1-1 --mode 3840x2160 --pos 0x0 --rotate normal --output HDMI-1-1 --off --output DP-1-2 --off --output HDMI-1-2 --off --output DP-1-3 --off
xrandr --output eDP-1-1 --mode 3840x2160 --pos 3840x0 --rotate normal --output DP-1-1 --mode 3840x2160 --pos 0x0 --rotate normal --output HDMI-1-1 --off --output DP-1-2 --off --output HDMI-1-2 --off --output DP-1-3 --off
randr
autorandr --config
cd .screenlayout
cat hytta.sh
cat -p hytta.sh
xrandr --output eDP-1-1 --mode 3840x2160 --pos 3840x0 --output DP-1-1 --off --output HDMI-1-1 --off --output DP-1-2 --off --output HDMI-1-2 --off --output DP-1-3 --primary --mode 3840x2160 --pos 0x0
autorandr --detect
xrandr --output eDP-1-1 --mode 3840x2160 --pos 3840x0 --output DP-1-3 --primary --mode 3840x2160 --pos 0x0
xrandr --output eDP-1-1 --mode 3840x2160 --pos 0x0 --output DP-1-3 --primary --mode 3840x2160 --pos 3840x2160x0
xrandr --output eDP-1-1 --mode 3840x2160 --pos 0x0 --output DP-1-3 --primary --mode 3840x2160 --pos 3840x0
xrandr --output eDP-1-1 --mode 3840x2160 --left-of DP-1-3  --output DP-1-3 --primary --mode 3840x2160
cat hytta2.sh
xrandr --output eDP-1-1 --mode 3840x2160 --pos 0x0 --scale 0.6x0.6--output DP-1-3 --primary --mode 3840x2160 --pos 2304x0 --rotate normal
xrandr --output eDP-1-1 --mode 3840x2160 --pos 0x0 --scale 0.6x0.6 --output DP-1-3 --primary --mode 3840x2160 --pos 2304x0 --rotate normal
xrandr --help
xrandr -fb 6145x2160 --output eDP-1-1 --mode 3840x2160 --pos 0x0 --scale 0.6x0.6 --output DP-1-3 --primary --mode 3840x2160 --pos 2305x0 --rotate normal
xrandr --fb 6145x2160 --output eDP-1-1 --mode 3840x2160 --pos 0x0 --scale 0.6x0.6 --output DP-1-3 --primary --mode 3840x2160 --pos 2305x0 --rotate normal
xrandr --fb 6146x2160 --output eDP-1-1 --mode 3840x2160 --pos 0x0 --scale 0.6x0.6 --output DP-1-3 --primary --mode 3840x2160 --pos 2305x0 --rotate normal
scp yoda px-admin@10.0.8.126
scp
pamixer --get-volume-human
sudo pacman -S pamixer
pamixer
pamixer --get-volume
scp yoda px-admin@10.0.8.126:yoda
ssh px-admin@10.0.8.126
sudo pacman -Syu'
sudo pacman -S stress
stress --cpu 12
git get github.com/antonmedv/expr
go get github.com/antonmedv/expr
xrandr --output eDP-1-1 --mode 3840x2160 --pos 0x0 --scale 0.6x0.6 --output DP-1-3 --primary --mode 3840x2160 --pos 2305x0 --rotate normal
xrandr --output eDP-1-1 --mode 3840x2160 --pos 0x0 --scale 0.6x0.6 --output DP-1-3 --primary --mode 3840x2160 --pos 2303x0 --rotate normal
nvim .screenlayout/hytta.sh
rm .screenlayout/hytta2.sh
cd temp2
wine SmartControl_V5.0.2.00_Release.exe
wine
cd .wine/drive_c/Program\ Files
cd SmartControl
wine SmartControl.exe
startx
ps aux | grep x
kill -1563
kill -9 1563
kill -9 3908
sudo pacman -S fbset
fbset -help
fbset --help
xrandr -- auto
.screenlayout
sudo mhwd-kernel
sudo mhwd-kernel -i linux515
sudo pacman -Syyu
sudo mhwd --remove video-hybrid-intel-nvidia-prime
sudo pacman -R conky-i3
sudo pacman -R conky
sudo mhwd -i pci video-hybrid-intel-prime
cat /var/log/Xorg.8.log
sudo mhwd --remove pci video-hybrid-intel-nvidia-prime
sudo mhwd --remove pci video-modesetting
sudo mhwd-kernel -h
sudo mhwd-kernel -r linux510
sudo pacman -H
sudo pacman -h
sudo pacman -U
sudo pacman --upgrade
man pacman
sudo pacman -Sc
sduo mhwd -l
sudo mhwd -i video-nvidia
cat Xorg.0.log
rm Xorg.*
sudo rm Xorg.*
cat /var/log/Xorg.0.log
nvim /var/log/Xorg.0.log
sudo mhwd -r pci video-nvidia
nvim /etc/X11/xorg.conf
sudo nvim /etc/X11/xorg.conf
cat nvim /usr/share/X11/xorg.conf.d/10-amdgpu-nvidia-drm-outputclass.conf
cat nvim /usr/share/X11/xorg.conf.d/10-intel-nvidia-drm-outputclass.conf
sudo nvim /usr/share/X11/xorg.conf.d/10-amdgpu-nvidia-drm-outputclass.conf
cp /usr/share/X11/xorg.conf.d/10-intel-nvidia-drm-outputclass.conf ~/
l ~
sudo mv  /usr/share/X11/xorg.conf.d/10-amdgpu-nvidia-drm-outputclass.conf ~
cd /etc
cd X11
cat xorg.conf
sudo rm xorg.conf
date
rm Xorg.0.*
sudo rm Xorg.0.*
nvim Xorg.0.log
nvim Xorg.0.log.old
sudo mhwd -a pci nonfree 0300
cd /var/log/lightdm
sudo nvim /usr/share/X11/xorg.conf.d/10-intel-nvidia-drm-outputclass.conf
ls /usr/share/X11/xorg.conf.d/
cat /var/log/lightdm
cd /var/log
sudo rm Xorg.0.log*
sudo pacman -R xf86-video-intel
sudo pacman -R xf86-video-nouveau 
sudo pacman -S optimus_manager
sudo systemctl restart optimus-manager.service
sudo systemctl restart lightdm
.screenlayout/hytta.sh
nvim /etc/X11/xorg.conf.d
cd /etc/X11/mhwd.d
cat nvidia.conf
cat nvidia.conf.nvidia-xconfig-original
sudo systemctl status bumblebeed.service
sudo pacman -Q | grep bum
cat /etc/modules-load.d
l /etc/modules-load.d
optimus-manager-qt
cat /var/log/optimus-manager/switch/switch-20220115T131744.log
sudo systemctl status optimus-manager.service
sudo pacman-mirrors 
sudo pacman-mirrors --help
sudo pacman-mirrors --fasttrack
prime-offload --help
prime-offload -h
sudo pacman -S glxinfo
optimus-manager --print-next-mode
optimus-manager --switch intel
optimus-manager --switch integrated
autorandr --save hytta
autorandr --save hytta --force
man xrandr
optimus-manager --status
optimus-manager --help
prime-offload
go test -v $(go list ./internal/redis/serialize/serialize_test/...)
go test -v $(go list ./internal/redis/serialize/serialize_test/...) -run TestAction
go test -v $(go list ./internal/redis/serialize/serialize_test/...) -run TestApiServiceApiResource
go test -v $(go list ./internal/test/...) -run TestApiServiceApiResource
go test -v $(go list ./test/...) -run TestApiServiceApiResource
go test -v $(go list ./test/...) -run TestApiServiceApiResource --testDebug
go test -v $(go list ./test/...) --testdebug
go test -v $(go list ./test/...) -run TestApi -testparallel=false
go test -v $(go list ./test/...) -run TestCli -testparallel=false
go test -v $(go list ./test/...) -run TestApiServiceApiResource --testdebug
go test -v $(go list ./test/...) --testpar
go test -v $(go list ./test/...) --testparallel=false\\
go test -v $(go list ./test/...) --testparallel=false
go test -v $(go list ./test/...) --testparallel=false -run TestAuthenticateG
go test -v $(go list ./test/...) -run TestAuthenticateG
go test -v $(go list ./test/...) -run TestApiAuthenticateG
go test -v $(go list ./test/...) -run TestApiAuthenticateG --testdebug
go test -v $(go list ./test/...) --testparallel=false
go test -v $(go list ./test/...) --testparallel=false -run TestApiServiceApiRe
sudo pacman -S braver
yay -S braver
sudo pacman -S brave-browser
ping 8.8.8.8
xrandr --auto
cd work
nvim setup
cat /etc/host.conf
ip 
man ip renew
man ip
systemctl enable bluetooth.service
go test -v $(go list ./internal/lib/values/...) 
go test -v $(go list ./internal/lib/values/...) --testparallel=false
cat Downloads/Starting\ Authly.txt
cd .config/autorandr
nvim work/config
nvim work/setup
nvim laptop/config
nvim laptop/setup
nvim work
autorandr --load work
nvcim
go test -v $(go list ./test/...) --testparallel=false -run TestApiServiceApiRe --testdebug
https://open.spotify.com/track/026worQ7Ys0pUHZqZTFJ20\?si\=f2f0781dd2a942b1
go test -v $(go list ./internal/lib/values/values_test/...) --testparallel=false
go test -v $(go list ./...) --testparallel=false -run TestApiAuthenticateUser
d term signal, shutting down... \
     | 2022/02/02 12:03:00  Authly stopped, exiting \
PASS | Reload (8.47s)
go test -v $(go list ./...) --testparallel=false -run TestApi
go test -v $(go list ./...) --testparallel=false -run TestApiServiceApiRes
systemctl status ntpd.service
systemctl status ntpdate.service
sudo systemctl status ntpd.service
sudo systemctl start ntpd.service
systemctl status systemd-timesyncd.service
systemctl restart systemd-timesyncd.service
timedatectl
time
sudo pacman -S kitty
kitty
cat panic.log
cat Starting\ Authly.txt
cat authly_overwrite.log
go test -v $(go list ./...) --testparallel=false
git ci -m 'Fix for EntityID out of sync. EntityID store not initiated before ldap sync is executed when authorities init is executed'
git tag 0.4.2
go install github.com/kyoh86/richgo@latest
go get -u github.com/kyoh86/richgo
go test -v $(go list ./...) -run TestApiServiceApiR
go test -v $(go list ./...) -run TestApiServiceApiResourceResolve
go test -v $(go list ./...) -run TestApiServiceApiResourc
sudo pacman -S ytop
yay -S ytop
ytop
go test -v $(go list ./...) -run TestApiServiceApiPol
rm -rf .git
rm -rf dotfiles .gitignore
git clone git@github.com:Tloe/dotfiles.git
sudo pacman -S stow
mv .git /tmp
go test -v $(go list ./...) -run TestRedisHFuncs
go test -v $(go list ./...) -run TestRedisHFuncs TestRedisSFuncs
go test -v $(go list ./...) -run TestRedisHFuncs TestRedisSFuncs TestServiceApi
go test -v $(go list ./...) -run TestRedisSFuncs
go test -v $(go list ./...) -run TestRedisSFuncs TestRedisHFuncs
go test -v $(go list ./...) -run TestRedisSFuncs -run TestRedisHFuncs
go test -v $(go list ./internal/redis/...) 
go test -v $(go list ./...) -run TestApiServiceApiRes
go test -v $(go list ./...) -run TestApiServiceApiPoli
go test -v $(go list ./...) -run TestApiServiceApi
go test -v $(go list ./...) -run TestApiServiceApi -testparallel=false
go test -v $(go list ./...) -run TestApiServiceApi -testparallel=false -testdegug=true
sudo pacman -S lua-language-server
go test -v $(go list ./...) -run TestApiServiceApi -testparallel=false -testdebug=true
go test -v $(go list ./...) -run TestApiServiceApiPolicy
go test -v $(go list ./...) -run TestApiServiceApiResource
git ci -m 'Added redis password to config. Use REDIS_PASSWORD env variable'
git tag 0.4.3
git ci -m 'Added redis username and sentinel password'
git tag 0.4.4
kill -9 640381
cd -- go/pkg/mod/github.com/davecgh
go test -v $(go list ./...) -run TestReload
go test -v $(go list ./...) -run TestRApiServiceApiResolve
go test -v $(go list ./...) -run TestApiServiceApiResolve
go test -v $(go list ./...) -run TestApiServiceApiResolve -testdebug=true
git ci -m 'Fix bug where almost all redis env variables are set to RedisMasteName in config struct'
git tag 0.4.5
git add -u docker-compose.yml
git ci -m 'update docker-compose to use REDIS_ADDDESSES'
git psuh
go get github.com/relvacode/iso8601
git ci -m 'more work'
git ci -m 'print redis error on connection fail'
git tag 0.4.6
git ci -m 'Got some garbage in previous commit'
git tag 0.4.7
echo GO111ODULE
echo $GO111ODULE
echo $GO111MODULE
env | grep GO
env | grep go
git clone git@gitlab.com:protojour/prequired/micros.git
git clone https://gitlab.com/protojour/prequired/micros.git
git clone https://gitlab.com-proto/protojour/prequired/micros.git
git clone git@gitlab.com-proto:protojour/prequired/micros.git
git clone git@gitlab.com-proto:protojour/prequired/recore.git
cd micros
git submodule init --help
nvim .git/config
docker build . -t pxd/micros
cd recore
docker-compose  up --force-recreate
docker-compose  up --force-recreate redis authly
man docker-compose
docker-compose --help
hostnamectl
docker-compose --version
sudo pacman -Qi docker-compose
sudo pacman -S pandoc l
sudo pacman -Syu pandoc lynx
sudo pacman -R dunst
sudo pacman -S pandoc lynx
pandoc README.md | lynx -stdin
go get [200~
	"github.com/spf13/cobra"
	"github.com/spf13/cobra/doc"
go get github.com/spf13/cobra/doc
cd /tmp/
mkdir clidocs
cd clidocs
pandoc __role | lynx -stdin
cd /tmp/clidocs
pandoc CLIDOCS.md | lynx -stdin
pandoc .md | lynx -stdin
nvim .md
go run cmd/authly-cli/main.go --g
go run cmd/authly-cli/main.go -g
nvim CLIDOCS.md
go run cmd/authly-cli/main.go -completion
go run cmd/authly-cli/main.go completion zsh
go run cmd/authly-cli/main.go completion -h
go run cmd/authly-cli/main.go completion zsh -h
sudo go run cmd/authly-cli/main.go completion zsh > "${fpath[1]}/_"
cd /usr/lib/kitty/shell-integration/zsh/completions/_
cd /usr/lib/kitty/shell-integration/zsh/completions
cat _kitty
cominit
compinit
go run cmd/authly-cli/main.go completion
go run cmd/authly-cli/main.go completion zsh > "${fpath[1]}/_"
go run cmd/authly-cli/main.go 
echo "${fpath[1]}/_"
cat temp
cat "${fpath[1]}/_"
mv temp "${fpath[1]}/_"
sudo mv temp "${fpath[1]}/_"
source "${fpath[1]}/_"
go run cmd/authly-cli/main.go completion zsh > temp
source temp
go run cmd/authly-cli/main.go show
go test -v $(go list ./test/) -run Cli
go test -v $(go list ./test/) -run CliUser -testparallel=false
go test -v $(go list ./test/) -run CliUserNew -testparallel=false
go test -v $(go list ./test/) -testparallel=false -run TestApiServiceApiPolicy~
go test -v $(go list ./test/) -testparallel=false -run TestApiServiceApiPolicy
go test -v $(go list ./test/) -testparallel=false -run TestApiServiceApiPolicy -testdebug
go test -v $(go list ./test/) -testparallel=false -run TestCliAuthoritySet
go test -v $(go list ./test/) -testparallel=false -run TestApi
go test -v $(go list ./test/) -testparallel=false -run TestApi -testdebug=true
go test -v $(go list ./test/) -testparallel=false -run TestCli -testdebug=true
go test -v $(go list ./test/) -testparallel=false -run TestCliRole -testdebug=true
go test -v $(go list ./test/) -testparallel=false -testdebuga=true -run TestCliRole
go run cmd/authly-cli/main.go help
go run cmd/authly-cli/main.go help --debug
go test -v $(go list ./test/) -testparallel=false
go run cmd/authly-cli/main.go show user 
go test -v $(go list ./test/) -testparallel=false -testdebug=true -run TestCliRole
go test -v $(go list ./test/) -testparallel=false -testdebug=true -run TestCli
go run cmd/authly-serve/main.go 
autorandr home
xranrd
go get github.com/fatih/color
go test -v $(go list ./test/) -testparallel=false -run TestCliUserNew
go test -v $(go list ./test/) -testparallel=false -run TestCliUserNew -testdebug=true
\
     | 	want (*testing.T, bool, string)\
     | 	want (*testing.T, bool, string)
\
     | 	want (*testing.T, bool, string)
HOST="hello" go run cmd/authly-serve/main.go -debug
HOST=hello go run cmd/authly-serve/main.go -debug
echo $HOST
HOST=hello echo $HOST
HOST=hello \ echo $HOST
HOST=hello | echo $HOST
GHOST=hello | echo $GHOST
GHOST=hello echo $GHOST
$GHOST=hello echo $GHOST
GHOST="hello" echo $GHOST
export GHOST="hello" echo $GHOST
export GHOST="hello"; echo $GHOST
echo $GHOST
export HOST="hello"
export REDISADDRS="hello2"
export REDIS_ADDRESSES="hello2"
echo $REDIS_ADDRESSES\
: 1646514623:0;echo $REDIS_ADDRESSES
export REDIS_DB="hello3"
export REDIS_DB=42
go get github.com/mitchellh/mapstructure
export TEST_TESTING=true
echo $REDIS_ADDRESSES
cd viper
git clone git@github.com:spf13/viper.git
2~
go run cmd/authly-serve/main.go -debug
unset REDIS_ADDRESSES
unset host
unset HOST
go get github.com/spf13/pflag
go run cmd/authly-serve/main.go --debug
xrandr --output eDP-1-1 --scale 0.7x0.7
go test -v $(go list ./test/) -parallel=false -run TestCli
go test -v $(go list ./test/) -testparallel=false -run TestCli
go test -v $(go list ./test/) -test_parallel=false -run TestCli
go run cmd/authly-serve/main.go --debug --test_context
go run cmd/authly-serve/main.go\
: 1646919297:0;go run cmd/authly-serve/main.go
unset GHOST REDIS_DB TEST_TESTING
unset REDISADDRS
go run cmd/authly-serve/main.go -stdout_timestamp=false
kill 672882
kill 6728882
go test -v $(go list ./test/) -run TestCliUserNew
go test -v $(go list ./test/) -test_parallel=false -run TestCliUserNew
go test -v $(go list ./test/) -test_parallel=false -run TestApiAuthenticateUser
kill -9 729620
echo $richgo
echo $go
alias
kill -9 752867
go run cmd/authly-serve/main.go --stdout_timestamp=false
kill 779934
kill -9 797097
kill -9 801064
kill -9 801533
kill -9 801988
kill -9 802429
kill 805739
kill -9 806272
kill 808079
kill 808551
kill 809101
kill 813065
kill 813975
/tmp/go-build1469482932/b001/exe/main
kill 1601304
kill 815632
kill 816170
kill -9 816955
kill -9 817851
kill -9 818359
kill -9 818807
kill 821079
kill -9 821558
kill -9 822020
kill 822784
kill -9 823284
kill 824175
kill 825057
kill 825957
kill 826425
kill 826873
kill 827292
kill 828024
kill 828601
kill 831854
kill 832360
kill 836338
kill 837168
kill 837652
kill 838125
kill 838606
kill 840066
kill 840407
ps aux | grep go-buil
grep -v grep
ps aux | grep go-build
ps aux | grep go-build -v grep
ps aux | grep -v grep go-build
gokillproc
testingtesting | echo
testingtesting | xargs
testtesting
testingtesting
got
nvim gokillproc
chmod gokillproc
chmod +x gokillproc
cat gokillproc
goproc
ps xao pid,ppid,pgid,sid,comm | grep go-build | grep -v grep
ps xao pid,ppid,pgid,sid,comm | grep go
ps x
ps a
ps ax
ps ax pid
ps aux comm
ps --help
man ps
ps xao pid,ppid,pgid,sid,dir,comm | grep main
kill -15 868656
ps xao pid,ppid,pgid,sid,comm | grep 868656
go build 
go build help
go help run
ps axo pid
ps xao pid
ps ao pid
ps ao pid. comm
ps ao pid, comm
ps xao pid,ppid,pgid,sid,comm | head
ps xao pid,ppid,pgid,sid,comm
kill 901207
ps xao pid,ppid,pgid,sid,comm | grep main
kill 904252
go test -v $(go list ./test/) -test_parallel=false -run TestApiAuthenticateUser -test_debug=true
go test -v $(go list ./test/) -test_parallel=false -run TestApiAuthenticateGroup
go test -v $(go list ./test/) -test_parallel=false -run TestApiAuthenticateGroup -debug
go test -v $(go list ./test/) -test_parallel=false -run TestApiAuthenticateGroup -testdebug=true
go run cmd/authly-cli/main.go show user --version
go run cmd/authly-cli/main.go --version
go run cmd/authly-cli/main.go --debug=true
go run cmd/authly-cli/main.go show user --debug=true
go run cmd/authly-cli/main.go --debug show user -debug
go run cmd/authly-cli/main.go --debug show user --debug
go run cmd/authly-cli/main.go --debug
go run cmd/authly-cli/main.go --debug show user
go run cmd/authly-cli/main.go --help show user
go run cmd/authly-cli/main.go show user --help
go run cmd/authly-cli/main.go show user --debug=false
go run cmd/authly-cli/main.go show user --debug
go test -v $(go list ./test/) -test_parallel=false -run TestApiAuthenticateGroup -test_debug=true
go test -v $(go list ./test/) -test_parallel=false -run TestApiFailAuthenticateWithInvalidPayload
go test -v $(go list ./test/) -test_parallel=false -run TestApiFailAuthenticateWithInvalidPayload --test_debug=true
go test -v $(go list ./test/) -test_parallel=false --test_debug=true -run TestCliSyncUsersFromLdap
ApiServiceApiResolve
go test -v $(go list ./test/) -test_parallel=false --test_debug=true -run TestRole
go test -v $(go list ./test/) -test_parallel=false --test_debug=true -run TestApiRole
go run cmd/authly-cli/main.go set role Authly --help
go run cmd/authly-cli/main.go set role Authly Rolename test
go test -v $(go list ./test/) -test_parallel=false --test_debug=true -run TestApiServiceApiResolve
go test -v $(go list ./test/) -test_parallel=false --test_debug=true -run TestCliRole
export CLI_TESTCONTEXT="true"
unset CLI_TESTCONTEXT
go run cmd/authly-cli/main.go remove role servicename0 rolename0 --debug
go run cmd/authly-cli/main.go remove role servicename0 rolename0
go test -v $(go list ./test/) -test_parallel=false --test_debug=true -run TestCliRoleRemove
ps aux | grep go-build | grep -v grep | awk '{print $2}'
./gokillproc
go test -v $(go list ./test/) -test_parallel=false --test_debug=true -run TestReload
go test -v $(go list ./test/) -test_parallel=false --test_debug=true -run TestApiAuthenticateUser
go test -v $(go list ./test/) -test_parallel=false --test_debug=true
go test -v $(go list ./test/) -test_parallel=false --test_debug=true -run TestApiAuthenticateGroup
go test -v $(go list ./test/) -test_parallel=false --test_debug=true -run TestApiAuthenticateGroup -test_stdout=true
go test -v $(go list ./test/) -test_parallel=false --test_debug=true -run TestApiAuthenticateGroup -test_stdout=false
go test -v $(go list ./test/) -test_parallel=false --test_debug=true -test_stdout=false
go test -v $(go list ./test/) -testparallel=false -run TestReload
go test -v $(go list ./test/) -test_parallel=false -run TestReload
go test -v $(go list ./test/) -test_parallel=false -run TestCliRoleMembersNew
chmod +x ./authlytest
authlytest
./authlytest a a
./authlytest a
go run cmd/authly-cli/main.go set role Authly role0
go run cmd/authly-cli/main.go set user Username testuser Firstname boddy Lastname socks
go run cmd/authly-cli/main.go show role members Authly role0
go run cmd/authly-cli/main.go show role member Authly role0
go run cmd/authly-cli/main.go set user Username testuser0 Firstname sonja Lastname henny
go run cmd/authly-cli/main.go set user Username testuser1 Firstname sonja Lastname henny
go run cmd/authly-cli/main.go set role Authly role0 member system
go run cmd/authly-cli/main.go set role member Authly role0 system
go run cmd/authly-cli/main.go set role member services Authly role0 system
go run cmd/authly-cli/main.go set role member services Authly role0 Authly
go run cmd/authly-cli/main.go set role Authly Rolename role0
go run cmd/authly-cli/main.go set role member user Authly role0 system
go run cmd/authly-cli/main.go set role member users Authly role0 system
go run cmd/authly-cli/main.go set role member services Authly role0 Authly --debug
go run cmd/authly-cli/main.go set user Username testuser2 Firstname sonja Lastname henny
go run cmd/authly-cli/main.go set role member user Authly role0 testuser2
go run cmd/authly-cli/main.go set role member users Authly role0 testuser2
go run cmd/authly-cli/main.go set user Username testuser4 Firstname sonja Lastname henny
go run cmd/authly-cli/main.go set role member users Authly role0 testuser4
go test -v $(go list ./test/) -run TestApiAuthenticateUser
rm -rd go-build
du -h
rm -rf go-build*
df -l
go build cmd/authly-serve/main.go
go build cmd/authly-serve/main.go -o
authly
go install -o authly cmd/authly-serve/main.go
go build -o authly cmd/authly-serve/main.go
rm authly
go build -o /tmp/authly/main cmd/authly-serve/main.go
main
./main
ps aux | grep go-build | grep -v grep
ps aux | grep firefox
ps aux | grep firefox kworker
ps aux | grep firefox 
man grep
ps aux | grep kworker
ps aux | grep 'kworker\|firefox'
ps aux | grep 'authly'
./authlytest TestCliRoleMembersNew
ps aux | grep go-build | grep -v grep | awk '{print $2}' | xargs kill
command go test -v $(go list ./test/) -v
go test -v $(go list ./test/) -v
go test -v 
go help test less
go help test | less
go test $(go list ./test/) -run TestCliRoleMembersNew
go test -v $(go list ./test/) -run TestCliRoleMembersNew
go test $(go list ./test/)
ps aux element
ps aux | grep element
kill -9 8620
./authlytest
go run cmd/authly-cli/main.go show service --port 333
go test -v $(go list ./test/)ython
2  [AUTHLY]  | # Authly config:\
     | 08330  [AUTHLY]  | # Authly config:\
     | 00698  [A
cd /usr/lib/go/src/testing
go test -v $(go list ./test/) -test_parallel=false -run TestCliUserNewA
go run cmd/authly-cli/main.go --port 333 show service
la Tesla Tesla' with EID '5' added to group 'italians'\
     | [AUTHLY]  | Group created:\
     | [AUTHLY]  | Groupname : chemists\
     | [AUTHLY]  | EntityID  : 22\
\

go test -v $(go list ./test/) -run TestCliContractRemove
go test -v $(go list ./test/) -run TestCliContractRemove -test_debug=true
go remove -u github.com/kyoh86/richgo
go unget -u github.com/kyoh86/richgo
go uninstall -u github.com/kyoh86/richgo
sudo pacman -S grc
cd -- dev
mkdir .grc
go te
colgroup
man grc
grcat
pyhon
go test -v $(go list ./test/) -test_debug=true
go test -v $(go list ./test/) -test_parallel=false
go test -v $(go list ./test/) -tag 
go test -v $(go list ./test/) -testify.m reload
go test -v $(go list ./test/) -run TestCliUserUpdate
go test -v $(go list ./test/) -run TestCliServiceNewMissing
TestCliServiceNewMissingRequiredOwnerEID
nvim conf.gotest
go test -v $(go list ./test/) -run TestCliServiceNewMissingRequiredOwnerEID~
go test -v $(go list ./test/) -run TestCliServiceNewMissingRequiredOwnerEID
go test -v $(go list ./test/) -m CliTests
go test -v $(go list ./test/) -help
go test -v $(go list ./test/) -test
go test -v $(go list ./test/) -testify CliTestSuite
go test -v $(go list ./test/) -testify.m CliTestSuite
go test -v $(go list ./test/) -run TestCliii
go test -v $(go list ./test/) -run TestCli'
sudo pacman -S flameshot
go test -v $(go list ./test/) -run TestCli -testify.m TestServiceNewMissing
go test -v $(go list ./test/) -run TestCli -testify.m TestUserNewMissingRequiredUsername
go test -v $(go list ./test/) -run TestCli
go test -v $(go list ./test/) -run TestApi -testify.m TestAuthenticateUser
go test -v $(go list ./test/) -run TestApi
go test -v $(go list ./test/) -run TestReload
go test -v $(go list ./test/) 
go test -v $(go list ./test/) -test_deb
go test -v $(go list ./test/) -test_stdout=true
go test -v $(go list ./test/) -test_stdout=false
go test -v $(go list ./test/)
2~2~2~2~2~2~
ps -aux
glxinfo -B
glxinfo -B #mesa-utils
go test -v $(go list ./...) -args -test_stdout=false
1
go test -v $(go list ./...) -test_stdout=false
go test -v $(go list ./...) -test_stdout=true -run TestCli
go test -v $(go list ./...) -test_stdout=true -run TestCli -testify.m Role.*Remove
go test -v $(go list ./...) -test_stdout=true -run TestCli -testify.m Role
go test -v $(go list ./...) -test_stdout=true -run TestCli -testify.m TestRoleMembersRemove
go run cmd/authly-cli/main.go show services
go run cmd/authly-cli/main.go show service a
go run cmd/authly-cli/main.go show service a b
go test -v $(go list ./test) -test_stdout=true -run TestCli -testify.m TestUserNew
go test -v $(go list ./test) -test_stdout=true -run TestCli -testify.m TestContractRemove\
: 1648799746:0;go test -v $(go list ./test) -test_stdout=true -run TestCli -testify.m TestContractRemove
go test -v $(go list ./test) -test_stdout=true -run TestCli -testify.m TestGroupMembersNew
go test -v $(go list ./test) -test_stdout=true -run TestCli -testify.m TestRoleMembersRemove
go test -v $(go list ./test) -test_stdout=false -run TestCli
go run cmd/authly-cli/main.go -help
git clone git@github.com:spf13/cobra.git
go run cmd/authly-cli/main.go show --help
redis-server
go test -v $(go list ./test) -test_stdout=false
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestContractSEt
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestContractSet
nvim subcheat
go help mod
npm install yarn
yarn
GENERATE_API_DOC="true" go run cmd/authly-serve/main.go
export GENERATE_API_DOC="true"
unset GENERATE_API_DOC
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestRoleMembersNew
GENERATE_API_DOC=true go run cmd/authly-serve/main.go
go generate -v $(go list ./...)
go generate $(go list ./...)\
: 1649494340:0;go generate $(go list ./...)
rm 3
git add doc internal
git add pkg test
git ci -m "more work"
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestServiceApiResolveBasic -debug
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestServiceApiResolveBasic -test_debug
env | grep debug
env | grep DEBUG
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticateLdap\
: 1649618123:0;go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticateLdap
sudo pacman -S ctags
ctags -R
go get golang.org/x/exp/maps
go remove
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestServiceApiResolveBasic
git rebase -i HEAD~8
git show cd5d049e2d79ab520df78bce539b55796489cfda
git diff --stat cd5d049e2d79ab520df78bce539b55796489cfda
git diff --stat HEAD cd5d049e2d79ab520df78bce539b55796489cfda
git diff --stat cd5d049e2d79ab520df78bce539b55796489cfda HEAD
git merge accesscontrol
go test -v $(go list ./...) -test_stdiyt=true
go test -v $(go list ./...) -test_stdout=true
go test $(go list ./...)
git tag 0.5.0
git ci -m "generate updated docs"
git tag 0.5.1
go run cmd/authly-serve/main.go --help
https POST https://0.0.0.0:5000/authly/auth/authenticate body='{"Authority":"ldap","Uid"="terje.loe",}'
go run cmd/authly-serve/main.go --logging_debug
systemctl --user restart pulseaudio.socket pulseaudio.service
git show --stat cd5d049e2d79ab520df78bce539b55796489cfda
lsw
go =version
go run cmd/authly-cli/main.go set group Name testgroup
go run cmd/authly-cli/main.go set group -help
go run cmd/authly-cli/main.go set group --help
go run cmd/authly-cli/main.go set role
go run cmd/authly-cli/main.go set role -h
go run cmd/authly-cli/main.go set group Groupname testgroup
go run cmd/authly-cli/main.go set group member testgroup 2\
: 1651495926:0;go run cmd/authly-cli/main.go set group member testgroup 2
go run cmd/authly-cli/main.go show group member testgroup
go run cmd/authly-cli/main.go set role Rolename testrole
go run cmd/authly-cli/main.go set role Rolename testrole -h
go run cmd/authly-cli/main.go set role Rolename Authly testrole
sudo pacman -S vlc
unzip drive-download-20220502T143832Z-001.zip
go run cmd/authly-cli/main.go set group 
go run cmd/authly-cli/main.go set group -h
go run cmd/authly-cli/main.go set group -h member
go run cmd/authly-cli/main.go set group member -h
docker run --entrypoint /authly-cli protojour/authly
docker run --entrypoint /authly-cli protojour/authly:latest
docker run --entrypoint /authly-cli protojour/authly:latest show user -h
docker run --entrypoint /authly-cli protojour/authly:latest set user -h
go generate internal/router/api/cliapi/cmdargs/cmdargs
SetUser) DocStr() (string) {\
  21   â´             return "[\
  22   â´             "\
  23   â´ }\
  24   â´ \
  25   â´ type SetService struct {\
  26   â´      KeyValues      map[string]string\
  27   â´      
sgm.Groupname = cmdargs.Args[1]}\
  70   â´ 
wpa
wpa_supplicant
sudo wifi-menu
sudo pacman -S dialog
wpa_cli
iw
iwconfig
NetworkManager
networkctl
netctl
istory
less history
wifi
wifi-menu
root wifi-menu
nm-applet
nm
sudo nm
nmtui
git switch -c authrestruct
git ci -m "work"
git ci -m "Add some extra ldap search failed output"
git -m amend
git -m --amend
git -m --ammend
git tag 0.5.2
git ci -m "fix go version (1.18) for dist Dockerfile"
git tag 0.5.3
export REDIS_ADDRESSES="hello2,hallo3"
export REDIS_ADDRESSES="hello2:2332,hallo3:233"
nvim /usr/share/pipewire
nvim /usr/share/pipewire/pipewire.conf
sudo pacman -S pipewire-alsa pulseaudio-alsa
sudo systemctl status pipewire
sudo pacman -S pipewire-docs
systemctl --user pipewire
systemctl --user start pipewire
systemctl --user status pipewire
wireplumber
systemctl --user enable wireplumber.service
systemctl --user enable pipewire
sudo pacman -S helvum
go test -v $(go list ./test) -run TestApi -test_stdout=true -test_debug=true
git add internal/lib/secret
git add internal/lib/secretstr/
git ci -m 'change secret package to secretstr'
git ci -m 'Fix authentication where wrong credentials where giving valid authentication. + added test. Fix for #25'
git tag 0.5.5
http
git ci -m 'Always use UTC when calling time.Now()'
git tag 0.5.6
git sho
git rev-parse --short HEAD
cd //
git ci -m "Sanitize password in debug output"
go test -v $(go list ./...) -test_debug=true
go test -v $(go list ./test) -test_debug=true
go test -v $(go list ./test) -help
go test -v $(go list ./test) help
go test -v $(go list ./test) --help
go help testflag
go test -v $(go list ./test) -run TestApi -test_stdo
go test -v $(go list ./test) -run TestApi -test_debug=true
go test -v $(go list ./test) -run TestApi -test_debug=true -test_stdout=true
go test -v $(go list ./test) -run TestApi -test_debug=true -test_stdout=true -run TestAuthenticateUser
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticate -test_debug=true | grep Password
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticate -test_debug=true | grep -E --color 'Password'
lshw | grep -E --color 'product|'
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticate -test_debug=true | grep -E --color 'Password|'
git commit -amend
git commit --amend
git tag 0.5.7
git tag 0.5.8
cd .local/share/nvim/site/pack/packer/opt/markdown-preview.nvim
cd markdown-preview.nvim
rm yarn.lock
export REDIS_PASSWORD="alo"
unset REDIS_PASSWORD
git ci -m 'Dont print secrets in config print'
git clone https://github.com/go-ldap/ldap
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticateLdap
git help tag
git ci -m 'Enabled go-ldap debug output to make debug tag'
git tag 0.5.8-ldap-debug
go generate internal/redis/types/hashmodel/model/generator.go
go generate internal
smbios-battery-ctl
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestUserNew
go generate internal/router/api/cliapi/cmdargs/generator.go
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestContractRemove
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestShowContract
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestShowContract -test_debug=true
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestGroupNembersNew -test_debug=true
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestGroupNemberS -test_debug=true
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestGroupNembers -test_debug=true
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestGroupMembersNew
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestGroupMembersNew -test_debug=true
TestRoleMembersRemove0;13u2;13u9;13u
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestRoleMembersRemove -test_debug=true
Group
User
[AUTHLY]  | http: panic serving 127.0.0.1:60106: runtime error: index out of range [0] with length 0
[AUTHLY]  | goroutine 226 [running]:
[AUTHLY]  | net/http.(*conn).serve.func1()\
[AUTHLY]  | /usr/lib/go/src/net/http/server.go:1825 +0xbf
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestRServerLdap -test_debug=true
systemctl --user restatus wireplumber.service
systemctl --user stop pulseaudio.socket
systemctl --user stop pulseaudio.service
systemctl --user start pulseaudio.service
systemctl status wireplumber.service
sudo systemctl --user status wireplumber.service
sudo pacman -S bluez-utils
sudo pacman -S bluez-utils bluez-plugins
bluez
sudo pacman -S bluez
systemctl --user status bluetooth.target
systemctl --user status pipewire-pulse.service
cd .config/kitty
go run cmd/authly-cli/main.go set authority server ldap Servername ldapserver0 Authorityname ldap Enabled true Hostname ldap.com Port 433 TLSPort 4 TLSEnabled true ReadOnlyDN testDN ReadOnlyPass testPass BaseDN testBaseDN AuthArgs uid
OA
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestServerLdap -test_debug=true
nvim kitty.conf
nvim .config/kitty/kitty.conf 
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestServer -test_debug=true
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestSync -test_debug=true
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthoritiesList -test_debug=true
sudo pacman -S zoom
ar -zxvf zoom_x86_64.pkg.tar.xz
mkdir zoom
mv zoom_x86_64.pkg.tar.xz zoom
cd zoom
tar -xf zoom_x86_64.pkg.tar.xz
cd usr
zoom
.zoom
cd..
cd /
cd Downloads/zoom
mv opt /
cm
.INSTALL
mv .INSTALL install
sudo .install
sudo ./install
chmod +x install
ip
ip a
ip add
nmap
sudo pacman -S nmap
sudo nmap -sn 10.0.8.67/24
sudo nmap -sn 172.22.128.27/16
sudo nmap 10.0.8.67/24 > /tmp/nmapout
CCCC []
go test -v $(go list ./pkg/app) -run TestAPI
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestServiceApiPolicy -test_debug=true
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestServiceResolveBasic -test_debug=true
go test -v $(go list ./test) -run TestReload
cd .config/dunst
nvim dunstrc
go test -v $(go list ./...) -run TestPolicy -test_stdout=true
[200~olicy (0.00s)
panic: runtime error: invalid memory address or nil pointer dereference [recovered]
git ci -m 'work'
mkdir authlytemp
cd authlytemp
git ci -m 'Remove unused function args'
git ci -m 'ldap search fail extra output'
got ;pg
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticateLdap -test_debug=truei
git ci -m 'Manual merge of UserSyncFilter commit. Easier due to restructure'
git cherry-pick c873c0e6
git cherry-pick 64af75f2
git cherry-pick 226cbed0
git cherry-pick 1ac1ae52
git cherry-pick c1c3de87
git cherry-pick 38629b09
git add internal/sessions/session/
git show 4f84d95a775faf49b3b024d58fc873bb0b740127
git ci -m "Manual merge "of 3a80b75e
git ci -m "Manual merge "of 3a80b75e"
git ci -m "Manual merge of 3a80b75e"
git ci -m 'Use paging search with ldap'
git ci -m 'manual merge of 4e4cff2f'
git cherry-pick 2eaf2a7b
cat go.sum
go clean -cache -modcache -i -r
go get github.com/Azure/go-ntlmssp@v0.0.0-20211209120228-48547f28849e
LOGGING_DEBUG_LDAP=true go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestSyncUsersFromLdap -test_debug=true
git ci -m 'added config option to write extra ldap output'
git ci -m 'delete unused code'
go run cmd/authly-cli/main.go set authority server ldap Servername ldapserver0 Enabled true Hostname ldap.com Port 433 TLSPort 4 TLSEnabled true ReadOnlyDN testDN ReadOnlyPass testPass BaseDN testBaseDN AuthArgs uid
go run cmd/authly-cli/main.go set authority server ldap Servername hopp
go test -v $(go list ./...) -run TestCli -test_stdout=true
go run cmd/authly-cli/main.go set authority server ldap Servername ldapserver0 Authorityname nope Enabled true Hostname ldap.com Port 433 TLSPort 4 TLSEnabled true ReadOnlyDN testDN ReadOnlyPass testPass BaseDN testBaseDN UserSyncFilter hmm AuthArgs uid
go run cmd/authly-cli/main.go set authority server ldap Servername ldapserver0 Enabled true Hostname ldap.com Port 433 TLSPort 4 TLSEnabled true ReadOnlyDN testDN ReadOnlyPass testPass BaseDN testBaseDN UserSyncFilter hmm AuthArgs uid
go st
git ci -m 'Updated value arg checks'
git co authrestruct
git merge -s ours master
git merge authrestruct
go vet
pn
git ci -m 'Fix go vet issue'
git ci -m 'Fix random test failure. tcli.ShowOne() didn't fail if there where multiple results and the returned result was random'
git ci -m "Fix random test failure. tcli.ShowOne() didn't fail if there where multiple results and the returned result was random"
git tag 0.6.0
git show fe123562b715c3e18fa24d30eb2952126ce75e1b
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticateService -test_debug=true
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestHealth -test_debug=true
git restore --staged 
git restore --staged internal
git restore --staged pkg test
git ci -m 'Add health endpoint'
git ci -m 'Add authenticate as service test'
git ci -m 'Add headers to response/request debug output'
git ci -m 'Fix session was printed as loaded even when it was not found in redis'
git tag 0.6.1
gopls
gopls serve
git ci -m 'Update to fix gopls static check warnings'
git rebase -i HEAD~1
kvargs
go generate internal/redis/types/hashmodel/...)
go generate internal/redis/types/hashmodel/...
go test -v $(go list ./test) -run TestJsonValueMap -test_stdout=true -test_debug=true
go test -v $(go list ./...) -run TestJsonValueMap -test_stdout=true -test_debug=true
go test -v $(go list ./...) -run TestRedis -test_stdout=true -test_debug=true'
go test -v $(go list ./...) -run TestRedis -test_stdout=true -test_debug=true
go test -v $(go list ./...) -run TestJsonValue -test_stdout=true -test_debug=true
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestUserNewMissingRequiredUsername -test_debug=true
git gui
git add internal/lib/values/
git ci -m 'Take out StrMap and ValueMap. Replace with type values map[string]any and generated KVParser's which parse map[string]string maps based on model or custom written KVParser'
git ci -m "Take out StrMap and ValueMap. Replace with type values map[string]any and generated KVParser's which parse map[string]string maps based on model or custom written KVParser"
git show HEAD^
git ci -m 'Fix not possible to store float and int in resource env'
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestContractF -test_debug=true
git ci -m "Fix issue where all entities where given given contracts if entityid where expected to cli set contract command and strings where given."
git tag 0.6.2
go test -v $(go list ./...) -run TestCli -test_stdout=true -test_debug=true
git ci -m 'Add debug output on test runs'
ps aux | grep authly | grep -v grep
ps auxo pid | grep go-build | grep -v grep
ps aux 
go test -v $(go list ./test) -run TestReload -test_stdout=true -testify.m TestReload -test_debug=true
git ci -m 'Fix failing reload_test'
git tag 0.6.3
git ci -m 'Better check of url args on api. Passing string when int was expected crashed Authly'
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestServiceApiResolveAdvanced -test_debug=true
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestServiceApiResolveBasic -test_debug=true
git ci -m 'Removed fullenv enpoint of resources and updated the resource resolve enpoint to make use of Request context variables'
git tag 0.6.4
git ci -m 'go generate to update docs'
topls
pkill electron
sudo pacman -Syu virtualbox linux54-virtualbox-host-modules
sudo pacman -S virtualbox-ext-oracle
sudo gpasswd -a $USER vboxusers
cd /sbin
sudo ./vboxconfig
l vbox
l *vbox
l vbox*
sudo pacman -S linux515-virtualbox-host-modules
sudo vboxreload
sudo pacman -R linux54-virtualbox-host-modules
autorandr --load hytta
scale
vboxmanage --version
yay -S virtualbox-ext-oracle
sudo gpasswd -a t vboxusers
sudo pacman -S rufus
ventoy
fdisk -d
dmsg
sudo ventoygui
mount
cd tmp
cd /mnt
cd medi
cd mnt
mkdir usb
pkill element
git branch -d WIP
git branch -d accesscontrol
git branch -d authrestruct
git branch -d ldapwork
git branch -D ldapwork
git branch -d redisretry
git branch -D redisretry
git branch -d wip2
git fetch -p
git remote prune origin
git branch -r --merged
git push origin --delete origin/WIP origin/cliwork origin/concurrencywork origin/ldapwork origin/mess origin/oldmaster origin/profilestructurework origin/redisretry origin/rediswork origin/sessionwork origin/wip2
git push origin --delete origin/WIP
git branch -r
git push origin --delete WIP cliwork concurrencywork ldapwork mess oldmaster profilestructurework redisretry rediswork sessionwork wip2
git rev-parse HEAD
git describe [--tags]
git describe --tags
git tag --sort=-version:refname | head -n 1
go build -ldflags "-linkmode external -extldflags -static -X main.version=`git tag --sort=-version:refname | head -n 1`" -o /tmp/authly-serve cmd/authly-serve/main.go
./authly-serve --version
./authly-serve -v
./authly-cli --version
./authly-cli --v
./authly-cli -v
./tmp/authly-cli
go build -ldflags "-linkmode external -extldflags -static -X cli.version=`git tag --sort=-version:refname | head -n 1`" -o /tmp/authly-cli cmd/authly-cli/main.go\

go build -ldflags "-linkmode external -extldflags -static -X authly-core/pkg/cli.Version=`git tag --sort=-version:refname | head -n 1`" -o /tmp/authly-cli cmd/authly-cli/main.go\

go build -ldflags "-linkmode external -extldflags -static -X authly-core/pkg/cli/cli.Version=`git tag --sort=-version:refname | head -n 1`" -o /tmp/authly-cli cmd/authly-cli/main.go\

go build -ldflags "-linkmode external -extldflags -static -X pkg/cli/cli.Version=`git tag --sort=-version:refname | head -n 1`" -o /tmp/authly-cli cmd/authly-cli/main.go\

go build -ldflags "-linkmode external -extldflags -static -X pkg/cli.Version=`git tag --sort=-version:refname | head -n 1`" -o /tmp/authly-cli cmd/authly-cli/main.go\

go build -ldflags "-linkmode external -extldflags -static -X `pkg/cli.Version=tupp` -o /tmp/authly-cli cmd/authly-cli/main.go\

go build -ldflags "-linkmode external -extldflags -static -X `authly-core/pkg/cli.Version=tupp`" -o /tmp/authly-cli cmd/authly-cli/main.go\

go build -ldflags "-linkmode external -extldflags -static -X `./pkg/cli.Version=tupp`" -o /tmp/authly-cli cmd/authly-cli/main.go\

go build -ldflags "-linkmode external -extldflags -static -X `pkg/cli.Version=tupp`" -o /tmp/authly-cli cmd/authly-cli/main.go\

go build -ldflags "-linkmode external -extldflags -static -X `pkg/cli/cli.Version=tupp`" -o /tmp/authly-cli cmd/authly-cli/main.go\

go tool /tmp/authly-cli | grep Version
go tool nm /tmp/authly-cli | grep Version
go build -ldflags "-linkmode external -extldflags -static -X `authly/pkg/cli.Version=tupp`" -o /tmp/authly-cli cmd/authly-cli/main.go\

go build -ldflags "-linkmode external -extldflags -static -X authly/pkg/cli.Version=`git tag --sort=-version:refname | head -n 1`" -o /tmp/authly-cli cmd/authly-cli/main.go\

go build -ldflags "-linkmode external -extldflags -static -X authly/pkg/cli.version=`git tag --sort=-version:refname | head -n 1`" -o /tmp/authly-cli cmd/authly-cli/main.go\

/tmp/authly-cli --version
git ci -m 'Print git tag for --version for authly and cli main'
cd doc
mv /tmp/doc_* .
mkdir image
mv image images
cd images
mv ../doc/doc* .
git ci -m 'Add data model structure to readme'
git ci -m 'Adding configurable SameSite attribute for session-cookie. Default is set to strict. Fixes #30'
git ci -m 'go:generate to update docs'
./authly-serve
./authly-serve --logging_debug
./authly-serve -logging_debug
./authly-serve --help
go build -ldflags "-linkmode external -extldflags -static -X authly/pkg/app.version=`git tag --sort=-version:refname | head -n 1`" -o /tmp/authly-serve cmd/authly-cli/main.go\

./tmp/authly-serve
/tmp/authly-serve
go build -ldflags "-linkmode external -extldflags -static -X authly/pkg/app.version=`git tag --sort=-version:refname | head -n 1`" -o /tmp/authly-serve cmd/authly-serve/main.go\

/tmp/authly-serve --version
git ci -m 'Fix ci error. Use viper instead of flags package.'
autorandr --load laptop
sudo pacman -S redshift
sudo pacman -S geoclue2
nvim /etc/geoclue/geoclue.conf
./usr/lib/geoclue-2.0/demos/where-am-i
systemctl --user start geoclue.service
systemctl start geoclue2.service
systemctl start geoclue.service
systemctl restart geoclue.service
systemctl status geoclue.service
redshift
/usr/lib/geoclue-2.0/demos/where-am-i
systemctl restart redshift.service
systemctl status redshift.service
systemctl enable redshift.service
systemctl --user start redshift.service
systemctl --user restart redshift.service
systemctl --user status redshift.service
sudo nvim /etc/geoclue/geoclue.conf
/usr/lib/geoclue-2.0/demos/agent
cd .i3/
nvim /etc/resolv.conf
nvim /etc/resolv
lspco -k
lspci -k
sudo pacman -S weechat-matrix
locate matrix.py
cd .config/weechat
ln /usr/share/weechat/python/weechat-matrix.py .config/weechat/python/autoload
cp /usr/share/weechat/python/weechat-matrix.py .config/weechat/python/autoload
cd .config/weechat/python
nvim autoload
mkdir .weechat/python
mkdir .weechat
cd .weechat
mkdir python
rm python
rm -rf python
rm autoload
ln /usr/share/weechat/python/weechat-matrix.py .weechat/python/autoload
ln -s /usr/share/weechat/python/weechat-matrix.py .weechat/python/autoload
mkdir autoload
cp /usr/share/weechat/python/weechat-matrix.py autoload
rm -rf .weechat
cd /usr/lib/weechat
cd .local/share/weechat
cd python
cd autoload
ln -s /usr/share/weechat/python/weechat-matrix.py .
pkill weechat
kill -9 4480
kill 5119
kill 4788
kill 5219
ps aux | grep weechat
kill -9 4788
sudo pacman -S neochat
sudo pacman -R neochat
cd testfiles
nvim generateldapusers.go
sudo pacman -S noto-fonts-emoji
git add images/
git ci -m 'fix type in doc image name'
mhwd
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestSyncUsersFromLdap -test_debug=true
go run cmd/authly-cli/main.go show authority -help
go run cmd/authly-cli/main.go show authority -h
go run cmd/authly-cli/main.go set authority -h
go run cmd/authly-cli/main.go show authority server -h
virtualbox -v
yay -S downgrade
export DOWNGRADE_FROM_ALA
downgrade virtualbox
sudo downgrade virtualbox
virtualbox -h
fc-list
kitty list-fonts
kitty --help
kitty --debug-font-fallback
sudo pacman -R element-desktop
sudo pacman -Qi
sudo pacman -Qe
sudo pacman -Qe | grep elect
sudo pacman -Q | grep elect
sudo pacman -R electron
pacman -Qdt
sudo pacman -S element-desktop
sudo pacman -Rs element-desktop
pacman -Rs $ (pacman -Qdtq)
sudo pacman -Rs $(pacman -Qdtq)
sud pacman -S docbook-xml-4.5-9  docbook-xsl-1.79.2-7  gtkmm-1:2.24.5-4  i3lock-2.14.1-1  imagemagick-7.1.0.45-1  imlib2-1.9.1-1  karchive-5.96.0-1  kauth-5.96.0-1  kbookmarks-5.96.0-1  kcodecs-5.96.0-1  kcompletion-5.96.0-1  kconfig-5.96.0-1  kconfigwidgets-5.96.0-1  kcoreaddons-5.96.0-1  kcrash-5.96.0-1  kdbusaddons-5.96.0-1  kded-5.96.0-1  kglobalaccel-5.96.0-1  ki18n-5.96.0-1 kiconthemes-5.96.0-1  kirigami2-5.96.0-1  kitemviews-5.96.0-1  kjobwidgets-5.96.0-1  knotifications-5.96.0-1  kservice-5.96.0-1  ktextwidgets-5.96.0-1  kwallet-5.96.0-1  kwidgetsaddons-5.96.0-1  kxmlgui-5.96.0-1  libdbusmenu-gtk2-16.04.0-5  libdbusmenu-qt5-0.9.3+16.04.20160218-6  libindicator-gtk2-12.10.1-10  liblqr-0.4.2-3  libptytty-2.0-4  libspiro-1:20220722-1 libuninameslist-20211114-1  media-player-info-24-2  papirus-icon-theme-20220808-1  polkit-qt5-0.114.0-1  potrace-1.16-2  python-bcrypt-3.2.2-1  python-docker-5.0.3-3  python-docker-pycreds-0.4.0-9  python-paramiko-2.11.0-1  python-pynacl-1.4.0-5  python-websocket-client-1.3.3-2  qt5-quickcontrols-5.15.5+kde+r0-1  qt5-speech-5.15.5+kde+r1-1  rxvt-unicode-9.30-1\
               rxvt-unicode-terminfo-9.30-1  scrot-1.7-1  solid-5.96.0-1  sonnet-5.96.0-1  xclip-0.13-3  xorg-fonts-alias-misc-1.0.4-1  xsel-1.2.0.20200527-1  adapta-maia-theme-3.94.0.149-2  asciidoc-10.2.0-1  celt-0.11.3-4  dunstify-1.7.3-1  electron13-13.6.9-3  electron15-15.5.4-1  electron17-17.4.10-1  elfutils-0.187-2  fontforge-20220308-1  giblib-1.2.4-8  go-2:1.19-1\
               haskell-errors-2.3.0-65  i3-help-20180110-1  i3-scripts-20200804-1  i3-scrot-2.1-2  i3exit-20201126-1  js78-78.15.0-4  kio-5.96.0-1  kitemmodels-5.96.0-1  kquickimageeditor-0.2.0-1  lib32-libnsl-2.0.0-1  lib32-libxv-1.0.11-3  libappindicator-gtk2-12.10.0.r296-2  libcroco-0.6.13-2  libibus-1.5.26-2  libquotient-0.6.11-1  libvterm-0.2-1  libxvmc-1.0.13-1\
               lua53-lpeg-1.0.2-4  manjaro-base-skel-20171029-3  nitrogen-1.6.1-4  papirus-maia-icon-theme-20200702-1  picom-9.1-3  python-cached-property-1.5.2-5  python-contextlib2-21.6.0-1  python-dockerpty-0.4.1-9  python-html5lib-1.1-11  python-progress-1.6-5  python-retrying-1.3.3-13  python-texttable-1.6.4-3  python-toml-0.10.2-7  qqc2-desktop-style-5.96.0-1\
               sqlcipher-4.5.1-2  syntax-highlighting-5.96.0-1  urxvt-perls-2.3-2  webkit2gtk-2.36.6-1  wireless_tools-30.pre9-3  xcursor-breeze-5.22.5-1  xorg-fonts-misc-1.0.3-10  xorg-mkfontscale-1.2.2-1  zita-alsa-pcmi-0.5.1-1  zita-resampler-1.8.0-1
sudo pacman -S docbook-xml-4.5-9  docbook-xsl-1.79.2-7  gtkmm-1:2.24.5-4  i3lock-2.14.1-1  imagemagick-7.1.0.45-1  imlib2-1.9.1-1  karchive-5.96.0-1  kauth-5.96.0-1  kbookmarks-5.96.0-1  kcodecs-5.96.0-1  kcompletion-5.96.0-1  kconfig-5.96.0-1  kconfigwidgets-5.96.0-1  kcoreaddons-5.96.0-1  kcrash-5.96.0-1  kdbusaddons-5.96.0-1  kded-5.96.0-1  kglobalaccel-5.96.0-1  ki18n-5.96.0-1 kiconthemes-5.96.0-1  kirigami2-5.96.0-1  kitemviews-5.96.0-1  kjobwidgets-5.96.0-1  knotifications-5.96.0-1  kservice-5.96.0-1  ktextwidgets-5.96.0-1  kwallet-5.96.0-1  kwidgetsaddons-5.96.0-1  kxmlgui-5.96.0-1  libdbusmenu-gtk2-16.04.0-5  libdbusmenu-qt5-0.9.3+16.04.20160218-6  libindicator-gtk2-12.10.1-10  liblqr-0.4.2-3  libptytty-2.0-4  libspiro-1:20220722-1 libuninameslist-20211114-1  media-player-info-24-2  papirus-icon-theme-20220808-1  polkit-qt5-0.114.0-1  potrace-1.16-2  python-bcrypt-3.2.2-1  python-docker-5.0.3-3  python-docker-pycreds-0.4.0-9  python-paramiko-2.11.0-1  python-pynacl-1.4.0-5  python-websocket-client-1.3.3-2  qt5-quickcontrols-5.15.5+kde+r0-1  qt5-speech-5.15.5+kde+r1-1  rxvt-unicode-9.30-1 rxvt-unicode-terminfo-9.30-1  scrot-1.7-1  solid-5.96.0-1  sonnet-5.96.0-1  xclip-0.13-3  xorg-fonts-alias-misc-1.0.4-1  xsel-1.2.0.20200527-1  adapta-maia-theme-3.94.0.149-2  asciidoc-10.2.0-1  celt-0.11.3-4  dunstify-1.7.3-1  electron13-13.6.9-3  electron15-15.5.4-1  electron17-17.4.10-1  elfutils-0.187-2  fontforge-20220308-1  giblib-1.2.4-8  go-2:1.19-1 haskell-errors-2.3.0-65  i3-help-20180110-1  i3-scripts-20200804-1  i3-scrot-2.1-2  i3exit-20201126-1  js78-78.15.0-4  kio-5.96.0-1  kitemmodels-5.96.0-1  kquickimageeditor-0.2.0-1  lib32-libnsl-2.0.0-1  lib32-libxv-1.0.11-3  libappindicator-gtk2-12.10.0.r296-2  libcroco-0.6.13-2  libibus-1.5.26-2  libquotient-0.6.11-1  libvterm-0.2-1  libxvmc-1.0.13-1\
               lua53-lpeg-1.0.2-4  manjaro-base-skel-20171029-3  nitrogen-1.6.1-4  papirus-maia-icon-theme-20200702-1  picom-9.1-3  python-cached-property-1.5.2-5  python-contextlib2-21.6.0-1  python-dockerpty-0.4.1-9  python-html5lib-1.1-11  python-progress-1.6-5  python-retrying-1.3.3-13  python-texttable-1.6.4-3  python-toml-0.10.2-7  qqc2-desktop-style-5.96.0-1\
               sqlcipher-4.5.1-2  syntax-highlighting-5.96.0-1  urxvt-perls-2.3-2  webkit2gtk-2.36.6-1  wireless_tools-30.pre9-3  xcursor-breeze-5.22.5-1  xorg-fonts-misc-1.0.3-10  xorg-mkfontscale-1.2.2-1  zita-alsa-pcmi-0.5.1-1  zita-resampler-1.8.0-1
sudo pacman -S dunstify
sudo pacman -S xclip
sudo pacman -S i3lock
sudo pacman -S docbook
cat /var/log/pacman.log
pacman -S adapta-maia-theme asciidoc celt dunstify elfutils fontforge giblib go haskell-errors i3-help i3-scripts i3-scrot i3exit js78 kio kitemmodels kquickimageeditor lib32-libnsl lib32-libxv libappindicator-gtk2 libcroco libibus libquotient libvterm libxvmc lua53-lpeg manjaro-base-skel nitro\
        â´ gen papirus-maia-icon-theme picom python-cached-property python-contextlib2 python-dockerpty python-html5lib python-progress python-retrying python-texttable python-toml qqc2-desktop-style sqlcipher syntax-highlighting urxvt-perls webkit2gtk wireless_tools xcursor-breeze xorg-fonts-misc xorg-mkfontscale zita-alsa-pcmi zita-resampler
sudo pacman -S adapta-maia-theme asciidoc celt dunstify elfutils fontforge giblib go haskell-errors i3-help i3-scripts i3-scrot i3exit js78 kio kitemmodels kquickimageeditor lib32-libnsl lib32-libxv libappindicator-gtk2 libcroco libibus libquotient libvterm libxvmc lua53-lpeg manjaro-base-skel nitro\
        â´ gen papirus-maia-icon-theme picom python-cached-property python-contextlib2 python-dockerpty python-html5lib python-progress python-retrying python-texttable python-toml qqc2-desktop-style sqlcipher syntax-highlighting urxvt-perls webkit2gtk wireless_tools xcursor-breeze xorg-fonts-misc xorg-mkfontscale zita-alsa-pcmi zita-resampler
sudo pacman -S adapta-maia-theme asciidoc celt dunstify elfutils fontforge giblib go haskell-errors i3-help i3-scripts i3-scrot i3exit js78 kio kitemmodels kquickimageeditor lib32-libnsl lib32-libxv libappindicator-gtk2 libcroco libibus libquotient libvterm libxvmc lua53-lpeg manjaro-base-skel nitro\
gen papirus-maia-icon-theme picom python-cached-property python-contextlib2 python-dockerpty python-html5lib python-progress python-retrying python-texttable python-toml qqc2-desktop-style sqlcipher syntax-highlighting urxvt-perls webkit2gtk wireless_tools xcursor-breeze xorg-fonts-misc xorg-mkfontscale zita-alsa-pcmi zita-resampler
sudo pacman -S adapta-maia-theme asciidoc elfutils fontforge go haskell-errors i3-help i3-scripts i3-scrot i3exit js78 kio kitemmodels kquickimageeditor lib32-libnsl lib32-libxv libappindicator-gtk2 libcroco libibus libquotient libvterm libxvmc lua53-lpeg manjaro-base-skel papirus-maia-icon-theme picom python-cached-property python-contextlib2 python-dockerpty python-html5lib python-progress python-retrying python-texttable python-toml qqc2-desktop-style sqlcipher syntax-highlighting urxvt-perls webkit2gtk wireless_tools xcursor-breeze xorg-fonts-misc xorg-mkfontscale zita-alsa-pcmi zita-resampler
sudo pacman -Qe | grep electron
sudo pacman -Rs electron
sudo pacman -S electron
sudo pacman -Si electron
sudo pacman -Sii electron
go test -v $(go list ./test/) -run TestCli -testify.m TestCli/TestServiceNewMissingRequiredOwnerEID
git add internal/lib/aerr/
git show README.md
git diff README.md
git ci -m 'Better error structure with some common errors for creating and manipulating data in Authly. Pluss some minor changes. Fix for #32'
git ci -m 'Fix issue where ldap authentication was possible even when authority was set to disabled. Also improved output for show authortiy'
git -m ammend
wireplumber --version
wireplumber --help
wireplumber version
wpctl status
docker-compose -f localdev-compose.yml up --force-recreate
ldapadd -h
go generateldapusers.go
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestSyncUsersFromLocalLdap
go test -v $(go list ./test) -run TestClki -test_stdout=true -testify.m TestSyncUsersFromLocalLdap
go run cmd/authly-cli/main.go run sync
mkdir go-challenge
mkdir hana
git clone git@github.com:hanaProtojour/go-challenge_hana.git
git clone git@github.com:KnutiFaluti/go-challenge.git
cd pr
rm -rf terje
cd hana
git clone git@github.com:protojour/go-challenge.git
cd go-challenge/go-challenge
go init
go mod init go-challenge
cde
go run cmd/main.go
echo
printenv
echo $GOROOT
echo | grep GO
cd /usr/lib/go/src
cd protojour/go-challenge/go-challenge
go get -u github.com/gorilla/mux
mhwd-kernel -r linux54
sudo mhwd-kernel -r linux54
sudo pacman -S tlp
systemctl enable tlp.service
systemctl start tlp.service
systemctl status tlp.service
sudo pacman -S slimbookbattery
sudo pacman -S linux-tools
sudo pacman -S linux-tools-meta 
sudo pacman -R slimbookbattery
sudo pacman -S tlpui
mhwd-kernel -i linux518
downgrade -h
sudo pacman -S virtualbox
sudo mhwd-kernel -i linux518
sudo pacman -Qe nvidia-prime
cat /proc/driver/nvidia/gpus/0000:01:00.0/power
nvidia-settings
mhwd -i video-hybrid-intel-nvidia-470xx-prime
mhwd -i pci video-hybrid-intel-nvidia-470xx-prime
yy
sudo mhwd -i pci video-hybrid-intel-nvidia-470xx-prime
sudo mhwd-gpu --check
inxi -G
cd knut
cd protojour/go-challenge/hana
nvim cmd/server/main.go
go run cmd/client/main.go hello world
go run cmd/client/main.go abc def
go run cmd/client/main.go xxx ccc
go run cmd/client/main.go xxx ccc asasas asas
xrandr --output DP-1-3 --scale 0.6x0.6
xrandr --output DP-1-3 --scale 0.5x0.5
xrandr --output DP-1-3 --scale 0.4x0.4
cd protojour/go-challenge
go run cmd/client/main.go bla blu bwwwww aaa aaa 
go run cmd/client/main.go bla blu
xrandr --output DP-1-3 --scale 1x1
xrandr --output DP-1-1 --scale 1x1
git add images/doc_authorities.png
git ci -m 'Update data structure doc img'
mkdir terje
git clone git@github.com:Tloe/go-challenge.git
cd go-challenge
[17~
rm -rf go-challenge
cd terje
git ci -m 'Terje's solution'
git ci -m 'Terjes try'
git add cmd/ go go.mod go.sum internal/
git add cmd/
git ci -m 'unserious commit message'
cd go-challenge/terje
git co -b ldapwork
git ci -m \.\ 
go run cmd/authly-cli/main.go set user -h
nvim kitty
xrandr --output eDP-1-1 --scale 1x1
errcheck -v
errcheck -verbose
git config pull
git config
nvim pappa
ash
bash
go test -v $(go list ./test) -run TestCli -test_stdout=true -test_debug=true -testify.m TestSyncUsersFromLocalLdap
ldapsearch -x -b "dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'admin' -H ldap://0.0.0.0
ldapsearch -x -b "dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'admin' -H ldap://0.0.0.0 -s sub "(&(objectClass=*))" givenName sn mail uid
ldapsearch -x -b "dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'admin' -H ldap://0.0.0.0 -s sub '(&(memberUid=terje.loe))'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=gitlab-ro,dc=protojour,dc=com -w 'admin' -H ldap://0.0.0.0 -s sub '(& (objectclass=*))'
ldappasswd -H ldap://0.0.0.0 -X -D "gitlab-ro" -W -A -S
ldapsearch -x -b "dc=protojour,dc=com" -D cn=admin,dc=protojour,dc=com -w 'admin' -H ldap://0.0.0.0 -s sub '(& (objectclass=*))'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=gitlab-ro,dc=protojour,dc=com -w 'gitlab-ro' -H ldap://0.0.0.0 -s sub '(& (objectclass=*))'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(& (objectclass=*))' -E
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(& (objectClass=*))' -E
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(&(objectClass=*))'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(& (objectClass=*))' dn,sn,mail,uid,cn
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(& (objectClass=*))'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(&(objectClass=*))' sn
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(&(objectClass=*))' sn,mail
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(&(objectClass=*))' sn mail
mkdir play
mkdir switch
cd switch
go mod init switch
git clone git@github.com:nohupped/ADtoLDAP.git
cd ADtoLDAP
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(& (objectClass=*))' dn sn mail uid cn -z0
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -z 0 -s sub '(& (objectClass=*))' dn sn mail uid cn
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -z 600 -s sub '(& (objectClass=*))' dn sn mail uid cn
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 --simplePageSize 2 -s sub '(& (objectClass=*))' dn sn mail uid cn
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -E pr1000/noprompt -s sub '(& (objectClass=*))' dn sn mail uid cn
docker list
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -E pr=1000/noprompt -s sub '(& (objectClass=*))' dn sn mail uid cn
docker exec -it 0a36a270b48d bash
ldapsearch
ldapsearch -h
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -E pr=500/noprompt -z 1000 -s sub '(& (objectClass=*))' dn sn mail uid cn
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -E pr=500/noprompt --simplePageSize 2 -s sub '(& (objectClass=*))' dn sn mail uid cn
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -E pr=500/prompt -s sub '(& (objectClass=*))' dn sn mail uid cn
ldapsearch -X -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(& (objectClass=*))' dn sn mail uid cn
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(& (objectClass=*))' dn sn mail uid cn
go test -v $(go list ./test/) -run TestCli -testify.m TestServiceNewMissingRequiredOwnerEID
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestServiceNewMissing -test_debug=true
git diff ldapwork..master
git ci -m .Â´
git ci -m 'dont do docker login in build step'
cd cobra
git ci -m 'Use authorityname and servername in authentication request instead of Authority and Server. Fix #45'
git ci -m 'Return empty list at /api/auth/authorities when no servers are set'
git tag 0.6.5
go run cmd/authly-cli/main.go set authority server ldap Servername ldap.forumsys.com Enabled true Hostname ldap.forumsys.com Port 389 TLSPort 636 TLSEnabled false ReadOnlyDN cn=read-only-admin,dc=example,dc=com ReadOnlyPass password BaseDN dc=example,dc=com AuthArgs uid UserSyncFilter "(&(objectClass=*))"
go run cmd/authly-cli/main.go set authority usertemplate ldap ldap Firstname "{cn}" Lastname "{sn}" Email "{mail}" Username "{uid}"
mkdir benchstringwrite
mv benchstringwrite benchmultiwrite stdout
mv benchstringwrite benchmultiwritestdout
go mod init
go mod init benchmulti
cd protojour/play/benchmultiwritestdout
go test -bench=.
cd benchmultiwritestdout
rm authly.log
tail -f authly.lgo
touch authly.log
tail -f authly.log
git co ldapwork
nvim version
go test -p 1 -v $(go list ./...)
xrandr --output eDP-1-1 --scale 0.6x0.6
sudo mhwd-gpu --status
sudo mhwd -r pci video-hybrid-intel-nvidia-470xx-prime
sudo nvim /etc/optimus-manager/optimus-manager.conf
sudo pacman -S linux518-bbswitch
sudo pacman -S fmt
go get .
go get authly
mkdir colorprint
go mod init colorprint
go get "github.com/fatih/color"
cd colorprint
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticateLdap -test_debug=true
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(& (objectclass=*))'
xrandr --output eDP-1-1 --scale 0.5x0.5
redis-server --databases 100
go test -v $(go list ./test) -run TestReload -test_stdout=true -testify.m TestReload
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -E pr=500/noprompt -s sub '(& (objectClass=ysers))' dn sn mail uid cn
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -E pr=500/noprompt -s
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -E pr=500/noprompt
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -E pr=500/noprompt -s sub '(& (objectClass=users))' dn sn mail uid cn
go run tools/ldifgen/generateldapusers.go
enname561 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname562 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname563 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname564 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname565 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname566 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname567 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname568 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname569 Ldaper   \
[TEST]    |                      [D              |                                                                                                                 OK Givenname570 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname571 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname572 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname573 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname574 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname575 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname576 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname577 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname578 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname579 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname580 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname581 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname582 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname583 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname584 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname585 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname586 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname587 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname588 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname589 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname590 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname591 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname592 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname593 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname594 Ldaper   \
[TEST]    |                                    |                                                                                                                 OK Givenname595 Ldaper   
cd tools/ldifgen
go run generateldapusers.go
OA
git add files/ internal/ pkg/ tools/
sudo pacman -S forgit
ga .
git restore --staged .
type ga
cd gi
cat .profile
zsh -ixc : 2>&1 | grep ...
zsh -ixc : 2>&1 | grep ga
source <(curl -sSL git.io/forgit)
sudo pacman -S lazygit
cd .oh-my-zsh
nvim oh-my-zsh.sh
cp .zshrc zshrc
uninstall_oh_my_zsh
mv zshrc .zshrc
cd .zsh/
mkdir themes
cd themes
git clone https://github.com/romkatv/powerlevel10k.git
go test
git clone git@github.com:unixorn/fzf-zsh-plugin.git
git clone git@github.com:zdharma-zmirror/fast-syntax-highlighting.git
source $ZSH/plugins/zsh-autosuggestions-master/zsh-autosuggestions.zsh
git clone git@github.com:zsh-users/zsh-autosuggestions.git
git clone git@github.com:zsh-users/zsh-completions.git
cd pluginsa
ls -ll
nvim .zsh
cd .zsh/plugins
cd fzf-zsh-plugi
zstyle
bindkey -M menuselect
bindkey -M 
bindkey
bindkey -help
bindkey -h
bindkey --help
man bindkey
lsd
asdad
cn
p10k configure
nvim .p10k.zsh
cd /usr/share/zsh/plugins/forgit-git
cd memoriam
rm index.lock
cd pl
kls
git clone https://github.com/wfxr/forgit.git
go clean --modcache
go run
mv /tmp/go.sum .
type go
grc go
grc run
yay -R forgit-git
yay -S forgit-git
forgit add
forgit::add
glo --help
which grc
OC
arp =a
arp -a
git ci -m 'Remove protojour domainname for ldap in test docker-compose'
git tag 0.6.6
go test -v $(go list ./...) -run TestPr
go test internal/lib/output/printable
go test internal/lib/output/printable.
go test internal/lib/output/printable/.
go test -v $(go list ./test) -run TestPr -test_stdout=true
go test -v $(go list ./...) -run TestPr -test_stdout=true
go test internal/lib/output/printable/printable_test.goo
go test internal/lib/output/printable/printable_test.go
cd internal/lib/output/printable/printable_test.go
cd internal/lib/output/printable/
go test ./...
docker-compose -f deployments/docker-compose.yml up --force-recreate --remove-orphans
nvim Dockerfile
cat deployments/docker-compose.yml
nvim deployments/docker-compose.yml
rm -rf files ldap
cd ldap
cat pagingsize.ldif
git reset ldap
git restore ldap
cd deo
rm -rf deployments
sudo rm -rf deployments
docker-compose -f docker-compose.yml up --force-recreate --remove-orphans | less
git ci -m 'move test-docker-compose.yml to test/docker-compos.yml'
git ci -m 'Added tablewrite to printable.Data for printing rows with multiple lines'
C
docker-compose -f localdev-compose.yml up --force-recreate --remove-orphans
docker-compose  up --force-recreate --remove-orphans
cp docker-compose.yml test-docker-compose.yml
docker-compose -f test-docker-compose.yml up --force-recreate --remove-orphans
git add docker-compose.yml files internal test-docker-compose.yml
git ci -m 'errcheck fix, pluss some restructure'
errcheck
git ci -m 'fix filepath to docker-cpmpose file. Also need to add docker-compose to runner'
ssh pxn-gl-run2
git ci -m 'rename iprint to aprint'
git co accesscontrol
gc
gco
gch
cat configs
ls configs
cd configs
git restore ../pkg/app/config/config.go
git restore --staged ../pkg/app/config/config.go
git ci -m 'Do not print ldap read only pass'
nvim test/docker-compose.yml
mv deployments/docker-compose.yml .
mv docker-compose.yml deployments
cd deployments
ls ../files
docker-compose -f docker-compose.yml up --force-recreate
docker-compose -f deployments/docker-compose.yml up --force-recreate
docker-compose -f deployments/docker-compose.yml up --force-recreate | less
docker-compose -f test/test-docker-compose.yml up --force-recreate | less
go get github.com/olekukonko/tablewriter
docker-compose -f test/test-docker-compose.yml up --force-recreate
docker-compose -f test/docker-compose.yml up --force-recreate
gl
git push origin +master
git push --force origin master
grh
git reset --hard 8c36d66
git reflot
git cherry-pick 0b5ecde
git cherry-pick --continue
git cherry-pick --abort
git show 0b5ecde
git tag 0.6.7
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestServiceApi
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestServiceApi -test_debug=true
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestContractRemove -test_debug=true
go test -v $(go list ./test) -run TestCli -test_stdout=true -test_debug=true -testify.m TestGroupMembersNew
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestRoleMembersNew -test_debug=true
sudo pacman -S tig
tig
git blame internal/redis/redis
git blame internal/redis/redis.go
git blame internal/redis/redis.go | tig
grb
git ci -m 'forgot to check error'
git tag 0.6.8
go run pkg/cli/command/generator.go
go run pkg/cli/command/generator.go command.yml
cd pkg/cli/command
axygit
la
git branch commandgen
git diff 
rm pkg/cli/command/generator.go
mkdir cat
go mod init cat
cd tools/generate
rm *_gen*
cd deployments/
rm -rf files tools
sudo rm -rf files tools
cat ldap/generated.ldif
mv test-docker-compose.yml test
mv test-docker-compose.yml docker-compose.yml
export CGO_ENABLED_0
git ci -m 'remove ldap from docker-compose.yml and add info about netdns in readme'
cd pkg/cli/command/
go run generator.go
git add remove_gen.go run_gen.go set_gen.go show_gen.go
git ci -m 'Hide ServiceSecret and Password when cli prints the command args'
go test -v $(go list ./...) --testparallel=false -run TestCli
go test -v $(go list ./...)-run TestCli
go test -v $(go list ./test) -run TestCli -testify.m TestServiceNewMissingRequiredOwnerEID
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticateGroup -test_debug=true
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticate -test_debug=true
git tag 0.6.9
git lpg
builtin cd -- ./pkg/cli/command/
go run generator.go commands.yml
cd cat
git ci -a --amend
git ci -m 'Check redis connection on redis init and exit on fail'
docker -v
docker
sudo pacman -S docker
go test -v $(go list ./...) -run TestRedis -testify.m TestRedis
go test -v $(go list ./internal/redis/redis_test/)
go test -v $(go list ./internal/redis/redis_test/) -test_stdout=true
git restore go.mod go.sum
docker-compose up --build .
docker-compose up --build
ls -ctr
[200~if b, e := imports.Process("", buf.Bytes(), &imports.Options{
		AllErrors: true, Comments: true, TabIndent: true, TabWidth: 8,
cat .zshrc | tail -1 | xargs cat
cat .zshrc | tail -1
cat .zshrc | cat
hello | cat
echo hello | cat
echo hello howdy | cat
echo `Hello\
howdy` | cat
cat << EOF\
hello\
there\
EOF
bat some 
bat | some
bat
bat .zshrc
cat hello
hello | xargs cat
ehco hello | xargs cat
echo hello | xargs cat
[200~ls -ctr | tail -1 | xargs cat~
ls -ctr | tail -1 | xargs cat
echo hello | tail -1 | xargs
echo hello | tail -1 | xargs cat
hello cat
echo `hello | tail -1 | xargs cat\
asd`
echo `hello\
asda`
echo hello
nvim .config/lazygit/config.yml
mhwd-kernel -i linux519
sudo mhwd-kernel -i linux519
sudo mhwd-kernel -r linux515
ps auxo pid | grep go-build
ps aux\ pid | grep go-build
ps aux | grep 'authly-test\|go-build' | grep -v grep | awk '{print $2}' | xargs kill
ps aux | grep 'authly-test\|go-build'
ps aux | grep 'authly-test\|go-build' | grep -v grep
ps aux | grep 'authly-test\|go-build' | grep -v grep | awk '{print $2}'
ps aux | grep 'authly-test\|go-build' | grep -v grep | awk '{print $2}' | xargs kill -9
ps aux pid | grep go-build
go generate internal/router/api/cliapi/cmdargs
go generate internal/router/api/cliapi/cmdargs/cmdargs.go
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestContractSet -test_debug=true
go test -v $(go list ./test/) -testify.m CliTests
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestServerLdapRemove -test_debug=true
sudo pacman -S gimp
uname -r
mhwd-kernel -r linux518
sudo mhwd-kernel -r linux518
go generate $(go list .//...)
\
   7   â´     type RunArgs struct {\
   8   â´     \
   9   â´     
rm pkg/cli/command/*_gen.go
rm pkg/cli/gen/*_gen.go
go generate $(go list ./pkg/cli/command/...)
go generate $(go list ./pkg/cli/gen/...)
rm pkg/cli/cliemdpoint*_gen.go
rm pkg/cli/cliemdpoint/*_gen.go
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestAuthoritySet -test_debug=true
go test -v $(go list ./test) -run TestCli -test_stdout=true -test_debug=true
go generate $(go list ./pkg/cli/cliarg)
go generate $(go list ./pkg/cli/cliarg/...)
go generate $(go list ./pkg/cli//...)
go generate $(go list ./pkg/cli/wa...)
rm pkg/cli/cliendpoint *_gen.go
cd pkg/cli/cliendpoint
go get gopkg.in/yaml.v3
go test -v $(go list ./test) -test_stdout=true -run TestCli -testify.m TestContractRemove
gopls --help
rm pkg/cli/cliarg/*_gen.go pkg/cli/cliendpoint/*_gen.go pkg/cli/cliendpoint/*_gen.go
go test -v $(go list ./test) -run TestApi -test_stdout=true
go test -v $(go list ./test) -test_stdout=true
go test -v $(go list ./test) -test_stdout=true -run TestCli -testify.m TestContractSet
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestContractShow -test_debug=true
lo
go mod tidy -v
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestServiceNew -test_debug=true
go test -v $(go list ./test/...) -test_stdout=true
go generate $(go list ./pkg/app/...)
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestServiceApiPolicy
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestUserNew -test_debug=true
go test -v $(go list ./test) -test_stdout=true -run TestCli
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestServerLdapNew -test_debug=true
git ci -m 'm'
git restore internal/entities/services/services.go
go install github.com/hhatto/gocloc/cmd/gocloc@latest
goloc
go uninstall github.com/hhatto/gocloc/cmd/gocloc@latest
go uninstall -u github.com/hhatto/gocloc/cmd/gocloc@latest
go help
sudo reboo
go test -v $(go list ./test) -run TestCli -testify.m TestServiceNewMissingRequiredOwnerEID -test_stdout=true
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestServiceNewMissingRequiredServicename -test_debug=true
git rm internal/router/api/cliapi/cmdargs/
git rm -r internal/router/api/cliapi/cmdargs/
git rm internal/router/api/cliapi/cliapi.go
git rm pkg/cli/command/removecmd.go pkg/cli/command/showcmd.go
git rm test/cli_test.go
git add internal
git rm internal/redis/types/hashmodel/model/types.yml
autorandr --save laptop --force
go test -v $(go list ./...) --testparallel=false -run TestCliUserNewMissingRequiredUsernam
go test -v $(go list ./test) --testparallel=false -run TestCliUserNewMissingRequiredUsernam
go test -v $(go list ./test) -run TestCli -test_stdout=true -test_debug=true -testify.m TestCliUser
go test -v $(go list ./test) -run TestCli -test_stdout=true -test_debug=true -testify.m TestCliUserNewMissingRequiredUsername
go test -v $(go list ./test/...) -run TestCli -test_stdout=true -test_debug=true -testify.m TestCliUserNewMissingRequiredUsername
go test -v $(go list ./test/...) -run TestCli -test_stdout=true -test_debug=true -testify.m TestUserNewMissingRequiredUsername
git add internal/redis/
git show HEAD\ 
bat --list-themes
bat --list-languages
rm internal/redis/types/hashmodel/*_gen.go
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestSyncUsersFromLdap
git ci -m 'update model generator to use new generate package and removed old typegen'
go test -v $(go list ./...) -run TestRedis -testify.m TestRedisHashModel
go test -v $(go list ./...) -run TestRedis/TestRedisHashModel
go test -v $(go list ./...) -run TestRedis/TestHashModel
go test -v $(go list ./internal/redis/...) -run TestRedisHashmap
go test -v $(go list ./internal/redis/...) -run TestHashmodel
go test -v $(go list ./internal/redis/...) -run TestRedis -testify.m TestHashmodel
lazy
git co com
git co commandgen
git reset --hard 335aba2
git reset --hard f61bd7a
sudo pacman -S ytfzf
yay -S ytfzf
git clone https://github.com/pystardust/ytfzf
cd ytfzf
sudo make install doc
sudo pacmna -S jq
sudo pacman -S jq
ytfzf -D
sudo pacman -S ueberzug
ytfzf
ytfzf -t
sudo pacman -S emoji-cli
yay -S emoji-cli
sudo pacman -S git-delta
gda
git show e07a07b194a9d9441b8f5ed6573698dc6b0c8fa1:/internal/api/cliapi/cliapi.go
git show e07a07b194a9d9441b8f5ed6573698dc6b0c8fa1:/internal/router/api/cliapi/cliapi.go
git show fd61a5f8b71f10ea4df8d22c3c7bd5e924821235:/internal/api/cliapi/cliapi.go
git show fd61a5f8b71f10ea4df8d22c3c7bd5e924821235:internal/api/cliapi/cliapi.go
git show fd61a5f8b71f10ea4df8d22c3c7bd5e924821235:pkg/cli/cliendpoint/cliendpoint.go
go test -v $(go list ./test) -run TestCliSete -test_stdout=true -testify.m TestSetAuthority
go test -v $(go list ./test) -run TestCliSete -test_stdout=true -testify.m TestAuthoritySet
[D
go test -v $(go list ./test) -run TestCliSete -test_stdout=true
go test -v $(go list ./test) -run TestCliSet
go test -v $(go list ./test) -run TestCliSet -test_stdout=true -testify.m TestGroupAsGroupMember
go test -v $(go list ./test) -run TestCliSet -test_stdout=true -testify.m TestGroupMembersNew
go test -v $(go list ./test) -run TestCliSet -test_stdout=true -testify.m TestRoleMembersNew
go test -v $(go list ./test) -run TestCliSet -test_stdout=true -testify.m TestServiceNewMissing
go test -v $(go list ./test) -run TestCliSet -test_stdout=true -testify.m TestSetWrongMemberType
go test -v $(go list ./test) -run TestCliSet -test_stdout=true
go test -v $(go list ./test) -run TestCliRemove -test_stdout=true -testify.m TestRemoveMembersInGroup
go test -v $(go list ./test) -run TestCliLdap -test_stdout=true
git ci -m 'merge cleanup. The new cli generator made a bit of a mess'
git merge commandgen
cd .git/hooks
nvim pre-push.sample
nvim pre-push
chmod +x pre-push
rm .git/hooks/pre-push
chmod +x .git/hooks/pre-push
ehco $FORGIT_PAGER
echo $FORGIT_PAGER
a
nvim deltatheme
mv deltatheme deltatheme.gitconfig
nvim deltatheme.gitconfig
delta
cat deltatheme.gitconfig
git config --global core 
git config --list
fd
fd --type file --color=always
exec
exec $FZF_DEFAULT_COMMAND
echo $FZF_DEFAULT_COMMAND
eval $FZF_DEFAULT_COMMAND
eval $FZF_CTRL_T_COMMAND
echo $FZF_CTRL_T_COMMAND
builtin cd -- ./.wine/dosdevices/z:/usr/share/man/da/
echo $forgit_pager
nvim .gitconfig
sudo pacman -S diff-so-fancy 
sudo pacman -R diff-so-fancy 
git diff | delta --side-by-side
git diff | delta --side-by-side | less
pip install pygount
pygount --format=summary .
pkill arandr
autorandr --list
autorandr hpme
gd
forgit::diff
cd .
autorandr
arandr --help
sudo pacman -S xlayoutdisplay
yay -S xlayoutdisplay
xlayoutdisplay
xlayoutdisplay --help
xrandr \\
 --dpi 288 \\
 --output eDP-1 --off \\
 --output DP-1 --off \\
 --output HDMI-1 --off \\
 --output DP-2 --off \\
 --output HDMI-2 --off \\
 --output DP-3 --off \\
 --output DP-1-1 --off \\
 --output DP-1-1-8 --mode 2560x1440 --rate 60 --pos 3840x0 --primary \\
 --output DP-1-1-1 --mode 2560x1440 --rate 60 --pos 6400x0
xrandr \\
 --output DP-1-1-8 --mode 2560x1440 --rate 60 --pos 3840x0 --primary \\
 --output DP-1-1-1 --mode 2560x1440 --rate 60 --pos 6400x0
xrandr \\
 --output DP-1-1-8 --mode 2560x1440 --rate 60 --pos 0x0 --primary \\
 --output DP-1-1-1 --mode 2560x1440 --rate 60 --pos 2560x0
xrandr \\
 --output DP-1-1-8 --mode 2560x1440 --rate 60 --primary
xrandr \\
  --output DP-1-1-1 --mode 2560x1440 --rate 60 --pos 2560x0
mhwd -i pci video-nvidia
nvim .xinitrc
go run main.go < hmmmm
go run main.go hmmmm
go run main.go hmmmm EOF
go run main.go aaa eof
go run main.go aaa EOT
go run main.go < main.go
hello | go run main.go
cat hello | go run main.go
cd protojour/play
mkdir pipe
go mod init pipe
go mod download gopkg.in/check.v1
go generate $(go list ./internal/operations
go generate $(go list ./internal/operations/)
rm internal/operation/*_gen.go
git clone git@github.com:go-yaml/yaml.git
cd yaml
glo
go run cmd/authly-cli/main.go run file configs/example.yml --remote=true
rm pkg/app/setup/setup_gen.go
go generate $(go list ./pkg/app/setup/...)
go run cmd/authly-cli/main.go run file example.yml --remote=true
dmesg | tail
sudo dmesg | tail
v4l2-ctl --list-devices
sudo pacman -S xawtv
vlc v4l2://:input-slave=alsa://:v4l-vdev="/dev/video4"
vlc v4l2://:input-slave=alsa://:v4l-vdev="/dev/video5"
vlc v4l2://:input-slave=alsa://:v4l-vdev="/dev/media2"
sudo systemctl status usbmuxd.service restart
sudo systemctl restart usbmuxd.service
sudo systemctl status usbmuxd.service
git switch -c provisioning
arandr
sudo pacman -S xorg-xwayland
git ci -m 'rename of generator files to main.go. Generator.go in same folder has the tools/generate generator interface implementation and file with package name has defenitions used in the generated files'
cat test/docker-compose.yml
cat test/docker-compose.ymld .grc
280*4
115*4
sudo pacman -S neofetch
neofetch
autorandr --help
autorandr --detected
go test -v $(go list ./test/...) -run TestCli -test_stdout=true -test_debug=true -testify.m TestContractNew
go test -count=1 -v $(go list ./test/...) -testparallel=false -run TestAuthenticateUser
go test -count=1 -v $(go list ./test/...) -testparallel=false -run TestApi
go test -count=1 -v $(go list ./test/...) -testparallel=false -run TestAPI
go test -v $(go list ./test/...) -run TestApi -test_stdout=true -test_debug=true -testify.m TestAuthenticate
go test -v $(go list ./test/...) -run TestApi -test_stdout=true -test_debug=true -testify.m TestAuthenticateUser
git reflog --pretty=short
git reset --hard 1b43a90
git ci -m 'faster params for argon2 algo for tests'
git tag 0.7.0
git ci -m 'remove print in config doc generator'
git ci -m --ammend
git help commit
git tag 0.7.1
git co f3ba24a
git reset f3ba24a
git log -g
git show ORIG_HEAD
git reflog --date=iso
git reset --hard a757fb9
git reset --hard f3ba24a
git ci -m 'dont return err on empty listings from stores multi storable functions. eg Users, Services..'
git branch changelog
git ci -m 'added entry'
go generate $(go list ./internal/redis/types/hashmodel/...)
go generate $(go list ./internal/redis/types/hashmodel/model/generator.go)
go generate $(go list ./internal/redis/types/hashmodel/hashmodel.go)
go generate $(go list ./internal/redis/types/hashmodel/model/model.go)
go generate $(go list ./internal/redis/types/hashmodel/model/...)
go generate $(go list ./internal/redis/types/hashmodel/model/main.go)
go generate /internal/redis/types/hashmodel/model/main.go
go generate internal/redis/types/hashmodel/model/main.go
go generate internal/redis/types/hashmodel/model
rm internal/redis/types/hashmodel/model/*_gen.go
go generate internal/redis/types/hashmodel/model/model.go
rm internal/operation/opdata_gen.go
xdotool
xdotool key XF86MonBrightnessUp
xbacklight -set 10
xbacklight -set 60
xbacklight 
cat /sys/class/backlight/acpi_video0/max_brightness
xbacklight --help
cat /sys/class/backlight/intel_backlight/max_brightness
echo 30 >  /sys/class/backlight/intel_backlight/brightness
nvim .grc/grc.conf
locate .grc
cat .git/hooks/pre-push
++++++++++++++++++++
ssh 10.0.8.26
ssh root@10.0.8.26
rm internal/operation/operation_gen.go
rm internal/operations/operation/operation_gen.go internal/operations/opdata/operation_gen.go
rm internal/operations/operation/operation_gen.go
rm internal/operations/opdata/opdata_gen.go
su
rm internal/operations/operation/operation_gen.go internal/operations/opdata/opdata_gen.go
cd go-build1008054571
git tag 0.7.2
git restore configs/example.yml
go generate $(go list ./internal/operations/...)
go list ./internal/operations/...
\:wa
gcb 
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticateUserB -test_debug=true
nvim .grc/grc.conf 
nvim ~/.grc/grc.conf
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticateUser -test_debug=true
git ci -m 'Added tests for when password is blank. Should not be able to authenticate with blank password. Synced users will have blank passwords, but will only be able to authenticate with authority if password is not updated'
gs
nano configs/example.yml
git co tags/0.6.8 -b master
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticateUserBlankPassword -test_debug=true
git ci -m 'Update blank password test'
git co tags/0.6.8 -b v0.6.8
git restore internal/entities/
git restore test/
git stbranch --delete v0.6.8
git branch --delete v0.6.8
go generate internal/operation/opdata/generator.go
rm internal/operation/operation_gen.go internal/operation/opdata/opdata_gen.go
nvim canbedeleted
nvim -version
sudo pa
$(go list ./internal/operation/...)
go list ./internal/operation/..
go list ./internal/operation/...
go generate authly/internalt/operation/opnode
go generate authly/internalt/opd
go run internal/operation/opnode/main.go
go run internal/operation/opnode/mainpretty.go
SHOW=true go generate $(go list ./internal/operation/...)
SHOW_PRE_FORMAT=true go generate $(go list ./internal/operation/...)
;5A
go run internal/operation/opnode/mainprint.go
â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´â´\
FATAL                 *** Failed to format:129:17: m
w
gitkraken
go test -v $(go list ./internal/redis/...) -test_stdout=true -run TestRedis -testify.m TestHashmodel
go test -v $(go list ./internal/redis/...) -run TestHashModel
go test -v $(go list ./internal/redis/...) -run TestRedis -testify.m TestSet -test_debug=true -test_stdout=true
go test -v $(go list ./internal/redis/...) -run TestRedis -testify.m TestHashMap -test_debug=true -test_stdout=true
go test -v $(go list ./internal/redis/...) -run TestRedis -testify.m TestHashmodel -test_debug=true -test_stdout=true
go mod clean
go mod help
go get github.com/go-redis/redis/v9
go test -v $(go list ./internal/redis/...) -run TestRedis -testify.m TestHashmap -test_debug=true -test_stdout=true
go test -v $(go list ./test) -run TestCli -test_stdout=true -testify.m TestSyncUsersFromLocalLdap
go test -v $(go list ./test) -run TestCli -test_stdout=true
go test -v $(go list ./test) -run TestCliLdap -test_stdout=true -testify.m TestSyncUsersFromLdap
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m Test[200~ServiceApiResolveVmInstances~
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m Test[200~ServiceApiResolveVmInstances
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestServiceApiResolveVmInstances
go test -v $(go list ./...) -run TestREdis
go test -v $(go list ./test) -run TestApi
ga
yay -S smartgit
go run cmd/authly-cli/main.go run file configs/example.yml\ 
laz
git git st
git commit --fixup f08181a8b5c3e599eed8dec53b781b0ff6e0544a
git rebase -i --autosquash 2bf42f03f8bd158582af194be3fcbc39668efc35
git co provisioning
git merge master
git show 00ff304db5164696296178c295a1b67b47c0dc13:internal/redis/rtype/hashmodel/model/generator.go
go generate $(go list ./internal/redis/rtype/hashmodel/...)
git show 00ff304db5164696296178c295a1b67b47c0dc13:internal/redis/rtype/hashmodel/model/models.yml
git show 00ff304db5164696296178c295a1b67b47c0dc13:pkg/cli/commands.yml
git show 00ff304db5164696296178c295a1b67b47c0dc13:internal/api/cliapi/run.go
git diff 00ff304db5164696296178c295a1b67b47c0dc13 master
sudo pacman -S sourcetree
sudo pacman -S gitkraken
yay -S gitkraken
cd /usr/lib/go/src/reflect
autoranrd baat
ps aux | grep nheko
sudo nvim /etc/makepkg.conf
cat /proc/cpuinfo
ps aux | grep Xorg
sudoi pkill Xorg
rm pkg/cli/clicmd/*_gen.go pkg/cli/cliendpoint/*_gem.go pkg/cli/cliarg/*_gen,go
rm pkg/cli/clicmd/*_gem.go
ls pkg/cli/clicmd/
ls pkg/cli/clicmd/*_gem.go
ls pkg/cli/clicmd/._gem.go
ls pkg/cli/clicmd/*
ls pkg/cli/clicmd/*_gem*
ls pkg/cli/clicmd/_gem
ls pkg/cli/clicmd/*_gen*
go run cmd/authly-cli/main.go run file >>> Hello
go run cmd/authly-cli/main.go run file > Hello
rm Hello
go run cmd/authly-cli/main.go run file | Hello
go run cmd/authly-cli/main.go run file < hello
go run cmd/authly-cli/main.go run file <<< hello
go run cmd/authly-cli/main.go run file <<< "hello"
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestAuthenticateUserWrongCredentials -test_debug=true
go test -v $(go list ./test/...) -run TestCliSet/TestServiceNewMissingRequiredOwnerEID
go test -v $(go list ./test/...) -run TestCliSet/TestServiceNewMissingRequiredOwnerEID -test_debug=true -test_stdout=true
rm pkg/cli/cliendpoint/*_gen.go
git ci -m 'Updated cli endpoint generator to get redis instance injected into handle function'
go run cmd/authly-cli/main.go run file > hellp
go run cmd/authly-cli/main.go run file
"hello" > go run cmd/authly-cli/main.go run file~
go run cmd/authly-cli/main.go run file --help
go run cmd/authly-cli/main.go run file < "Hello"
go run cmd/authly-cli/main.go run file < Hello
hekki | go run cmd/authly-cli/main.go run file
go run cmd/authly-cli/main.go run file 
go run cmd/authly-cli/main.go run file  helkoi
go run cmd/authly-cli/main.go run file hell
go run cmd/authly-cli/main.go run file <<< hell
git show fd61a5f8b71f10ea4df8d22c3c7bd5e924821235:pkg/cli/clicmd/clicmd.go
git show fd61a5f8b71f10ea4df8d22c3c7bd5e924821235:pkg/cli/clicmd/run_gen.go
git grep stdcin fd61a5f8b71f10ea4df8d22c3c7bd5e924821235
git grep stdout fd61a5f8b71f10ea4df8d22c3c7bd5e924821235
git grep Stdout fd61a5f8b71f10ea4df8d22c3c7bd5e924821235
git grep Stdin fd61a5f8b71f10ea4df8d22c3c7bd5e924821235
git grep Stdinn fd61a5f8b71f10ea4df8d22c3c7bd5e924821235
git grep ModeChar fd61a5f8b71f10ea4df8d22c3c7bd5e924821235
git grep ModeChar master
git grep ModeChar 00ff304db5164696296178c295a1b67b47c0dc13
git show 00ff304db5164696296178c295a1b67b47c0dc13:pkg/cli/clicmd/generator.go
git show 00ff304db5164696296178c295a1b67b47c0dc13:pkg/cli/cliarg/run_gen.go
git show 00ff304db5164696296178c295a1b67b47c0dc13:pkg/cli/cliarg/generator.go
git diff 00ff304db5164696296178c295a1b67b47c0dc13:pkg/cli/cliarg/generator.go
git diff 00ff304db5164696296178c295a1b67b47c0dc13:HEAD pkg/cli/cliarg/generator.go
git diff 00ff304db5164696296178c295a1b67b47c0dc13 HEAD pkg/cli/cliarg/generator.go
git diff 00ff304db5164696296178c295a1b67b47c0dc13..HEAD pkg/cli/cliarg/generator.go
cat go
rm go
git log --short
git log 
git commit --fixup 0da2f5d869338ae800dbb8d1093eea7ee3aba5e2
git rebase -i --autosquash 00ff304db5164696296178c295a1b67b47c0dc13
git rebase -i --autosquash HEAD^4
git log --oneline
git rebase -i --autosquash 00ff304
git rebase -i HEAD~4
   expected: "user1"\
        	           	actual  : "user0"
git blame internal/entities/users/users.go
gb
forgit::blame  internal/entities/users/users.go
go test -v $(go list ./test/...) -run TestOperation -test_stdout=true -test_debug=true -testify.m TestSetService
go test -v $(go list ./test/...) -run TestCliReload
go test -v $(go list ./test/...) -run TestReload/TestCliReload/GroupMembers
go test -v $(go list ./test/...) -run TestReload/TestCliReload/GroupMembers -test_debug=true -test_stdout=true
git add internal/ test/
go test -v $(go list ./test/...) -run TestReload -test_debug=true -test_stdout=true -testify.m TestResourceReload
go test -v $(go list ./test/...) -run TestReload/TestResourceReload -test_debug=true -test_stdout=true
git blame test/reload_test.go
git ci -m 'Fix reload test. old debug line hardcoded the port to use after reload'
..
git co https://pkg.go.dev/reflect
git co https://cs.opensource.google/go/go
git co https://cs.opensource.google/go/go/+/master:
git co https://cs.opensource.google/go/go/+/master
git co https://cs.opensource.google/go/go/+/master.git
cat id_rsa
cat known_hosts
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestServiceApiResource -test_debug=true
go test -v $(go list ./test) -run TestApi -test_std
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestServiceApiResolveAdvanced
go test -v $(go list ./test) -run TestReload -test_stdout=true
git clone git@gitlab.com:protojour/authly/authly-core.git authly-core-master
git clone git@gitlab.com-proto:protojour/authly/authly-core.git authly-core-master
sudo systemctl status network.target
sudo systemctl restart network.target
sudo systemctl restart network-online.target 
sudo systemctl restart netctl.service
sudo systemctl restart NetworkManager
[197;9u1;9u13;9uwW82;9u91;9u1;9uÃ¸Å³Âµ  vbbvc vcfw3ws;12u22;12u20;12u
[197;9u1;9u13;9uwW82;9u91;9u1;9uÃ¸Å³Âµ  vbbvc vcfw3ws;12u22;12u20;12u	 v JHN   A11
git blame internal/entities/roles/roles.go
git blame internal/api/cliapi/show.go
go generate internal/redis/types/hashmodel/model/...)
rm pkg/cli/cliarg/*_gen.go pkg/cli/clicmd*_gen.go pkg/cli/cliendpoint/*_gen.go
rm pkg/cli/cliarg/*_gen.go
rm internal/operation/operation_gen.go internal/operation/opdata/opdata_gen.go internal/operation/opnode/opnode_gen.go
ps aux | grep lsp
rm pkg/cli/cliarg/*_gen.go pkg/cli/clicmd/*_gen.go pkg/cli/cliendpoint/*_gen.go
git ci -m 'Big refactor to make the redis sync possible. It also removes lots of complexity by implementing the store/stores as generics. The keys type is also a lot simpler so we dont need double maps. All the functions that where previously on the stores are now free functions. There is still work to be done before its ready for merge to master. Tests does not run and redis sync is not implemented yet'
go test -v $(go list ./test/...) -run TestCli -test_stdout=true -test_debug=true -testify.m TestSetUser
go test -v $(go list ./test/...) -run TestCli -test_stdout=true -test_debug=true -testify.m TestUserNew
go test -v $(go list ./test/...) -run TestCli -test_stdout=true -test_debug=true -testify.m TestContractShow
0263
41333333333.2~2~2~2~2~....+=;[/+;2A;2~
;2B;2~~~~~~~~~~~~~~~~~~~2~0.
100
,.,;~
km ,;5.
go test -v $(go list ./test/...) -run TestCli/TestContractShow -test_stdout=true -test_debug=true -testify.m User
yay -S nheko
dlv
sudo pacman -R delve
go install github.com/go-delve/delve/cmd/dlv@latest
rn .nvim
rn -rf .nvim
rm -rf .nvim
sudo pacman -S delve
delve
sudo pacman -S nheko
nvim ~/.grc/conf.gotest
cd cmd/authly-serve
cat 
go test -v $(go list ./test/...) -run TestCli/TestContractShow/User -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCli/TestContractShow -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCli/TestCliShow/TestShowServiceRoles -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCli/TestCliShow -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliShow/TestShowServiceRoles -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliShow -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliLdap/TestServerLdapNew -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliLdap/TestSyncUsersFromLdap/MathGroup -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliSet/TestAuthoritySet -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliSet/TestUserRemove -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove/TestServiceRemove -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove/TestRoleRemove/ReAdd -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove/ -test_stdout=true -test_debug=true
git blame test/tctx/tcli.go
go test -v $(go list ./test/...) -run TestCliRemove/TestRemoveMembersInGroups/User_ -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove/TestRemoveUserWithService -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove/TestRoleRemove/IsRemoved -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliLdap/TestServerLdapRemove -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApi/TestAuthenticateUser/CheckContrac -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApi/TestAuthenticateUser/CheckContract -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestReload/TestCliReload -test_stdout=true -test_debug=true
mkdir .nvim
nvim .nvim/dap
cd play
cd pipe
got run main.go
go run main.go <<< "hello"
nvim grc.conf
nvim .grc/conf.gotest
go run cmd/authly-cli/main.go run file configs/example.yml
git ci -m 'getting tests to run in branch. Still work to do with reload tests and redis unit test'
git ci -m 'fixed reload tests'
go build -gcflags="-m" cmd/authly-serve/main.go
git pull origin provisioning
cat main
rm main
\
 275   â´         }
git add inter
git log'
git ci -m 'Fixed operations tests. More of these are needed. Also Refactored Policy to be stored in a store.Store'
git ci -m 'Added more operations tests and some minor fixes'
git ci -m 'moved optype into operation package'
git ci -m 'remove unused datatype.go functions'
git ci -m 'fix previous commit'
git push origin provisioning
autorandr laptop
git merge provisioning
git te
rm pkg/cli/clicmd/*_gen.go
go test -v $(go list ./test/...) -run TestCliRemove/TestRemoveServiceWithService -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestReload/TestCliReload/User_ -test_stdout=true -test_debug=true
git reflog --date=local --all
go test -v $(go list ./...) -run TestApi
git ci -m 'remove creator and load pointer. No need'
git co changelog
git log | fold --width=1000
git --no-pager log
go run cmd/authly-cli/main.go set authority
go run cmd/authly-cli/main.go set authority ldap true
go run cmd/authly-cli/main.go show authority ldap
autorandr baa
git pullvac404VAC
npm install -g npm
sudo npm install -g npm@9.2.0
npm install -g npm@9.2.0
bluetoothctl power off
rm -rf /var/lib/bluetooth
ps yamlls
ps aux | grep yamlls
pkill yaml-language-server
kill -9 1899955
kill 1900304
yaml-language-server 
yaml-language-server ?
yaml-language-server -h
yaml-language-server --stdio --help
pkill Xorg
sudo pkill Xorg
systemctl --user daemon-reload
systemctl --user restart bluetooth.target
systemctl --user restart blueman-manager.service
systemctl restart bluetooth.target
sudo npm r -g vscode-langservers-extracted
which yaml-language-server
sudo pacman -R yaml-language-server
nvim /home/t/.local/state/nvim/lsp.log
touch /home/t/.local/state/nvim/lsp.log
mason
npm audit fix
npm audit fix --force
npm -i -g yarn
sudo pacman -S yarn
sudo pacman -R yarn
npm install -g yarn
sudo npm install -g yarn
./yaml-language-server
sudo npm install -g flat@5.0.1
sudo npm -r -g vsce
sudo npm uninstall -g vsce
sudo npm install -g @vscode/vsce
sudo npm install -g @jridgewell/sourcemap-codec
sudo npm install -g debug@4.3.1
sudo npm install -g @vscode/test-electron
npm install -g npm-check-updates
sudo npm install -g npm-check-updates
ncu -g
npm -g install corepack@0.15.3 debug@4.3.4 flat@5.0.2 gitlab-ci-local@4.37.0 neovim@4.10.1
sudo npm -g install corepack@0.15.3 debug@4.3.4 flat@5.0.2 gitlab-ci-local@4.37.0 neovim@4.10.1
npm -g install spectral-language-server
cat /root/.npm/_logs/2023-01-11T11_20_24_113Z-debug-0.log
sudo cat /root/.npm/_logs/2023-01-11T11_20_24_113Z-debug-0.log
sudo npm -g uninstall sourcemap-codec
sudo npm -g install @jridgewell/sourcemap-codec
sudo npm -g install spectral-language-server
bat --help
nvim .git/hooks/pre-push
cat configs/example.yml
cat -p configs/example.yml
cat -p README.md
cd /home/t/.local/share/nvim/mason/.packages
./yaml-language-server --version
./yaml-language-serverversion
./yaml-language-server version
./yaml-language-server --stdin
cat yaml-language-server
cd yaml-language-server
npm update
cd json-lsp
cat package
sudo pacman -S vscode-json-languageserver
sudo pacman -R vscode-json-languageserver
yay -S vscode-langservers-extracted
builtin cd -- .wine/dosdevices/z:/lib/gnome-settings-daemon-3.0/
git ci -m 'added changelog'
git ci -m 'fix error message'
git tag 0.8.0
ping [200~192.168.1.143~
ping 192.168.1.143
ssh 192.168.1.143
cat .ssh/id_rsa_proto.pub -p
ps aux | grep golsp
ps aux | grep gopls
systemctl stop bluetooth.service
systemctl start bluetooth.service
go get github.com/getsentry/sentry-go
less /home/t/.cache/nvim/lsp.log
tail -f s /home/t/.cache/nvim/lsp.log
tail -f /home/t/.cache/nvim/lsp.log
go test -v $(go list ./test/...) -run TestCliSet/TestUserSet -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliSet/TestUser -test_stdout=true -test_debug=true
git restore internal/operation/
git add configs/example.yml
go run cmd/server/main.go
git ci -m 'Fix issue with "run sync" in operations'
STARTUP_FILE=example.yml go run cmd/authly-serve/main.go
git ci -m 'some small changes to fix CI issue'
STARTUP_FILE=localldap.yaml go run cmd/authly-serve/main.go
go test -v $(go list ./test/...) -run TestApi/TestServiceApi/GetAllUser -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApi/TestServiceApi/GetAllUsers
go test -v $(go list ./test/...) -run TestApi/TestServiceApi
go test -v $(go list ./test/...) -run TestConfig/TestLogLevelUPDATE -test_stdout=true -test_debug=true
cat .gitlab-ci.yml
go test -v $(go list ./test/...) -run TestAPI/TestTEMP -test_stdout=true -test_debug=true
rm configs/localldap.yaml
git ci -m 'contracts where not set up right for users synced from ldap and logic for validation was also off. Added posibility to set contract with operations'
git tag -d 0.8.1
git ci -m 'update changelog'
git tag 0.8.1
git checkout -b b0.7.2 0.7.2
cat =p CHANGELOG.md
cat -p CHANGELOG.md
nvim temp
nvim temp0
rm temp0
nvim temp1
rm temp1
cat internal/entities/entities.go
cat -p internal/entities/entities.go
git ci -m 'fix for slow and increesingly slower /api/service/user endpoint'
git tag 0.7.3
sudo pacman -S luarocks
sudo pacman -S cargo
builtin cd -- internal/operation/datatype/
gut st
mkdir buggy
cd buggy
go mod init buggy
git co b0.7.2
yay -S slack-desktop-black-theme-night-mood
yay -R slack-desktop-black-theme-night-mood
builtin cd -- cmd/authly-cli/
go test -v $(go list ./test/...) -run TestApi/TestTEMP -test_stdout=true -test_debug=true
git lgo
go test -v $(go list ./test/...) -run TestOperation/ -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestConfig/TestLogLevelALL -test_stdout=true -test_debug=true
git add pkg/app/app.go
git co --branch opschema
git checkout -b opchema
git add configs/ tools/
it log
\
=== RUN   TestOperation/TestSetServer/ScienceMembers\
=== RUN   TestOperation/TestSetServer/ScienceMembersInGroup\
=== RUN   TestOperation/TestSetService\
=== RUN   TestOperation/TestSetUser\
--- FAIL: TestOperation (6.60s)\
    --- PASS: TestOperation/TestAnomilies (0.35s)\
    --- PASS: TestOperation/TestFail (0.73s)\
    --- PASS: TestOperation/TestRemoveGroup (0.39s)\
    --- PASS: TestOperation/TestRemoveResource (0.34s)\
    --- FAIL: TestOperation/TestRemoveRole (0.37s)TestApi/TestServiceApiResolveVmInstances9;13u
go test -v $(go list ./test/...) -run TestApi/TestServiceApiResolveVmInstances -test_stdout=true -test_debug=true\ 
go test -v $(go list ./test/...) -run TestApi/TestServiceApiResolveVmInstances -test_stdout=true -test_debug=true
\
=== RUN   TestOperation/TestSetServer/ScienceMembers\
=== RUN   TestOperation/TestSetServer/ScienceMembersInGroup\
=== RUN   TestOperation/TestSetService\
=== RUN   TestOperation/TestSetUser\
--- FAIL: TestOperation (6.60s)\
    --- PASS: TestOperation/TestAnomilies (0.35s)\
    --- PASS: TestOperation/TestFail (0.73s)\
\
    --- PASS: TestOperation/TestRemoveResource (0.34s)\
    --- FAIL: TestOperation/TestRemoveRole (0.37s)TestApi/TestServiceApiResolveVmInstances9;13u
git ci -m 'update logic in operation generator to handle prekeys'
git co -b new_tcli
git restore internal/operation/opdata/opdata_gen.go
go run goloc
firefox
cd skraag/skraag-arduino
mv skraag-arduino skraag
sudo usermod -a -G tty t
git co tags/0.6.8 -b v0.7.3
git restoe internal
git restore internal
git co tags/0.7.3 -b v0.7.3
git ci -m 'disable ldap sync on startup. Use cli to run sync instead'
git tag 0.7.4
go test -v $(go list ./test/...) -run TestApi/TestAuthenticateService -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCli/TestUserNew -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApi/TestAuthenticateGroup -test_stdout=true -test_debug=true
git push --set-upstream origin new_tcli
go test -v $(go list ./test/...) -run TestCliSet/TestUserNewMissingRequiredUsername -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove/TestUserRemove
go test -v $(go list ./test/...) -run TestCliRemove/TestUserRemove -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApi/TestAuthenticateUser -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestA
git ci 'more work on tcli and tapi'
git ci -m 'more work on tcli and tapi'
go test -v $(go list ./test/...) -run TestCliSet/TestUserUpdate -test_stdout=true -test_debug=true
git ci -m 'added parsing of  UPDATED output in tcli '
sudo pacman -S arduino
pip install pyserial
which python
python -v
screen
sudo pacman -S screen
screen /dev/ttyUSB0
screen -tty /dev/ttyUSB0
stat /dev/ttyUSB0
sudo usermod -a -G dialout $USER
sudo usermod -a -G tty $USER
sudo adduser t uucp
sudo usermod -a -G uucp $USER
ls -l /dev/ttyUSB0
yay -S flutter
which abd
env|grep JAVA
env|grep JDK
env|grep AND
which flutter
ls -l /usr/bin/flutter
ls /opt/flutter
ls -a
cd .config/flutter
nvim settings
yay -R android-sdk
flutter config --android-sdk /home/t/Android/Sdk
find /opt/android-studio/ -iname sdkmanager
find /opy -iname sdkmanager
find /opt -iname sdkmanager
find $HOME -iname sdkmanager
find -iname sdkmanager
ls 33.0.1
/opt/android-sdk/tools/bin/sdkmanager --install "cmdline-tools;latest"
export ANDROID_HOME=/opt/android-sdk
ls /opt/android-studio
find /opt/android-studio -iname java
ls /opt/android-studio/lib
flutter config --android-studio/dir ""
flutter config --android-studio/dir=""
export ANDROID_SDK_ROOT=/opt/android-sdk
flutter config --android-studio-dir /opt/android-studio/
flutter config --android-studio-dir /opt/android-studio
ANDROID_SDK_ROOT=/opt/android-sdk flutter build apk
ANDROID_SDK_ROOT=/opt/android-studio/jbr flutter build apk
ANDROID_SDK_ROOT=/opt/android-studio flutter build apk
ANDROID_SDK_ROOT=~/Android/Sdk flutter build apk
flutter config --android-studio-dir ~/Android/Sdk
abd
git ci -m 'updated readme with linux tty permission hint'
cd ios
git config --global --add safe.directory /opt/flutter
flutter
flutter build
flutter build .
sudo chown -R $USER /opt/flutter
sudo pacman -S android-tools
flutter config --android-sdk
flutter config --android-sdk /opt/android-sdk
flutter config --android-sdk /opt/android-sdk/
sdkmanager
ls /opt/android-studio/jbr
tree /opt/android-studio/jbr
yay -S sdkmanager
cd skraag/skraag
cd Android/Sdk
java --version
javac -version
nvim ~/.zshrc
flutter doctor -b
flutter config --android-studio-dir=
sudo /opt/android-sdk/tools/bin/sdkmanager --install "cmdline-tools;latest"
sudo ~/Android/Sdk --install "cmdline-tools;latest"
sdkmanager --install "cmdline-tools;latest"
cd ~/Android/Sdk/
locate sdkmanager
env | grep java
java -version
flutter doctor --android-licenses
cd /opt/android-studio/jbr
mkdir jre
sudo mkdir jre
sudo mc
cd Android
cd Sdk
cd platform
cd platform-tools
cd 33.0.1
cd patcher
cd cmdline-tools
cd build-tools
cd /opt/android-studio
ln -s jbr jbe
sudo ln -s jbr jbe
sudo ln -s jbr jbk
rm jbe jdk
sudo rm jbe
sudo rm jdk
sudo rm jbk
cd jbr
cd skraag/skraag-flutter
git ci -m 'minor changes to logging flags'
env
env | grep JAVA_HOME
journalctl -f
git add -u README.md
git ci -u 'updated readme with setup/build instructions for linux'
git ci -m 'updated readme with setup/build instructions for linux'
lsmod
lsmod | grep usb
journalctl
flutter pub add blue_pluss
flutter pub add flutter_blue_plus
flutter pub add flutter_platform_channel
cat assets.py
pio boards esp32
pio lib search "header:AsyncTCP.h"
pio pkg install me-no=dev/AsyncTCP
pio pkg install "me-no=dev/AsyncTCP"
pio pkg install -h
pio pkg install -l "me-no=dev/AsyncTCP"
pio lib 
pio lib install "me-no=dev/AsyncTCP"
pio lib install -h
pio lib install me-no=dev/AsyncTCP
pio lib install me-no-dev/AsyncTCP
pio lib install me-no-dev/ESPAsyncWebServer
pio pkg
platformio lib search "header:ESPAsyncWebServer.h"
pio lib install me-no-dev/ESP Async WebServer
pio lib install "me-no-dev/ESP Async WebServer"
cat ~/.zshrc
git add include/
git add platformio.ini
git ci -m 'transformed the project into a platform io setup'
platformio
platformio boards esp32 | grep FireB
platformio platform install esp32
platformio platform pkg install esp32
platformio pkg install esp32
go mod init skraag-web
go get github.com/gorilla/mux
mkdir files
git clone git@github.com:gitarjei/skraag-web.git
git ci -m 'initial commit - whatever boat your float'
platformio boards esp32 | grep espressif
platformio boards esp32
platformio boards esp32 | grep esp32s3
sudo echo 30 > /sys/class/backlight/intel_backlight/brightness
platformio run
platformio run -e esp32s3box
platformio --help
platformio device --help
platformio device list
lsblk
usb-devices
ls /dev/sd*
dmesg
sudo dmesg
journalctl -k
platformio run -e esp32s3box --target upload --upload-port ttyACM0
platformio run -e esp32s3box --target upload
ls /dev/ttyA*
ls /dev/ttyA
lsusb
platformio device monitor
platformio run -e esp32s3box --target upload --upload-port /dev/ttyACM0
platformio run --help
platformio clean
platformio -h
git ci -m 'fix redis connection interval print format in connection err msg'
l files/firmware
l files
ls files/firmware
ls files/
go get github.com/stretchr/testify
git add api/ cmd/ files/ go.mod go.sum internal pkg/
git ci -m 'basic backend almost done.'
go test -v $(go list ./test/...) -run TestApi/TestAuthoritiesList -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApiAuthenticateThrouthGroup -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApiAuthenticateThroughGroup -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApi/TestAuthenticateThroughGroup -test_stdout=true -test_debug=true
git ci -m 'some minor updates and some more api_test enabled'
git add internal/lib/root/
git ci -m 'forgot to add lib/root'
git ci -m 'more work on tcli/tapi and some more tests enabled'
git ci -m 'fixed ApiTest'
go test -v $(go list ./test/...) -run TestApi/TestServiceApiPolicy -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApi/TestServiceApiPo -test_stdout=true -test_debug=true
git ci -m 'Enabled more tests ub api_test.go and some additions to tcli and tapi'
it pull
go test -v $(go list ./test/...) -run TestApi/TestServiceApiResolveA -test_stdout=true -test_debug=true
git ci -m 'Enabled the last of api_test.go tests'
go test -v $(go list ./test/...) -run TestApi/TestServiceAp -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCli/TestRemoveCli -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCli/TestCliRemove -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove/TestContractRemove -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestOperation/TestSetService -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliSet/TestServiceNewMissingRequiredOwnerEID -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliSet/TestServiceNewMiss -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliSet/TestServiceNewMissingOwnerEID -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliSet/TestServiceNew -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestContractSet -test_stdout=true -test_debug=true
kill 566850
kill  -9 566850
git ci -m 'enabled more tests in cli_remove_test and operation_test and some changes to tctx\
''
git ci -m 'enabled more tests in cli_remove_test and operation_test and some changes to tctx'
go test -v $(go list ./test/...) -run TestOperation/TestSetGroup -test_stdout=true -test_debug=true
rm dump.rdb
rm dctest.yaml
go get golang.org/x/oauth2
go get golang.org/x/oauth2/google
docker pull minio/minio
docker pull
docker compose rm
docker compose --stop rm
docker compose stop
docker compose ls
docker compose rm --stop
docker-compose rm
docker volume rm skraag-web_minio
docker volume rm recore_minio
docker-compose -f dctest.yaml up --force-recreate --remove-orphans
go test -v $(go list ./test/...) -run TestCliSet/TestGroupMembersNew -test_stdout=true -test_debug=true
git ci -m 'updates to checkers and some tcli. and in tests'
go test -v $(go list ./test/...) -run TestOperation/TestSetServer -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestOperation/TestRemoveUser -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestOperation/TestRemoveSer -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestOperation/TestRemoveRole -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestOperation/TestRemoveAction -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestOperation/TestRemoveServer -test_stdout=true -test_debug=true
git add -u 're enabled operations tests and some fixes'
git ci -m 're enabled operations tests and some fixes'
go test -v $(go list ./test/...) -run TestCliRemove/TestGroupRemove
go test -v $(go list ./test/...) -run TestCliRemove/TestGroupMembersRemove -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove/TestRemoveMembersInGroups -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove/TestRemoveMembersThenAddInGroups -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove/TestRoleRemove -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove/TestRoleMembersRemove -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove/TestRemoveMembersInGroup -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove/TestRemoveServiceThatHasRoles -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliRemove/TestRemoveMembersWithRoles -test_stdout=true -test_debug=true
git ci -m 'enabled all of cli_remove_tests'
git ad test/tctx/tcli/checkers.go
git add test/tctx/tcli/checkers.go
git rebase --continue
xhttp
xhost
httpie
http POST 'http://0.0.0.0:8000/auth/google/login' \  
http POST 'http://0.0.0.0:8000/auth/google/login' --follow email=terjeloe@gmail.com password=vac404VAC!
http POST 'http://0.0.0.0:8000/auth/google/login' email=terjeloe@gmail.com password=vac404VAC!
http POST 'http://0.0.0.0:8000/auth/google/login'
http --follow POST 'http://0.0.0.0:8000/auth/google/login'
http --follow POST 'http://0.0.0.0:8000/auth/google/login' email=terjeloe@gmail.com password=var909VAC!
http --follow --all POST 'http://0.0.0.0:8000/auth/google/login' 
curl -s --request POST --data "code=4/1AY0e-g7BhBt0QU9f5HTgNDGNR1GYtH12q4xvgL_D2Q34A&client_id=292352315843-3310c5mhsvmf5i32n47aqd5rrtiatd98.apps.googleusercontent.com&client_secret=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&redirect_uri=urn:ietf:wg:oauth:2.0:oob&grant_type=authorization_code" https://accounts.google.com/o/oauth2/token
http POST 'https://accounts.google.com/o/oauth2/auth?client_id=292352315843-3310c5mhsvmf5i32n47aqd5rrtiatd98.apps.googleusercontent.com&redirect_uri=http%3A%2F%2Flocalhost%3A8000%2Fauth%2Fgoogle%2Fcallback&response_type=code&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email&state=xCbZuEckB1s4Rb-to1bw9g%3D%3D'
curl -s --request POST 'https://accounts.google.com/o/oauth2/auth?client_id=292352315843-3310c5mhsvmf5i32n47aqd5rrtiatd98.apps.googleusercontent.com&redirect_uri=http%3A%2F%2Flocalhost%3A8000%2Fauth%2Fgoogle%2Fcallback&response_type=code&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email&state=xCbZuEckB1s4Rb-to1bw9g%3D%3D'
chmod +x token.sh
token.sh
./token.sh
git log --tags --simplify-by-decoration --pretty="format:%ai %d"
pkill xo
ps aux | grep xorg
ps aux | grep i3
pkill i3
mhwd-kernel -i linux62
mhwd -r pci video-hybrid-intel-nvidia-prime
sudo mhwd-kernel -i linux62
sudo pacman -S linux519-nvidia
sudo pacman -Ss linux519-nvidia
sudo pacman -Sq linux519-nvidia
sudo pacman -Sq linux519-nvidia-525.60.11-1-x86_64.pkg.tar.zst
sudo pacman -S linux519-nvidia-525.60.11-1-x86_64.pkg.tar.zst
sudo pacman -S linux519-nvidia-525
sudo pacman -F linux519-nvidia
sudo pacman -U /var/cache/pacman/pkg/nvidia-utils-525.60.11-2-x86_64.pkg.tar.zst
sudo pacman -U /var/cache/pacman/pkg/linux519-nvidia-525.60.11-1-x86_64.pkg.tar.zst
go test -v $(go list ./test/...) -run TestCliReload/TestResourceReload -test_stdout=true -test_debug=true
git ci -m 're enabled reload_test.go and some other minor fixes'
git ci -m 'remove flagtype package. use entitytype instead and have a CheckKey func in checkers.go'
git ci -m 'minor changes in cli_ldap_test and cli_set_test'
git reset --hard origin/master
git merge new_tcli
git ci -m 'fix redis merge fail'
git add
git ci -m 'add require to config tests'
cat CH
git tag 0.8.2
[Cgit st
git ci -m 'Added dates to CHANGELOG.md'
gcv
git branch list
git branch show
git branch --help
git branch --list
forgit::branch::delete
forgit::branch::delete --help
git push origin --delete access_control_documentation
git fetch origin
git fetch -p origin
git branch -a
git push origin --delete new_tcli
git push origin --delete cli_completions
git branch opcschema 0bd3f00
git merge opcschema
git add tools/
git ci -m 'start of opschema generator'
cd /var/cache/pacman/pkg
ls | grep linux
ls | grep nvidia-utils
bmon
mhwd -r pci video-linux
mhwd-kernel -r linux519
sudo mhwd-kernel -r linux519
cat configs/example.yaml -p
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -E pr=500/noprompt -s sub '(& (objectClass=*))' dn sn mail uid cn
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -E pr=500/noprompt -s sub '(& (objectClass=*))' dn sn mail uid cn member memberUid memberuid uniquemember uniqueMember
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -E pr=500/noprompt -s sub '(& (objectClass=*))'
go get github.com/spf13/viper
git ci -m 'remove uneeded contract validation check in serviceapi endpoint'
go generate $(go list ./tools/ldifgen/...)
LOGGING_DEBUG_LDAP=true go test -v $(go list ./test/...) -run TestCliLdap/TestSyncUsersFromLocalLdap -test_stdout=true -test_debug=true
LOGGING_LEVEL=LDAP_DEBUG go test -v $(go list ./test/...) -run TestCliLdap/TestSyncUsersFromLocalLdap -test_stdout=true -test_debug=true
LOGGING_FLAGS=LDAP_DEBUG go test -v $(go list ./test/...) -run TestCliLdap/TestSyncUsersFromLocalLdap -test_stdout=true -test_debug=true
LOGGING_FLAGS=DEBUG_LDAP go test -v $(go list ./test/...) -run TestCliLdap/TestSyncUsersFromLocalLdap -test_stdout=true -test_debug=true
LOGGING_FLAGS="DEBUG_LDAP" go test -v $(go list ./test/...) -run TestCliLdap/TestSyncUsersFromLocalLdap -test_stdout=true -test_debug=true
git co -b ldap_work
git co 0.7.4
git fetch origin -t
git co tags/0.7.4 -b v0.7.4
git ci -m 'add debug prints'
git tag 0.7.4-debug0
git rester internal
git restor internal
git ci -m 'redis type counter was doing sync to redis for each incr. Causeing trouble with ldap sync as lots of entities are created at the same time'
git ci -m 'app terminate functions takes debug stack so we do not print the stack all the way out to app.terminate'
git add internal/store/stores/
git ci -m 'resourceid counter should not fail on load in restore as it may not be created yet'
git ci -m 'remove old debug prints'
git ci -m 'add 0.8.3 changelog'
git tag 0.8.3
git push --ta
go get github.com/gorilla/securecookie
nvidia-smi
go remove github.com/aws/aws-sdk-go@none
go get github.com/aws/aws-sdk-go@none
go clean
go clean github.com/aws/aws-sdk-go
go get github.com/aws/aws-sdk-go
go clean -i -n github.com/aws/aws-sdk-go
go get github.com/aws/aws-sdk-go-v2
go get github.com/aws/aws-sdk-go-v2/credentials
go get github.com/aws/aws-sdk-go-v2/service/s3
go get github.com/aws/aws-sdk-go-v2/feature/s3/manager
docker volume ls
sudo pacman buildx
sudo pacman -S buildx
pip install buildx
sudo pacman -S docker-buildx
sudo pacman -S i3status-rust
yay -S i3status-rust
yay -S i3status-rust-git
i3status-rs /home/t/.config/i3status-rust/config.toml\

i3status-rs /home/t/.config/i3status-rust/config.toml
RUST_BACKTRACE=1 i3status-rs /home/t/.config/i3status-rust/config.toml
RUST_BACKTRACE=full i3status-rs /home/t/.config/i3status-rust/config.toml
nvim .config/i3status-rust/config.toml
miniclient
which mc
i3status
docker exec -it 0a36a270b48 bash
docker exec -it e6ec082ef295 bash
docker exec -it e6ec082ef295 ,c
docker exec -it e6ec082ef295 mc
docker exec -it mc /bin/sh
docker exec -it minio /bin/sh
docker exec -it skraag-web-minio-1 /bin/sh
sudo pacman -S mc
sudo pacman -S minio-client
docker-compose down -v
docker-compose rm -f -v
go test -v $(go list ./...) -run TestApi/TestFirmware
cat compile_commands.json 
git blame .ccls
locate
cd .platformio/platforms/espressif32
cd toolchain-xtensa-esp32s3/lib
cd ll
ls xtensa-esp32s3
ls xtensa-esp32s3*
mkdir clangespressif
cd clangespressif
rm -rf clangespressif
git clone git@github.com:espressif/esp-idf.git
git clone git@github.com:espressif/llvm-project.git
tools/idf_tools.py install xtensa-clang
3
.. 
cpuinfo
locate espressif32
locate xtensa-esp32-elf
locate xtensa-esp32-elf | grep tools
less .local/state/nvim/lsp.log
nvim .local/state/nvim/lsp.log
sudo pacman -S vscode
cd xtensa-esp32s3-elf/bin
yay -S vscode
yay -S visual-studio-code-bin
cd /home/t/.espressif/tools/xtensa-esp32-elf/esp-2021r1-8.4.0/**/bin/xtensa-esp32-elf-*
cd /home/t/.espressif/tools/xtensa-esp32-elf/esp-2021r1-8.4.0/**/bin
cd /home/t/.espressif/tools/xtensa-esp32-elf/esp-2021r1-8.4.0/
./install.sh esp32s3box
cd /home/t/.espressif/tools/xtensa-esp32s3-elf/esp-12.2.0_20230208/xtensa-esp32s3-elf
ncim
clangd compile_commands.json
idf.py build
rm .clangd
gi diff
pio project init --ide vim --board esp32s3
ccls
ccls .
ccls --index
rm .cache .ccls .ccls-cache
rm -rf .cache 
nvim com
nvim build/compile_commands.json
cd /home/t/.platformio/packages/framework-arduinoespressif32/tools/sdk/esp32s3
lss
cd hal
cd /home/t/.platformio/packages/framework-arduinoespressif32/cores/esp32
ls MD5Builder.cpp
cd /home/t/.platformio/packages/framework-arduinoespressif32/cores/esp32/
touch .ccls
rm -rf .vscode
rm -rf .ccls-cache
ccls --help
ccls --index=.
mv .ccls build
al
mv compile_commands.json ../
nvim .cla
pio run --target
pio project init --ide vim --board <ID>
pio project init --ide vim --board 
less compile_commands.json
sudo pacman -S bear
sudo pacman -S ccls
cmake -S llvm -B build -G Ninja -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra"
cmake -S llvm -B build -G Ninja -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra" -DCMAKE_BUILD_TYPE=Release
cd build/bin
cd pack
tree
cd c++/8.4.0/xtensa-esp32s3-elf
c d..
builtin cd -- include/c++/8.4.0/debug/
cd tools/sdk/esp32s3/include/xtensa/include/xtensa
cd sdk
cd xtensa/include/xtensa
[wd
make
make clean
bear --help
rm .ccls
bear make all
bear --make all
dev/esp-idf/tools/idf_tools.py install xtensa-clang
cp .pio/build/esp32s3box/compile_commands.json .
cdssd
./export.sh
cd .espressif/tools/xtensa-esp32s3-elf/esp-12.2.0_20230208/xtensa-esp32s3-elf/
cd xtensa-esp32s3-elf/esp-12.2.0_20230208/xtensa-esp32s3-elf/
builtin cd -- include/c++/12.2.0/debug/
cd ../../..
./install.sh esp32
cat export.sh
sudo pacman -S --needed gcc git make flex bison gperf python cmake ninja ccache dfu-util libusb
python --version
cd dev/esp-idf
./install.sh esp32s3
. ./export.sh
cd tools/xtensa-esp32s3-elf/esp-12.2.0_20230208/xtensa-esp32s3-elf/xtensa-esp32s3-elf/include/
fx
fzf 
fzf wd
qa
cd /home/t/.espressif/tools/xtensa-esp32s3-elf/esp-12.2.0_20230208/xtensa-esp32s3-elf/xtensa-esp32s3-elf]
cat xtensa-esp32s3-elf-c++
cd /home/t/.platformio/packages/framework-arduinoespressif32/tools/
cd sdk/esp32s3/bin
cd .espressif
cd tools/xtensa-esp32s3-elf/esp-12.2.0_20230208
fzfwd
cd .espressif/tools/xtensa-esp32-elf/esp-2021r2-8.4.0/xtensa-esp32-elf
cd .espressif/tools/xtensa-esp32-elf/esp-12.2.0_20230208/xtensa-esp32-elf/bin
cd .espressif/tools/xtensa-esp32s3-elf/esp-12.2.0_20230208/xtensa-esp32s3-elf/bin
rm -rf .ccls*
mv compile_commands.json build
cat argv.json
cat extensions/extensions.json
/home/t/.platformio/packages/toolchain-xtensa-esp32s3/bin/xtensa-esp32s3-elf-gcc 
/home/t/.platformio/packages/toolchain-xtensa-esp32s3/bin/xtensa-esp32s3-elf-gcc -E -v -xc++ /dev/null
pio run -v
cd .config/Code
fxf
cat languagepacks.json
cd extensions
cat extensions.json
cd ms-vscode.cpptools-1.14.4-linux-x64
cat package.json | grep lsp
cd platformio.platformio-ide-3.0.0-linux-x64
cat package.json | grep clangd
cat package.json | grep ccls
nvim package.json
cd extensions/
cd toolchain-xtensa-esp32s3/xtensa-esp32s3-elf/sys-include/
cd framework-arduinoespressif32/tools/sdk/esp32s3/include/xtensa/include/xtensa/
cd esp32s3
fzf hal
cd xtensa/include
cd include
cd xtensa
mkdir t
cd t
ls --all
pio project init --ide vscode --board esp32s3box
nvim c_cpp_properties.json
mv compile_commands.json temp
mv temp compile_commands.json
cat compile_commands.json | grep std
gir restor src/main.cpp
cd .ccls-cache
cat .ccls | grep std
cd .vscode
cat c_cpp_properties.json| grep std
cat c_cpp_properties.json | grep std
cat c_cpp_properties.json
gcc
gcc --version
gcc -E -v -xc++ /dev/nul
gcc -E -v -xc++ /dev/null
cd /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/../../../../include/c++/12.2.1
cd debug
cd toolchain-xtensa-esp32s3/xtensa-esp32s3-elf/include/c++/8.4.0
cd ~/.platformio/packages
pio -f
pio -f -c vim run
pio -f -c vim run -v
pio -f -c vim run | grep gcc
pio -f -c vim run | grep c++
rm -rf .cache .ccls compile_commands.json
cat prescript.py
nvim ~/.local/state/nvim/lsp.log
cmake --build build -j 12
cmake -j 12
nvim CMakeLists.txt
cmake .
rm -rf .cmake CMakeCache.txt CMakeFiles CMakeLists.txt cmake_install.cmake
git diff platformio.ini
pio run --ide vim --boards esp32s3box
pio project init --ide vim --boards esp32s3box
cd espressif32
cd b
cd builder
cd frameworks
cd .espressif/tools/xtensa-esp32-elf/esp-12.2.0_20230208/xtensa-esp32-elf/
. ~/dev/esp-idf/export.sh
idf_tools.py install xtensa-clang
mv .ccls /tmp/
cat project.checksum
cat idedata.json
rm -rf .pio
pio upgrade dev
bear -- make all
rm -rf .cache .ccls* compile_commands.json
rm -rf .cache compile_commands.json
pio project init --help
pio project init --ide --help
builtin cd -- .ccls-cache/@home@t@dev@skraag@skraag/
pio upgrade --help
cat package.json
cat platform.txt
nvim platformio-build-esp32s3.py
cd xtensa-esp32s3-elf
cd ~/.platformio/packages/toolchain-xtensa-esp32s3/bin
xtensa-esp32s3-elf-gcc
./xtensa-esp32s3-elf-gcc
[Cls
rm Makefile
pio project init --ide vim --board esp32
platformio boards
rm platformio.ini
rm -rf .ccls .ccls-cache compile_commands.json
pio project init --ide vim --board esp32dev
rm -rf piotest
mkdir piotest
pio project init --board firebeetle32
pio project init --ide vim --board firebeetle32
pio project -help
pio project -h
pio project config
cat src/main.cpp
pio --version
history | grep pio project
history | grep "pio project"
mkdri piotest2
mkdir piotest2
cd piotest2
cp ../../piotest/src/main.cpp .
cd piotest
git checkout -b changes
git add .
cat -p .clangd
rm -rf .ccls
mv .clangd temp
rm -rf .cache
mv temp .clangd
cat ~/.local/state/nvim/lsp.log -p
cd dotfiles/
sudo pacman -S whatsapp
yay -S whatsapp
git add i3
git add kitty/
git add nvim/
git add i3status-rust/
rll
rm -rd .ccls-cache
cd .platformio/packages/framework-arduinoespressif32/variants/esp32s3
cat pins_arduino.h
nvim map
oapi-codegen petstore-expanded.yaml > petstore.gen.go
go run cmd/authly-cli/main.go show role profile --help
pio lib search task
pio pkg list
pio run --build
pio run clean
pio run --boards esp32s3box
pio run --target upload --boards esp32s3box
pio pkg install
pio --help
pio lib --help
pio lib --help list
pio lib list
pio lib uninstall TaskScheduler
locate default_16mb.csv
man fzf
cd fzf
cd packages/framework-arduinoespressif32/tools/partitions/default_16MB.csv
cd packages/framework-arduinoespressif32/tools/partitions
pio pkg --help
pio pkg outdated
cat homestate.json
cat appstate.json
cd packages/framework-arduinoespressif32/libraries/Update/src/
lw
cd .pio/libdeps/esp32s3box/ESP\ Async\ WebServer
packages/framework-arduinoespressif32/tools/partitions/
cd .platformio/packages/framework-arduinoespressif32/tools/partitions/
cp /home/t/.platformio/packages/framework-arduinoespressif32/tools/partitions/default_16MB.csv .
git clone git@github.com:invopop/jsonschema.git
rm -rf skraag-flutter
git clone git@gitlab.com:skrog/skraag-flutter.git
cd protojour/jsonschema
cd private/TEngine
go mod init skraag-test
git show 8e7d51a18d859175510ded7fd44f73003e36e00e
go mod init skraag
rm go.mod
go list ./.../*.cpp
go list --help
go help list
less go help list
less | go help list
go help list | less
go list ./.../ -f CXXFiles
go list -f CXXFiles ./.../
go list -f CXXFiles ./...
go list -f {{.CXXFiles}} ./...
go list -f {{.HFiles}} ./...
go list -f {{.Package}} ./...
nvim Makefile
make run
make all
go get github.com/iancoleman/strcase
go get golang.org/x/tools/imports
tpo
cat CHANGELOG.md -p
git stt st
git diff origin master
go pull
git reflog show
go test -v $(go list ./...) -test_stdout=true -test_debug=true
go test -v $(go list ./...) -run TestCli
go test -v $(go list ./...) -run TestCli -testify.m TestServiceNewMissingRequiredOwnerEID
go test -v $(go list ./...) -run TestCli/TestServiceNewMissingRequiredOwnerEID
go test -v $(go list ./...) -run TestCli/TestUserNew
go test -v $(go list ./...) -run TestCliSet/TestUserNew
go test -v $(go list ./...) -run TestCliSet
go test -v $(go list ./test/...) -run TestCliSet/TestRoleMembersNew -test_stdout=true -test_debug=true
ps aux | grep temp
ps aux
kill 27058
kill -9 27058
go test -v $(go list ./test/...) -run TestCliSet/TestUserNew -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliSet -test_stdout=true -test_debug=true
git clone git@github.com:go-ble/ble.git
cdsss
nvim .clangd-tidy
mv .clangd-tidy .clang-format
nvim .clangd-format
GOFLAGS="-count=1" go test -v $(go list ./...) -run TestChip/TestBTSetting
GOFLAGS="-count=1" go test -v $(go list ./...) -run TestChip/TestBTPins
go get github.com/vmihailenco/msgpack
go test -v $(go list ./...) -run TestChip/TestBTPins
go test -v $(go list ./...) -run TestChip/TestBTSetting
GOCACHE=off go test -v $(go list ./...) -run TestChip/TestBTSetting
go clean -testcache && go test -v $(go list ./...)
go clean -testcache && go test -v $(go list ./...) -run TestChip/TestBTSetting
go clean -testcache && go test -v $(go list ./...) -run TestChip/TestBTPins
cd esp32s3box
pio run --verbose
cd /home/t/.platformio/packages/framework-arduinoespressif32/tools/sdk/esp32s3/include/bt
go get github.com/go-ble/ble
pio project init --ide vim --board esp32s3box
cd /home/t/.platformio/packages/framework-arduinoespressif32/libraries/BLE/src/BLEServer.cpp
cd /home/t/.platformio/packages/framework-arduinoespressif32/libraries/BLE/src/
git remote show origin
cd ble
ps aux | dart
kill 90321
kill 94053
kill -9 94053
kill -9 90321
kill -15 90321
dart
killall -9 dart
cd temp
cd skraag-arduino
flutter test
flutter pub add github.com/knopp/msgpack_dart
flutter packages get
flutter packages upgrade
flutter test test/skraag_data/setting_test.dart
flutter test test/skraag_data_test.dart --help
locate lockfile.json
cd .local/share/nvim/shada
cd site/pack/packer/start/nvim-treesitter
mv lockfile.json /tmp
nvim pkg/cli/docgen.go 
cat LICENSE
cp LICENSE ~/dev/protojour/authly
cd authly
cat authly
mv authly authly-core/LICENCE
nvim src/main.cpp
nvim -V
kill -9 177443
nvim lib/main.dart
\:q
sudo pacman -S lldb
go generate ./internal/operation
go generate ./internal/operation/main.go
go run ./internal/operation/main.go
47: executing "operations" at <.Names>: can't evaluate field Names in type *data.DataTypes\

lldb
lldb nvim
pkill flutter
ps aux | grep flutter
nvi
pkill dart
sudo nvim
cd skraag-flutter
flutter pub get github.com/dart-lang/logging
flutter --help
flutter pub =help
flutter pub --help
flutter pub upgrade --help
flutter pub add github.com/dart-lang/logging
sudo pacman -S chrome
yay -S chrome
./gradlew build
flutter pub clean
flutter pub update
flutter --version
mkdir test
cd te
flutter create
flutter create .
./gradlew --version
flutter update
flutter run --help | grep filter
flutter run --help | grep level
flutter debug
flutter -h
flutter run log
flutter config
flutter help
flutter help -v
flutter log -v
flutter logs -v
flutter logs -h
flutter logs --help
flutter log
nvim pubspec.yaml
ps aux | grep dart
vi  plugin/lspconfig.lua
coredumpctl -1 nvim
sudo pacman -S gdb
ulimit -c unlimited
coredumpctl -1 gdb
2>&1 coredumpctl -1 gdb | tee -a bt.txt
tee
GDB=1 TEST_TAG=foo make functionaltest
locate nvim-treesitter
nvim lockfile.json
git add internal/operation/
go run cmd/authly-cli/main.go set authority Authorityname ldap Servername cnet-ldap Enabled true Hostname ldap.tirpint Port 389 TLSPort 686 TLSEnabled false ReadOnlyDN cn=admin,dc=tc,dc=nsc,dc=no ReadOnlyPass hemmelig BaseDN dc=tc,dc=nsc,dc=no UserSyncFilter test AuthArgs uid,ou
go run cmd/authly-cli/main.go set authority Authorityname ldap Servername cnet-ldap Enabled true Hostname ldap.tirpint Port 389 TLSPort 686 TLSEnabled false ReadOnlyDN cn=admin,dc=tc,dc=nsc,dc=no ReadOnlyPass hemmelig BaseDN dc=tc,dc=nsc,dc=no UserSyncFilter (&(objectClass=inetOrgPerson)) AuthArgs uid,ou
go generate $(go list ./internal/operation//...)
go test -v $(go list ./...) -run TestApi/TestAuthenticateLdap
go test -v $(go list ./test/...) -run TestApi/TestAuthenticateLdap -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApi/TestServiceApi -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApi/TestServiceApiResolveBasic -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApi -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliSet/TestServiceNewMissingOwner -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestOperation/TestSetUser -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestOperation/TestSetRole -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestOperation -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestOperation/TestSetResource -test_stdout=true -test_debug=true
go run cmd/authly-cli/main.go set authority server --help
go run cmd/authly-cli/main.go show authority server --help
git co tags/0.8.4 -b v0.8.4
git restore pkg/ test/
git ci -m 'removed some leftovers of the old REDIS_FLUSH_DB_ON_INIT env var'
go test -v $(go list ./test/...) -run TestServiceApi/TestBasic -testparallel=false
go test -v $(go list ./test/...) -run TestServiceApi/TestBasic -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestServiceApi/TestBasics -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiService/TestBasics -test_debug=true -test_stdout=true
go run cmd/authly-cli/main.go set contract --help
go run cmd/authly-cli/main.go set authority --help
set authority Authorityname ldap Servername cnet-ldap Enabled true Hostname ldap.tirpint Port 389 TLSPort 686 TLSEnabled false ReadOnlyDN cn=admin,dc=tc,dc=nsc,dc=no ReadOnlyPass hemmelig BaseDN dc=tc,dc=nsc,dc=no UserSyncFilter (&(objectClass=inetOrgPerson)) AuthArgs uid,ou
set authority Authorityname ldap Servername cnet-ldap Enabled true Hostname ldap.tirpint Port 389 TLSPort 686 TLSEnabled false ReadOnlyDN cn=admin,dc=tc,dc=nsc,dc=no ReadOnlyPass hemmelig BaseDN dc=tc,dc=nsc,dc=no UserSyncFilter test AuthArgs uid,ou
set authority Authorityname ldap Servername cnet-ldap Enabled true Hostname ldap.tirpint Port 389 TLSPort 686 TLSEnabled false ReadOnlyDN cn=admin,dc=tc,dc=nsc,dc=no ReadOnlyPass hemmelig BaseDN dc=tc,dc=nsc,dc=no UserSyncFilter '(&(objectClass=inetOrgPerson))' AuthArgs uid,ou
go run cmd/authly-cli/main.go set authority Authorityname ldap Servername cnet-ldap Enabled true Hostname ldap.tirpint Port 389 TLSPort 686 TLSEnabled false ReadOnlyDN cn=admin,dc=tc,dc=nsc,dc=no ReadOnlyPass hemmelig BaseDN dc=tc,dc=nsc,dc=no UserSyncFilter '(&(objectClass=inetOrgPerson))' AuthArgs uid,ou
go run cmd/authly-cli/main.go set authority server Authorityname ldap Servername cnet-ldap Enabled true Hostname ldap.tirpint Port 389 TLSPort 686 TLSEnabled false ReadOnlyDN cn=admin,dc=tc,dc=nsc,dc=no ReadOnlyPass hemmelig BaseDN dc=tc,dc=nsc,dc=no UserSyncFilter '(&(objectClass=inetOrgPerson))' AuthArgs uid,ou
go run cmd/authly-cli/main.go set authority server Authorityname ldap Servername cnet-ldap Enabled true Hostname ldap.tirpint Port 389 TLSPort 686 TLSEnabled false ReadOnlyDN cn=admin,dc=tc,dc=nsc,dc=no ReadOnlyPass hemmelig BaseDN dc=tc,dc=nsc,dc=no UserSyncFilter
go run cmd/authly-cli/main.go set authority Authorityname ldap Servername cnet-ldap Enabled true Hostname ldap.tirpint Port 389 TLSPort 686 TLSEnabled false ReadOnlyDN cn=admin,dc=tc,dc=nsc,dc=no ReadOnlyPass hemmelig BaseDN dc=tc,dc=nsc,dc=no UserSyncFilter '(&(objectClass=inetOrgPerson))'
go run cmd/authly-cli/main.go set authority server Authorityname ldap Servername cnet-ldap Enabled true Hostname ldap.tirpint Port 389 TLSPort 686 TLSEnabled false ReadOnlyDN cn=admin,dc=tc,dc=nsc,dc=no ReadOnlyPass hemmelig BaseDN dc=tc,dc=nsc,dc=no UserSyncFilter '(&(objectClass=inetOrgPerson))'
live_grep
sudo rm -rf /var/lib/bluetooth
kitty --version
nvim plugin/lspconfig.lua
vim
vi lockfile.json
nvim --verbose
nvim -h
cd nvim-treesitter
pio system 
pio help
pio run --target 
pio run --target --help
pio run --target buildfs
pio run --target upload
flutter run -d linux
cdada
yay -S neovim-git
cat plugins.lua
 plugins.lua
cd lua/nvim-treesitter
vim parsers.lua
vim lockfile.json
ls /usr/local/
ls /usr/local/bin/
ls 
ll /usr/local/bin
nvim -v
nvim mod.go
nvim authly.log
git clone https://github.com/neovim/neovim
 cd neovim && make CMAKE_BUILD_TYPE=RelWithDebInfo 
gdb /usr/bin/nvim
vim plugin/lspconfig.lua
nvim --help
nvim --help | grep ver
sudo pacman -R nvim
sudo pacman -R neovim
gdb nvim
nvim src/nvim/runtime.c
go run cmd/authly-cli/main.go set authority Authorityname ldap Servername cnet-ldap
go run cmd/authly-cli/main.go set authority Authorityname ldap
go test -v $(go list ./test/...) -run TestOperation/TestSetUser -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiService -test_debug=true -test_stdout=true
[C
go test -v $(go list ./test/...) -run TestCliRemove/TestContractRemove -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestCliLdap -run TestApi
go test -v $(go list ./test/...) -run TestCli -run TestApi
go test -v $(go list ./test/...) -run TestCli TestApi
go test -v $(go list ./test/...) -h
go test -v $(go list ./test/...) --help
go test -h
go help test
ps ao pid | grep go-build | grep -v grep
ps ao pid | grep go
ps ao pid | grep authly
ps ao pid | grep temp
cd .local/share/nvim/site/pack/packer/start/nvim-treesitter
git reset lockfile.json
git restore lockfile.json
git restore lua/
cd Downloads/
STARTUP_FILE=configs/example.yaml go run cmd/authly-serve/main.go
git ci -m 'added adhoc env support for operations startup_file'
go test -v $(go list ./test/...) -run TestOperation/TestDELETETHIS -test_debug=true -test_stdout=true
rm $'\033'$'\033'$'\033'$'\033'$'\033'$'\033'q
go test -v $(go list ./test/...) -run TestRemoveService -test_debug=true -test_stdout=true
[Ccd neovim && make CMAKE_BUILD_TYPE=RelWithDebInfo
cd neovim && make CMAKE_BUILD_TYPE=RelWithDebInfo~
cd neovim && make CMAKE_BUILD_TYPE=RelWithDebInfo
cd .deps
rm build.ninja
mv build.ninja /tmp
mv .ninja_log /tmp
make CMAKE_BUILD_TYPE=RelWithDebInfo
sudo make install
git ci -m 'fix crash on malformed Authorization header'
nvim resp_morten
nvim resp_morten.md
cp operation_schema.json ~/dev/protojour/authly-core-master/tools/opschema/
goloc .
git show openapi_datatype:internal/operation/opdata/generator.go
go test -v $(go list ./test/...) -test_debug=true -test_stdout=true
go generate $(go list ./...)\ 
go test -v $(go list ./test/...) -run TestOperation/TestSetService -test_debug=true -test_stdout=true
git ci -m 'fix that it was not possible to set OwnerEID from operations'
go test -v $(go list ./test/...) -run TestOperation/TestRemoveService -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestOperation/SetServer -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestOperation/RemoveServer -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestOperation\ -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestSetResource -test_debug=true -test_stdout=true
git ci -m 'new data type code in internal/data that replaces the old operation/datatype model.yml. This in turn simplify the generators. Also generalized some of the parsing in operations making it a lot easier to understand' 
git ci --ammend
git rebase
git rebase -i HEAD~2
git merge openapi_datatype
git show openapi_datatype:internal/lib/output/output.go
nheko --version
kotlin
cdas
git ci -m 'allow remove of owner if only one left'
STARTUP_FILE=example.yaml go run cmd/authly-serve/main.go
git ci -m 'updated operations example'
git ci -m 'Added 0.8.5 changelog'
git tag 0.8.5
cp ~/Downloads/operation_schema\(1\).json ~/dev/protojour/authly-core-master/tools/opschema/operation_schema.json
go test -v $(go list ./test/...) -run TestOperation/TestSetTESTTEST -test_debug=true -test_stdout=true
git status
go test -v $(go list ./test/...) -run TestOperation -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestSetServer -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestOperation/TestTESTCASE -test_debug=true -test_stdout=true
git ci -m 'remove debug print and fix errcheck'
flutter build apk
R
dart pub global activate melos
melos bootstrap
dart pub global deactivate melos
flutter pub add flutter_reactive_ble
cdam
cdsa
PLATFORMIO_BUILD_FLAGS=-DCORE_DEBUG_LEVEL=4 pio run --target upload -e esp32s3box && pio device monitor
cd oapi-codegen
git ci -m 'minor fixes'
go install github.com/google/yamlfmt/cmd/yamlfmt@latest
go get github.com/google/yamlfmt/cmd/yamlfmt@latest
cd /usr/local/go
cd /usr/local/
go install help
go help install
go get github.com/deepmap/oapi-codegen
cd internal/api/openapi
oapi-codegen -package serviceapi serviceapi.yaml > serviceapi_gen.go
oapi-codegen -package serviceapi serviceapi.yaml -config config.yaml
oapi-codegen -config config.yaml -old-config-style -package serviceapi serviceapi.yaml 
oapi-codegen -config config.yaml -old-config-style=false -package serviceapi serviceapi.yaml 
oapi-codegen -config config.yaml -new-config-style -package serviceapi serviceapi.yaml 
oapi-codegen  -package serviceapi serviceapi.yaml 
oapi-codegen -config config.yaml -package serviceapi serviceapi.yaml 
oapi-codegen -config config.yaml 
cat config.yaml
go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@v1.12.4
oapi-codegen --help
oapi-codegen -package serviceapi serviceapi.yaml
flutter run --help
pip install -U platformio
builtin cd -- data/
clear
oapi-codegen
git clone git@github.com:deepmap/oapi-codegen.git
cdssa
go list ./...
go list
$(go list ./internal/data/...)
(go list ./internal/data/...)
go generate -v
go generate -x
go generate --help
go help generate
pm-suspend
acpi
PLATFORMIO_BUILD_FLAGS=-DARDUINO_USB_CDC_ON_BOOT pio run --target upload -e esp32s3box && pio device monitor
git remote set-url origin git@gitlab.com:skrog/skraag-arduino.git
git add .clang-format 
git add go.
git add go.*
git rebase HEAD~3
git loo
git merge restruct
git sty
git ci -m 'updated readme'
flutter run -t main_testing.dart
git remote set-url origin git@gitlab.com:skrog/skraag-flutter.git
git add test
flutter test test/skraag_data_test.dart
gut add -u
git ci -m 'code for talking with new arduino code'
git checkout origin/master -- lib/main.dart
git checkout origin/main -- lib/main.dart
nvim authly_feedback.md
cdA
cd .platformio/platforms/espressif32@6.0.1
cd .platformio/platforms/espressif32@6.0.1/examples/espidf-peripherals-uart
pio run
pio run -e esp32dev
cp ~/dev/skraag/skraag/boards .
cp -r ~/dev/skraag/skraag/boards .
pio run -e skraag
cdsfsf
git restore lib/
pio run --target upload -e esp32sbox && pio device monitor
git ci -m 'merge git stash pop'
git add src/setting/
pio run --target upload -e esp32s3box && pio device monitor
git reset HEAD"
git add boards/
git t
git ci -m
sudo pacman -S libncurses5-dev flex bison
sudo pacman -Ss libncurs
mv data/default_16MB.csv boards/partition.csv
mv boards/partition.csv .
cd packages/framework-arduinoespressif32/tools/partitions/default_8MB.csv ../
cp .platformio/packages/framework-arduinoespressif32/tools/partitions/default_8MB.csv dev/skraag/skraag/partition8mb.csv
cat partition8mb.csv
ls /dev/tty*
xrandr --output DP-1-1-1 --scale 1.5x1.5
xrandr --output DP-1-1-1 --scale 1.1x1.1
xrandr --output DP-1-1-1 --scale 1.0x1.0
xrandr --output eDP-1-1-1 --scale 1x1
rm ~/.local/state/nvim/lsp.log
pio project init --ide vim -e skraag
cp compile_commands.json ../../../
cat ~/.local/state/nvim/lsp.log
pythn
ls sdk
ls sdk*
fzf
pio update
cd .platformio/packages/toolchain-xtensa-esp32s3@8.4.0+2021r2-patch5/bin
pio run -t menuconfig -e skraag-dev
pio project init --ide vim -boards skraag
cp sdkconfig.skraag-dev sdkconfig.skraag
pio project init --ide vim --board skraag
pio run --target compiledb --board skraag
pio run --target compiledb --e skraag
rm sdkconfig.skraag-pcb
rm sdkconfig.skraag-dev.old
cd boards
mv skraag-pcb.json /tmp
cd toolchain-xtensa-esp32s3/bin
cd toolchain-xtensa-esp32s3@8.4.0+2021r2-patch5/bin
pio upgrade
pio run --target uploadfs
pio device monitor
cp sdkconfig.skraag sdkconfig.skraag_
diff
diff sdkconfig.skraag sdkconfig.skraag_
diff sdkconfig.skraag sdkconfig.skraag.old
mv sdkconfig.skraag_ sdkconfig.skraag
cat partition16mb.csv
cat boards/skraag.json
cd .platformio/
cd toolchain-xtensa-esp32s3@8.4.0+2021r2-patch5/xtensa-esp32s3-elf
cat /home/t/.platformio/packages/toolchain-xtensa-esp32s3@8.4.0+2021r2-patch5/bin
tail -f /home/t/.local/state/nvim/lsp.log
rm rf *
mv packages /tmp
cd .platformio/packages/toolchain-xtensa-esp32s3
l xtensa-esp32s3-elf-g++
pio run --target compiledb 
COMPILATIONDB_INCLUDE_TOOLCHAIN=True  pio run --target compiledb
xtensa
xtensa-esp32s3-elf-g++
cat Makefile
pio run --target program
COMPILATIONDB_INCLUDE_TOOLCHAIN=True COMPILATIONDB_PATH=="/home/asd/asdasd/asd/" pio run --target compiledb -e skraag
COMPILATIONDB_INCLUDE_TOOLCHAIN=True COMPILATIONDB_PATH=="/home/t/.pio" pio run --target compiledb -e skraag
COMPILATIONDB_INCLUDE_TOOLCHAIN=True COMPILATIONDB_PATH=="/home/t/" pio run --target compiledb -e skraag
cd /home/t/.platformio/packages/toolchain-xtensa-esp32s3@8.4.0+2021r2-patch5/bin
COMPILATIONDB_INCLUDE_TOOLCHAIN=True COMPILATIONDB_PATH==/home/t/ pio run --target compiledb -e skraag
COMPILATIONDB_INCLUDE_TOOLCHAIN=True COMPILATIONDB_PATH=/home/t/ pio run --target compiledb -e skraag
COMPILATIONDB_INCLUDE_TOOLCHAIN=True COMPILATIONDB_PATH=/home/t/sdaf/asd pio run --target compiledb -e skraag
less .pio/build/skraag/compile_commands.json
rm .pio/build/skraag/compile_commands.json
nvim .pio/build/skraag/compile_commands.json
cp sdkconfig.skraag sdkconfig.skraag-dev
cp sdkconfig.skraag sdkconfig.skraag-pcb
rm sdkconfig.skraag
rm sdkconfig.skraag.old
cd lib
qrentop
cd framework-arduinoespressif32
weechat-curses --dir
weechat-curses --dir /tmp
sudo pacman -S quassel
yay -S quassel
yay -S quassel-client
yay -S quassel-git
pio run --target upload -e skraag && pio device monitor
pio idf
pio run --target erase -e skraag-pcb
pio clean
pio rim clean
pio run -t clean
rm -rf build
cd skraag-pcb
pio run --target upload -e skraag-pcb && pio device monitor
pio system prune --dry-run
pio system prune
adb cpip 5555
adb tcpip 5555
adb connect 192.168.1.102
adb disconnect
flutter pu
cat 2a
git ci -m 'restructure. We have device and it has bt and wifi connection. Wifi need more work'
rm pubspec.lock
xrandr --output DP-1-1-1 --scale 1x1
git add src
git ci -m 'fix nvs not found issue. Did not set factory settings and ended up in a reboot loop due to empty settings'
git ci -m 'pin states where not set properly'
cd .platformio/packages/toolchain-xtensa-esp32s3/bin
q
git add lib/
git ci -m 'more work on bt/wifi structure. We either have bt device or wifi device. wifi still need more work'
git ci -m 'make addDevice private in SkraagDevices'
git ci -m 'fix UndeliverableException. Ignore in MainActivity.kt'
git ci -m 'forgot to remove debug output'
pio pkg search ESPAsyncWebServer
pio pkg search me-no-dev
pio pkg search Esp Async WebServer
cp sdkconfig.skraag-dev sdkconfig.skraag-pcb
rm *.old
pio pkg search BlueAndy
pio pkg search BlueAndi
cd .pio/libdeps
rm -rf esp32dev esp32s3box esp32-s3-devkitc-1
rm -rf skraag
pio pkg search AsyncTcp
pio pkg search AsyncTCP
pio pkg search "Esp Async WebServer"
cd .pio/libdeps/
rm skraag-dev
rm -0rf skraag-dev
rm dependencies.lock
cd .pio/build/skraag-dev/esp-idf
idf_tools.py
git restore compile_commands.json
git diff --cached
git ci -m 'fixed: pin state was not set properly'
git ci -m 'forgot to remove experimental wifi code'
cd libdeps
cat integrity.dat
flutter pub cache repair
flutter pub get 
git ci -m 'some minor updates'
sudo pacman -S wscat
npm install -g wscat
sudo npm install -g wscat
sudo npm install -g npm@9.6.7
wscat -c 'ws://192.168.1.151:80/ws'
wscat -c 'ws://192.168.1.151/ws'
nvim testws.py
cat dependencies.lock
cd /home/t/.platformio/packages/toolchain-xtensa-esp32s3/bin/
clangd --help
cat .pio/build/skraag/compile_commands.json
nvim .pio/build/skraag-dev/compile_commands.json
rm .local/state/nvim/lsp.log
cat .local/state/nvim/lsp.log
pio run --help
pio pkg update
ls .pio/build/skraag-dev/
cd skraag-dev
pio run -v --target upload -e skraag-dev && pio device monitor
nvim nvim.py
cd .platformio/packages
cd toolchain-xtensa-esp32s3@8.4.0+2021r2-patch5
cd bin/
idf
cd tools/l
cd tools/
cd tools
pythoin idf.py
idf.py
./idf.py
python idf.py
rm -rf toolchain-xtensa-esp32s3*
mv postscript.py nvim.py
pip install git
pip install gitpython
nvim .pio/libdeps/skraag-dev
nvim .pio/libdeps/skraag-dev/ESP\ Async\ WebServer
git cherry-pick 1178428c8f5628e98fe94b5510d84d3e46679e27
git fetch --all
nvim src/WebRequest.cpp
git diff src/WebRequest.cpp
git diff src/WebRequest.cpp > ~/dev/skraag/skraag/websocket_fix.patch
git apply ~/dev/skraag/skraag/websocket_fix.patch
git restore src/WebRequest.cpp
mhwd-kernel 
mhwd-kernel -lil
python testws.py
cat testws.py
git applay websocket_fix.patch .pio/libdeps/skraag-dev/ESP\ Async\ WebServer
git apply websocket_fix.patch .pio/libdeps/skraag-dev/ESP\ Async\ WebServer
git apply websocket_fix.patch .pio/libdeps/skraag-dev/ESP\ Async\ WebServer/
git apply .pio/libdeps/skraag-dev/ESP\ Async\ WebServer/ websocket_fix.patch
git apply websocket_fix.patch --directory .pio/libdeps/skraag-dev/ESP\ Async\ WebServer/
cat websocket_fix.patch
cd .pio/libdeps/skraag-dev/ESP\ Async\ WebServer
git diff > ~/dev/skraag/skraag/websocket_fix.patch
git rm compile_commands.json
git add websocket_fix.patch
git show --staged
git add src/main.cpp
git ci -m 'wifi work and some minor changes'
pio build
pio run --target build
git ci -m 'digitalWrite was outside if expression'
git add -u src/main.cpp
git ci -m 'forget to remove ssid'
git
cd .pio/build/skraag-dev
l firmware.elf
l firmware.bin
git add =u
git ci -m 'fix: data and prev_data was updated in the wrong order'
pio run --target compiledb -e skraag
cp .pio/build/skraag-dev/compile_commands.json .
pythhon nvim.py
rm -rf toolchain-xtensa-esp32s3@8.4.0+2021r2-patch5
cd p
cd packages
rm -rf *
cd toolchain-xtensa-esp32s3
cd bin
rm .pio/build/skraag-pcb/compile_commands.json
cat defconfig
mv defconfig sdkconfig.defaults
~E
pio run -t menuconfig
rm sdkconfig.skraag-dev
cd skraag/
git clone git@github.com:nkolban/ESP32_BLE_Arduino.git
cd ESP32_BLE_Arduino
pio project init --ide vim
thunar
cd src/log
cat log.h
mkdir test2
cd test2
pio project init
flutter pub upgrade --major-versions
flutter pub upgrade
flutter pub outdated
pio run --target compiledb
cd esp-idf
cd examples/bluetooth
cd bluedroid/ble
cd gatt_server_service_table
cdssf
pio run --target upload -e skraag-dev && pio device monitor
git branch esp-idf
git switch -c esp-idf
git switch -c esp-idf-move
git add sdkconfig.defaults
git restore src/main.cpp
ks
git restore src
l src
rm led_strip_example_main.c
mv src/led_strip_encoder.* src/led
git clone git@github.com:espressif/idf-extra-components.git
cd idf-extra-components
cd examples/wifi/getting_started
cd station
o
pip install platformio
pio
pip uninstall platformio
sudo pacman -R platformio
python -m pip uninstall platformio
python3 -c "$(curl -fsSL https://raw.githubusercontent.com/platformio/platformio/master/scripts/get-platformio.py)"
sudp pacman -Ss platformio
sudo pacman -Ss platformio
pacman -Ss pio
pacman -Ss platform-io
pacman -Ss platformio
yay -R spotify
sudo pacman -R weechat-matrix
sudo pacman -S weechat
weechat
nvim .clang
nvim .clangd
nvim sdkconfig.defaults
rm sdkconfig.skraag-*
pio pkg search ESPAsyncTCP
pio run --target upload --target monitor -e skraag-dev\ 
A
git add components/
gcb master
gcb
git merge esp-idf-move
git ci -m 'some changes to work with esp-idf move branch in chip code'
pasystray
nvim .clang-format
git show HEAD
git ci -m 'remove unused files'
cd src
cd security
mv security sec
cd sec
cat security.
cat security.h
pio run --target clear -e skraag-dev
pio run --target clean -e skraag-dev
cd .pi
cd skraag
cd .pio/build
mv main src
cd .pio
rm -rf skraag-dev
cd .platformio/packages/
cd framework-espidf
cd .platformio/packages/framework-espidf/components
pio run --target menuconfig
mv src main
cat compile_commands.json
pio project init --ide vim --board skraag-dev
rm compile_commands.json
rm .pio/build/skraag-dev/compile_commands.json
pio run --target compiledb -e skraag-dev
piio run --target upload --target monitor -e skraag-dev
git ci -m 'remove bt_pin setting field. change in notify code to work with fix in chip code'
ifconfig
git ci -m 'remove bt_pin in settings and fix minor issue'
pio build -e skraag-dev
pio run -e skraag-dev
cp .pio/build/skraag-dev/firmware.elf /tmp/firmtest.elf
flutter run
DISABLE_AUTHENICATION=true go run cmd/web/main.go
DISABLE_AUTHENTICATION=true go run cmd/web/main.go
flutter logs
cd .pio/build/skraag-dev/
l firmware.
mv firmware.bin firmwaretest.bin
mv firmwaretest.bin /tmp/firmtest.bin
nvim /tmp/firmtest.bin
pio -h
CFLAGS="-DVERSION=test" pio run -e skraag-dev && cp .pio/build/skraag-dev/firmware.bin /tmp/firmtest.bin
PLATFORMIO_BUILD_FLAGS="'-DVERSION=test0'" pio run -e skraag-dev && cp .pio/build/skraag-dev/firmware.bin /tmp/firmtest.bin
pio run -e skraag-dev && cp .pio/build/skraag-dev/firmware.bin /tmp/firmtest.bin
pio run -t monitor
go run cmd/web/main.go
mc admin update
docker-compose -f docker-compose.yaml up --force-recreate --remove-orphans --service-ports web
docker-compose -f docker-compose.yaml up --force-recreate --remove-orphans
qrencode
platformio upgrade
pio 
pio run -h
pio run --list-targets
pio run --target uploadfs -e skraag-dev
pip install qrcode
git ci -m 'minor changes and getting OTA endpoints to work'
git remote set-url origin git@gitlab.com:skrog/skraag-web.git
nvim amystrach
sudo mhwd-kernel -i linux65
sudo pacman -R nvidia-utils
sudo pacman -Syu --overwrite "*"
cd spotify
rm -rf spotify
spoitfy
notify-send
notify-send hello
notify-send Date "hello"
sudo pacman -S dunst
spotifuy
mv generate_secret.py deploy.py
cat data/secret
sudo mhwd-kernel -l
sudo mhwd-kernel -r linux62
sudo mhwd-kernel -li
sudo mhwd-kernel -i linux64
sudo mhwd -i pci video-linux
sudo mhwd-kernel -r linux64
k
cdsb
sudo mhwd-kernel -r linux65
sudo mhwd-kernel -i linux64 rmc
sudo 
sudo echo 100
sudo echo 100 > /sys/class/backlight/intel_backlight/brightness
echo /sys/class/backlight/intel_backlight/brightness
cat /sys/class/power_supply/BAT0/capacity
cd nvim/
cd .h
cd .home
cd kitty
git ci -m 'update'
ll -l
find . -type l -ls
ls -la | grep "\->"
ls -la
cat .p10k.zsh
cd transit
cat i3status-rust
cds
cd .config/i3status-rust
cd .docker
cat .zshrc.omz-uninstalled-2022-09-27_15-51-17
xrandr --output eDP-1 --gamma 1:1:1
cat /sys/class/backlight/intel_backlight/brightness
nvim /sys/class/backlight/intel_backlight/brightness
sudo nvim /sys/class/backlight/intel_backlight/brightness
xgamma
sudo pacman -S xgamma
sudo pacman -S brightnessctl
brightnessctl -h
nvim 
cd i3status-rust
cat config.toml
g
pkill spotify]
brightnessctl -l
cd internal/api/openapi/
oapi-codegen -generate "types,client,gorilla" -package serviceapi serviceapi.yaml
go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@latest
oapi-codegen -config config.yaml serviceapi.yaml 
rm -rf .cache/spotify
spotify --disable-gpu
ps aux | grep spotify
spotify
yay -S spotify
cd /opt
rm rf spotify
sudo rm rf spotify
sudo rm -rf spotify
pkill Thunar
zip
unzip
unzip Widescreen\ Desktops.zip
cd components
cat platformio.ini
autorandr --save work --force
go run cmd/authly-cli/main.go set user Username Knut Password knut Firstname Knut Lastname Stave
autorandr work
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub (| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup))
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub (objectclass=mathematicians)
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=mathematicians))' dn cn sn mail uid
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub (|(objectClass=groupOfNames)(objectClass=groupOfUniqueNames))
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=*)(memberof=cn=mathematicians,ou=groups,dc=example,dc=com))' dn cn sn mail uid 
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=*)(memberof=cn=Mathematicians,ou=groups,dc=example,dc=com))' dn cn sn mail uid 
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=*)(memberof=cn=Mathematicians,dc=example,dc=com))' dn cn sn mail uid 
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(memberof=cn=Mathematicians,dc=example,dc=com)' dn cn sn mail uid 
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(memberof=cn=mathematicians,dc=example,dc=com)' dn cn sn mail uid 
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(memberof=cn=mathematicians,dc=example,dc=com)' 
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(memberof=ou=mathematicians,dc=example,dc=com'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(memberof=ou=mathematicians,dc=example,dc=com)'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=*))' dn cn sn mail uid
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(memberof=cn=Mathematicians,ou=mathematicians,dc=example,dc=com)'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=*)(memberOf=cn=Mathematicians))'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=*)(memberOf=ou=mathematicians,dc=example,dc=com))'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=*)(memberOf=cn=Mathematicians,ou=mathematicians,dc=example,dc=com))'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=iNetOrgPerson)(memberOf=cn=Mathematicians,ou=mathematicians,dc=example,dc=com))'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=inetOrgPerson)(memberOf:cn=Mathematicians,ou=mathematicians,dc=example,dc=com))'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=inetOrgPerson)(uniqueMember=cn=Mathematicians,ou=mathematicians,dc=example,dc=com))'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=inetOrgPerson)(uniqueMember=ou=mathematicians,dc=example,dc=com))'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=inetOrgPerson))'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=inetOrgPerson)(memberOf=cn=Mathematicians,ou=mathematicians,dc=example,dc=com))'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=*)(cn=Mathematicians))'
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=inetOrgPerson)(memberof=cn=Mathematicians,ou=mathematicians,dc=example,dc=com))'
ldapsearch -x -b "cn=admin_staff,ou=people,dc=planetexpress,dc=com" -H ldap://localhost:10389
ldapsearch -x -b "cn=admin_staff,ou=people,dc=planetexpress,dc=com" -H ldap://localhost:389
ldapsearch -x -b "dc=example,dc=com" -H ldap://localhost:389 -s sub '(&(objectclass=*))'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:10389 -s sub '(cn=Hubert J. Farnsworth)'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:389 -s sub '(| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup) (objectclass=group))' member uniqueMember memberUid
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:389 -s sub '(| (objectclass=groupOfNames) (objectclass=groupOfUniqueNames) (objectclass=posixGroup) (objectclass=group))'
ldapsearch -x -b "dc=planetexpress,dc=com" -H ldap://localhost:389 -s sub '(&(objectclass=*))'
ldapsearch -x -b "dc=protojou,dc=com" -H ldap://localhost:389 -s sub '(&(objectclass=*))'
ldapsearch -x -b "dc=protojour,dc=com" -H ldap://localhost:389 -s sub '(&(objectclass=*))'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(& (objectclass=*))'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(&(objectclass=*))'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(&(objectclass=group))'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(&(objectclass=posixGroup))'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(&(objectclass=*)(cn=developers))'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(&(objectclass=*)(cn=users))'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(&(objectclass=*)(memberOf=cn=users,ou=Groups,dc=protojour,dc=com))'
ldapsearch -x -b "dc=protojour,dc=com" -D cn=readonly,dc=protojour,dc=com -w 'readonly' -H ldap://0.0.0.0 -s sub '(&(objectclass=*)(memberof=cn=users,ou=Groups,dc=protojour,dc=com))'
'(&(objectClass=inetOrgPerson)(memberof=cn=people-admins,ou=groups,dc=example,dc=com))'
git blame internal/data/data.yaml
rm /home/t/.local/state/nvim/lsp.log
cat /home/t/.local/state/nvim/lsp.log
cat /home/t/.local/state/nvim/log
cd /home/t/.local/state/nvim
cat lsp.log
yamlls
sudo pacman -S yamlls
sudo pacman -S yaml-language-server
yaml-language-server internal/api/openapi/serviceapi.yaml
yaml-language-server --help
yaml-language-server
yaml-language-server --stdio internal/api/openapi/serviceapi.yaml
yaml-language-server --stdio < internal/api/openapi/serviceapi.yaml
yaml-language-server --stdio
oapi-codegen -config config.yaml internal/api/openapi/serviceapi.yaml
oapi-codegen -config internal/api/openapi/config.yaml internal/api/openapi/serviceapi.yaml -v
oapi-codegen -v -config internal/api/openapi/config.yaml internal/api/openapi/serviceapi.yaml
oapi-codegen -version
go install github.com/labstack/echo/v4 v4.11.1
go install github.com/labstack/echo/v4@latest
go get github.com/labstack/echo/v4
go get go get github.com/labstack/echo/v4
go get github.com/getkin/kin-openapi
go install github.com/labstack/echo/v4
go install github.com/deepmap/oapi-codegen/tree/master/pkg/runtime
go install github.com/deepmap/oapi-codegen/tree/master
go generate $(go list ./internal/api/oapi/...)
\:w
go get github.com/wk8/go-ordered-map/v2
go mod tidyt
go get -u github.com/wk8/go-ordered-map/v2
i
go test -v $(go list ./test/...) -run TestApiAuthenticateUser -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApiAuthentica -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApiAuth -test_stdout=true -test_debug=true
go get -u github.com/wk8/go-ordered-map/
cd go
cd pkg
cd mod
rm -rf github.com/wk8
sudo rm -rf github.com/wk8
go get -u github.com/labstack/echo/middleware
go get -u github.com/deepmap/oapi-codegen/pkg/middleware
go get --help
go help get
go get github.com/mvrilo/go-redoc
git add data/
git add deploy.py
git d generate_secret.py
git add generate_secret.py
git add main/storage/
cd data
cat hello.txt
rm hello.txt
git add data
go get -u 
go get
go test -v $(go list ./test/...) -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApiAuth/TestUserBlankPassword -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCli/TestSetUser -test_debug=true -test_stdout=true
CLI RESULT            <== Command | set user\
[TEST]    |                           Args    | Lastname lastname0 Email username0@mail.com Username username0 Password [Secret] Firstname firstname0\
[TEST]    |                           Options | [Empty]\
[TEST]    |                           Status  | Error\
[TEST]    |                           Result  | failed to parse json response, Content-Type is not application/json
go test -v $(go list ./test/...) -run TestCli/TestBasic -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestAPI -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestAPIAuth -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApi -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestCli/TestCliLdap
go test -v $(go list ./test/...) -run TestCliLdap/TestServerLdap -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliLdap -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCli -test_stdout=true -test_debug=true
go gen
go test -v $(go list ./test/...) -run TestApi/TestApiAuth/TestAuthoritiesList
go test -v $(go list ./test/...) -run TestApi/TestServiceApi/ResolveBasic -test_stdout=true -test_debug=true
git blame internal/operation/opdata/opdata.go
git ci =m 
git ci -m 'cleanup api. Added openapi with redoc documentation'
git show 140ae154f
git ci -m 'go generate should never be run on gitlab-ci'
bash -c ps aux | grep 'go-build'
bash -c ps aux 
git ci -m 'do not exit test if exec of ps aux to check for running instances fail. (gitlab runner do not have /proc and ps does not work) '
git add doc/API.md
git ci -m 'remove old api doc'
git add images/doc_entities.png
git ci -m 'update images/doc_entities.png; added contract to drawing'
git add internal/api/openapi/
git ci -m 'made description in openapi more.. descriptive'
git add pkg/cli/
git diff'
git ci -m 'minor change to cliendpoint'
git add internal/api/
zygit
git add internal/entities/
git ci -m 'return [] instead of null at /api/service/service when empty contract list Fix #95'
git ci -m 'minor README.md updates'
nvim Downloads/authly
docker-compose -f test/docker-compose.yaml up --force-recreate --remove-orphans
nvim go.mod
vim internal/operation/opschema/types/types_gen.go
cat go.mod
go run cmd/authly-cli/main.go set user Username Terje Password terje Firstname Terje Lastname Lui
go run cmd/authly-cli/main.go set service Name testService OwnerEID 1 Servicename testservice0
set contract testService testService
go run cmd/authly-cli/main.go set contract Servicename testservice0 testservice0
go run cmd/authly-cli/main.go set contract testservice0 testservice0
go run cmd/authly-cli/main.go set contract --argtype User testservice0 testservice0
go run cmd/authly-cli/main.go show service
go run cmd/authly-cli/main.go set contract --argtype user testservice0 testservice0
go run cmd/authly-cli/main.go set contract --argtype username testservice0 testservice0
go run cmd/authly-cli/main.go set service Name testService OwnerEID 1 Servicename testservice0 ServiceSecret secret
go run cmd/authly-cli/main.go set contract --argtype Usernames testservice0 testservice0
go run cmd/authly-cli/main.go set contract --argtype Servicenames testservice0 testservice0
git show a930e9892
git ci -m 'added endpoint to check if profile is in service role'
git ci -m 'added 0.9.0 changelog'
git tag 0.9.0
git ci -m 'cli api local host only middleware was added on the root mux'
git tag 0.9.1
git blame internal/entities/services/services.go
go test -v $(go list ./test/...) -run TestCliRemoveUser/TestOwnsService -test_debug=true -test_stdout=true
git ci -m 'use sync.Map (async safe maps) for store.go'
git blame internal/entities/services/contracts/contracs.go
git ci -m 'Update resource resolve endpoint to take profile as url parameter'
nvim CHANGELOG.md
git tag 0.9.2
dir
ls -al
ls -all
ls -allls
cat clean
cat install
stow
cd hom
cd home
cd .i3
rm .zshrc.omz-uninstalled-2022-09-27_15-51-17
cd .config/i3/
cd con
cd i3
cat .zshrc
cat dotfiles/home
cat dotfiles/home/.zshrc
mv .zshrc /tmp/.zshrc
install
/install
git add README.md
git add home/
top | grep authly
top | grep 2972
top | grep 306039
top | grep 305901
top | grep 24632
top | grep 2353732
top | grep 25768
top | grep 341531
kill -9 341531
go test -v $(go list ./test/...) -run TestCliSetService/TestMissingRequired -test_debug=true -test_stdout=true
cat Downloads/authly_crash
\:qa
cd .zsh
nvim install
mv .zsh /tmp/.zsh
cp .p10k.zsh dotfiles/home
rm .p10k.zsh
./install
git add zsh/
git ..
go test -v $(go list ./test/...) -run TestCliRemoveUser/TestBasic
go test -v $(go list ./test/...) -run TestCliRemoveUser/TestBasic -test_debug=true
go test -v $(go list ./test/...) -run TestCl -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestCli -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestCliSetRole -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestCliSet/TestAuthoritySet -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestCliLdap -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestAoi
go test -v $(go list ./test/...) -run TestOperation/TestSetResiyrce -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -timeout=120s -run TestReload
go test -timeout=120s -v $(go list ./test/...)
ps aux | grep go
ps aux | grep authly
kill 67513
go test -v -timeout=120s $(go list ./test/...) -run TestReload
go test -v -timeout=20s $(go list ./test/...) -run TestReload/TestResourceReload -test_debug=true -test_stdout=true
go test -v -timeout=20s $(go list ./test/...) -run TestReload
go test -v -timeout=20s $(go list ./test/...)
go test -v -timeout=20s $(go list ./test/...) -run TestConfig/TestLogFlagsUPDATE -test_debug=true -test_stdout=true
git add configs/
git ci -m 'large refactor to make bulk loading of range of data in store possible'
git ci -m 'fix missing format argument'
git ci -m 'scan is not compatible with pipeline as it needs the result from previous scan. Running Scan in paralell to pipeline'
go clean -cache
go test -v $(go list ./...) -run TestRedis/TestSFuncs
go test -v $(go list ./...) -run TestRedis/TestSFuncs -test_debug=true -test_stdout=true
go test -v $(go list ./...) -run TestRedis/TestHFuncs -test_debug=true -test_stdout=true
go test -v $(go list ./...) -run TestRedis/TestSet -test_debug=true -test_stdout=true
go test -v $(go list ./...) -run TestRedis/TestHashmap
go test -v $(go list ./test)
go test -v $(go list ./test/...) -run TestAou
git ci -m 'updated IdentStr's'
git ci -m 'updated IdentStrs'
git tag 0.9.3
cd dotfiles
cd zsh/.zsh/themes/powerlevel10k
cd powerlevel10k
git url
git show origin
git show url
git submodule add https://github.com/romkatv/powerlevel10k.git .
rm -rf powerlevel10k
rm powerlevel10k
git submodule add https://github.com/romkatv/powerlevel10k.git powerlevel10k
cd plugins
cd fast-syntax-highlighting
rm -rf fast-syntax-highlighting
git submodule add git@github.com:zdharma-zmirror/fast-syntax-highlighting.git fast-syntax-highlighting
cd forgit
rm -rf forgit
git submodule add https://github.com/wfxr/forgit.git forgit
cd fzf-zsh-plugin
rm -rf fzf-zsh-plugin
git submodule add git@github.com:unixorn/fzf-zsh-plugin.git fzf-zsh-plugin
rm zsh-autosuggestions
rm -rf zsh-autosuggestions
git submodule add https://github.com/zsh-users/zsh-autosuggestions.git zsh-autosuggestions
cd zsh-completions
rm -rf zsh-completions
git submodule add https://github.com/zsh-users/zsh-autosuggestions.git zsh-completions
git ci -m 'updates'
whois
sudo pacman -S whois
whois boatomatic.com
python -m pip install --upgrade pip
sudo pacman -S python3
sudo pacman -S python-pip
pio run --target clean
tora
esptool.py
pio run --target erase
pio run --target erase -e skraag-dev
pio run --target build -e skraag-dev
ls /dev/ttyACM0
ls -l /dev/tty*
ls -l /dev/ttyACM
ls -l /dev/ttyACM*
pio run --target uploadfs --target upload --target monitor -e skraag-dev
gi ci -m 'add secret to spiffs'
git ci -m 'add secret to spiffs'
git ci -m 'update readme'
cd jsonschema
2;13uD
groups
git add -u 'bump flutter_reactive_ble version'
git add -m 'bump flutter_reactive_ble version'
git ci -m 'bump flutter_reactive_ble version'
nvim .config/i3/config
cd components/mbedtls/mbedtls/library
cd mbedtls
nvim RE
cat skraag
nvim .gitignore
git add nvim.py
git ci -m 'add nvim fix script'
git add .gitignore
cat .clangd -p
cat .ccls
cat sdkconfig.skraag-
cat sdkconfig.skraag
cat sdkconfig.skraag-dev
sudo pacman -S jdk-openjdk openjdk-doc
autor
kjhgkhkjhkljh
kjhjkhjk
go generate $(go list ./internal/operation/opschema/types)
cat .cache
nvim compile_commands.json
cat .clangd
git ci -m 'new opschema generator'
cd authly-core-master
11-5-1
go test -v $(go list ./test/...) -run TestApiLdap/TestServiceApi
cat bt.txt
oapi-codegen -config internal/api/openapi/config.yaml internal/api/openapi/serviceapi.yaml
cd .grc
cat conf.gotest
cat grc.conf
cat conf.gotest -p
cat grc.conf -p
go generate internal/redis/types/hashmodel/model/...
fdisk -k
pwd
git push --delete origin x.x.x-test-2
git push --delete origin x.x.x-test-3 x.x.x-test-4 x.x.x-test-5 x.x.x-test
git co -b push_states
git add components/mbedtls/
git restore components/mbedtls
git restore --staged components/mbedtls/
git ci -m 'push states; PUSH_LOW and PUSH_HIGH'
git push --set-upstream origin push_states
go test -v $(go list ./test/...) -run TestOperation/TestSetServer -test_debug=true -test_stdout=true
git tag 0.10.0
go run cmd/authly-cli/main.go show authority
git ci -m 'Return the authority in auth/authorities endpoint and not just the servers. Also posibility to disable authly as a authority'
git tag 0.11.0
go test -v $(go list ./test/...) -run TestCliLdap/TestSyncUsersFromLoca
nvim .gitlab-ci.yml\ 
aut
nvim lib/device/device.dart
mhwd-gpu -li
mhwd-gpu -l
mhwd-gpu
cd Downloads/authlylogo
unzip Authly\ Export\ div\ logos.zip
brightnessctl -d "intel_backlight" set 60%
brightnessctl -d "intel_backlight" set 40%
brightnessctl -d "intel_backlight" set 20%
git pul
git pul;
go generate
restore internal/api/openapi/openapi_gen.go
go generate $(go list ./internal/...)
git ci -m 'Changed getter generator to handle different output for same data types in different endpoints. And added patch service endpoint'
git ci -m 'added service logo endpoints'
git merge config_api
git slog
git show 731d7f199b82bde2084da8616b0545d0a85c04bd
git co config_api
git show ab5f2a5cbe2a3d1fdd4196b2b3c44307f0051589
ranger
go test -v $(go list ./test/...) -run TestApi/TestServiceLogo -test_debug=true -test_stdout=true
git add -u files/
git ci -m 'Added serviceapi logo endpoints for post and get'
git tag 0.11.2
git ci -m 'forgot CHANGELOG in previous commit'
git co -b oauth2
git ci -m 'Changed request body for service api policy creation to take array of policies'
git ci -m 'update changelog for 0.12.0'
git tag 0.12.0
      (2.080147ms)\
    tapi.go:122: \
        	Error Trace:	/home/t/dev/protojour/authly-core/test/tctx/
git ci -m 'added role and role member get/post/delete endpoints to service api'
git ci -m 'Added changelog for 0.12.1'
git tag 0.12.1
fg
bg
or
git ci -m 'make it more clear that this is a reactive ble device and not skraag device'
kill 396956
ps aux | grep yaml
go run cmd/authly-cli/main.go [set authority server TLSPort 4 BaseDN testBaseDN UserSyncFilter (&(objectClass=inetOrgPerson)) Authorityname LDAP Enabled true Hostname ldap.com ReadOnlyDN testDN ReadOnlyPass testPass Servername ldapserver0 Port 433 TLSEnabled true --port 5002 --debug
go run cmd/authly-cli/main.go set authority server TLSPort 4 BaseDN testBaseDN UserSyncFilter (&(objectClass=inetOrgPerson)) Authorityname LDAP Enabled true Hostname ldap.com ReadOnlyDN testDN ReadOnlyPass testPass Servername ldapserver0 Port 433 TLSEnabled true --port 5002 --debug
go run cmd/authly-cli/main.go set authority server TLSPort 4 BaseDN testBaseDN UserSyncFilter "(&(objectClass=inetOrgPerson))" Authorityname LDAP Enabled true Hostname ldap.com ReadOnlyDN testDN ReadOnlyPass testPass Servername ldapserver0 Port 433 TLSEnabled true --port 5002 --debug
\
\

go run cmd/authly-cli/main.go show authority server
go run cmd/authly-cli/main.go set authority server TLSPort 4 BaseDN testBaseDN UserSyncFilter "(&(objectClass=inetOrgPerson))" Authorityname LDAP Enabled true Hostname ldap.com ReadOnlyDN testDN ReadOnlyPass testPass Servername ldapserver0 Port 433 TLSEnabled true --debug
go run cmd/authly-cli/main.go show authority server LDAP ldapserver0
docker-compose down --volumes
las
nvim logs.log
git branch
git show c92d763b3fc0b3eeea0d71c7a4b1df8e9acc4c96
golang --version
go --version
go -version
go test -v $(go list ./internal/lib/secret...)
got st
git ci -m 'even more log output'
go test -v $(go list ./internal/redis/...) -run TestRedis -test_debug=true -test_stdout=true
go test -v $(go list ./internal/redis/...) -run TestSet
go test -v $(go list ./internal/redis/...) -run TestRedis/TestSFuncs
go test -v $(go list ./internal/redis/...)
go test -v $(go list ./internal/redis/...) -run TestRedis/TestHashmap -test_stdoa
go get -u
go clean -cache -modcache
go clean -testcache
docker-compose -f test/docker-compose.yml down --volumes
nvim authly_output2_stdout.logs
yay -Ss golang
go test -v $(go list ./internal/lib/value/serialize/serialize_test/...))
go test -v $(go list ./internal/redis/...) -run TestRedis/TestHashmap -test_stdout=true -test_debug=true
go test -v $(go list ./internal/lib/value/serialize/serialize_test/...)
go1.21.8 test -v $(go list ./internal/lib/value/serialize/serialize_test/...) -test_debug=true -test_stdout=true
go install golang.org/dl/go1.21.8@latest
go1.21.8 download
go1.21.8 env GOROOT
go test -v $(go list ./...) -run TestConfig/TestLogFlagsDEBUG
go test -v $(go list ./...) -run TestConfig/TestLogFlagsDEBUG -test_debug=true -test_stdout=true
go test -v $(go list ./...) -run TestApiService/TestServiceLogo
go test -v $(go list ./...) -run TestApiService/TestServiceLogo -test_debug=true -test_stdout=true
git tag 0.11.2-test_output_4
go co master
git ci -m 'added 0.12.2 changelog'
git tag 0.12.2
git co sync_output
go test -v $(go list ./internal/lib/value/serialize/serialize_test/...) -test_debug=true -test_stdout=true
go test -v $(go list ./internal/lib/value/serialize/serialize_test/...) -run TestSecret -test_debug=true -test_stdout=true
go test -v $(go list ./internal/lib/secret/...) -run TestSecret -test_debug=true -test_stdout=true
go test -v $(go list ./internal/lib/secret/...) -run TestSecret
go build --help
go help build
ldd /tmp/authly-test/serve
cd .con
nvim kitty/kitty.conf
cd /tmp/go-build1134833036/
cd b128
docker .
docker up .
docker up --build .
docker up --build Dockerfile
docker-compose -f docker-compose.yml up --force-recreate --remove-orphans
docker ls
docker run .
docker build . --tag 'authly'
docker run --detach 'authly'
docker cp 710f79f7893b:/dist/authly-serve/serve /tmp/ser
docker cp 710f79f7893b:/dist/authly/authly-serve /tmp/ser
docker cp 710f79f7893b:authly-serve /tmp/ser
ldd ser
go build -ldflags "-linkmode external -extldflags -static -X authly/pkg/app.version=`git tag --sort=-version:refname | head -n 1`" -o /tmp/secrettest cmd/secrettest/main.go\

git co oauth2
rm -rf cmd/secrettest
nvim auth_4.log
nvim /tmp/out
nvim Downloads/authly_output2_stdout.logs
cd /tm
cd /tmp
./secrettest
gdb ./secrettest
gdb authly-test/serve
cd authly-test
./serve
nviim
docker-compose -f test/docker-compose.yml up --force-recreate --remove-orphans
go test -v $(go list ./test/...) -run TestCliLdap/TestSyncUsersFromLocalLdap -test_stdout=true -test_debug=true > /tmp/out
go test -v $(go list ./test/...) -run TestCliLdap/TestSyncUsersFromLocalLdap -test_stdout=true -test_debug=true -bench
go test -v $(go list ./internal/lib/secret/...) -run BenchmarkSecret
go test -v $(go list ./internal/lib/secret/...) -run BenchmarkSecret -bench
go test -v $(go list ./internal/lib/secret/...) -bench -run BenchmarkSecret
go test -v $(go list ./internal/lib/secret/...) -bench
go test -v $(go list ./internal/lib/secret/...) -bench=.
go test -v $(go list ./test/...) -bench -run TestCliLdap/TestSyncUsersFromLocalLdap -test_stdout=true -test_debug=true
git ci -m 'change output to show that we are hosting on https'
ssh-keygen -p -f id_rsa
rm id_rsa*
cat nvim.py
cat nvim.py -p
xrandr
auto
autorandr --save baat --force
autorandr baat -s
utora
uto
mv go.sum /tmp
cd .s
cat id_rsa 
ssh-keygen -p -f id_rsa_proto
ssh-keygen -t rsa -b 2048 -f id_rsa_proto
cat id_rsa_proto.pub
cat id_rsa_proto.pub -p
ac404VAC
autoran
docker exec -it test-keycloak-1 bash
asd
go get github.com/wk8/go-ordered-map
go env
cd .cache
cd go-build
rm -rf go-build
git add -y
git add files/ internal/
git add test/Keycloack_Dockerfile
git reflog
go generate $(go list ./pkg/cli/...)
go test -v $(go list ./test/...) -run TestOperation/TestRemoveResource -test_debug=true -test_stdout=true
git add pkg/
git ci -m 'changes to support oauth2 and the first basic implementation. Only Authentication with Credentials flow for now.'
git rev-list --objects --all |\
  git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' |\
  sed -n 's/^blob //p' |\
  sort --numeric-sort --key=2 |\
  cut -c 1-12,41- |\
  $(command -v gnumfmt || echo numfmt) --field=2 --to=iec-i --suffix=B --padding=7 --round=nearest
git log --format=format:"%H" --shortstat
git log --format=format:"%H" --shortstat | perl -00 -ne 'my ($hash, $filesChanged, $insertions, $deletions) = $_ =~ /(?:[0-9a-f]+\n)*([0-9a-f]+)\n(?: (\d+) files? changed,)?(?: (\d+) insertions?...,?)?(?: (\d+) deletions?...)?/sg; print $hash, "\t", $insertions + $deletions, "\n"' | sort -k 2 -nr
git shortlog -s -n
git-stats
git user-stats
sudo pacman -S git-stat
sudo pacman -S git-stats
yay -S git-stats
curl -s https://raw.githubusercontent.com/IonicaBizau/git-stats/master/scripts/init-git-post
curl -s https://raw.githubusercontent.com/IonicaBizau/git-stats/master/scripts/init-git-post-commit | bash\
\

npm i -g git-stats
sudo npm i -g git-stats
curl -s https://raw.githubusercontent.com/IonicaBizau/git-stats/master/scripts/init-git-post-commit | bash
git-stats 
gocloc cdm
cd protojour/memoriam
git clone git@gitlab.com:protojour/memoriam/memoriam-rs.git
git clone git@gitlab-proto.com:protojour/memoriam/memoriam-rs.git
git clone git@gitlab.com-proto:protojour/memoriam/memoriam-rs.git
gocloc .
git merge oauth2
git add internal/auth/authorities/ldap/syncer/ldapuser.go
git ci -m 'fix go vet'
git ci -m 'update docker-compose file'
git add test/docker-compose.yml
git ci -m 'update docker-compose file. LDAP_READONLY_USER value need to be string'
docker-compose ps --services
docker-compose ps --services --filter "status=running"
docker-compose ps
docker-compose
docker os
docker ps
docker ps --services --filter "status=running"
docker ps --filter status=running
docker ps --filter status=running --format '{{.Names}}'
git ci -m 'fix some Error output that is not actually error'
git add test/
git ci -m 'use localhost for keycloak test instance instead of 0.0.0.0'
go test -v $(go list ./test/...) -run TestOperation/TestRemoveResource -test_stdout=true -test_debug=true
psql
sudo pacman -S psql
sudo pacman -S postgresql
psql --help
docker-compose -f docker-compose.yaml up --force-recreate --remove-orphans --build
docker-compose -f test/docker-compose.yaml up --force-recreate --remove-orphans --build
http POST https://0.0.0.0:5000/authly/auth/authenticate body='{"Authorityname":"OAuth2","Username"="username0","Flow"="AUTHORIZATION_CODE"}'
http --verify=no POST https://0.0.0.0:5000/authly/auth/authenticate body='{"Authorityname":"OAuth2","Username"="username0","Flow"="AUTHORIZATION_CODE"}' 
http --verify=no POST https://0.0.0.0:5000/api/authly/auth/authenticate body='{"Authorityname":"OAuth2","Username"="username0","Flow"="AUTHORIZATION_CODE"}' 
http --verify=no POST https://0.0.0.0:5000/api/auth/authenticate body='{"Authorityname":"OAuth2","Username"="username0","Flow"="AUTHORIZATION_CODE"}' 
http --verify=no POST https://0.0.0.0:5000/api/auth/authenticate body='{"Authority"="OAuth2","Servername="keycloak","Username"="username0","Flow"="AUTHORIZATION_CODE"}' 
http --verify=no POST https://0.0.0.0:5000/api/auth/authenticate Authority=OAuth2 Servername=keycloak Username=username0 Flow=AUTHORIZATION_CODE
http --verify=no POST https://0.0.0.0:5000/api/auth/authenticate Authorityname=OAuth2 Servername=keycloak Username=username0 Flow=AUTHORIZATION_CODE
cd files/
cd manual
python -m http.server
python -m http.server -port 9000
python -m http.server -port 8001
python -m http.server 8001
cd internal/operation/opschema/types
go run main.go .
cat main.go
go run main.go
TEST_CONTEXT=true go run cmd/authly-serve/main.go
AUTHENTICATION_ORIGIN="http://localhost:8001" TEST_CONTEXT=true go run cmd/authly-serve/main.go
git show 6c2160ef77a72defb94bce80fe1dae777b3164b7
~
rm 2a
git co --branch oauth2_authorization_code
git co -b oauth_auth_code
git add files/ internal/ test/
git ci -m 'add AuthlyLoginEnabled to /auth/authorities endpoint'
git ci -m 'update changelog for 0.13.0'
git tag 0.13.0
git pull origin master
git pull origin main
go run cmd/authly-cli/main.go show user
go run cmd/authly-cli/main.go show user --port 5000
go run cmd/authly-cli/main.go --help
go run cmd/authly-cli/main.go --port 5000 show user 
git show Dockerfile
cat Docker
git blame Dockerfile
docker build --pull .
docker --version
nvim skragg
cdsw
xrandr --output eDP-1 --scale 0.6x0.6
xrandr --output eDP-1 --scale 0.5x0.5
pacman -Q --info go
sudo pacman -R golang
sudo rm -rf /usr/local/go
sudo pacman -S go
sudo pacman -R go
mv /usr/bin/grc /tmp/grc
sudo mv /usr/bin/grc /tmp/grc
go ver
grc
which go1.21.8
cd /home/t/go/bin/go1.21.8
cd /home/t/go/bin/
rm go1.21.8
which go
mv /tmp/grc /usr/bin/grc
sudo mv /tmp/grc /usr/bin/grc
go
git co oauth_auth_code
go test -v $(go list ./test/...) -run TestCliLdap/TestServerLdapBasic
go test -v $(go list ./test/...) -run TestCliLdap/TestServerLdapBasic -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestCliRemoveGroup/TestBasic -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestCliRemoveRole/TestBasi
go test -v $(go list ./test/...) -run TestCliRemoveRole/TestBasi -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestOperation/TestRemoveGroup -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestReload
gi add internal
git add test/manual/
git ci -m 'Add oauth authorization flow.'
git merge oauth_auth_code
git ci -m 'fix errcheck'
git ci -m 'rename server -> source'
go generate $(go list ./...) -run TestCliSetUser/TestBasic -test_debug=true -test_stdout=true
git ci -m 'rename Servicename to ServiceName'
git add test/operation_schema_test.yaml
go test -v $(go list ./test/...) -run TestCliSetGroup -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestOperation/TestRemoveContract -test_debug=true -test_stdout=true
git ci -m 'rename Groupname to GroupName'
git ci -m 'rename Authorityname to AuthorityName'
git ci -m 'rename Resourcename to ResourceName'
git ci -m 'rename Sourcename to SourceName'
go test -v $(go list ./test/...) -run TestOperation/TestSetResource
git ci -m 'rename Actionname to ActionName'
git ci -m 'rename Policyname to PolicyName'
git ci -m 'rename Rolename to RoleName'
git ci -m 'rename User Firstname/Lastname to FirstName/LastName'
go test -v $(go list ./test/...) -run TestCliSetUser/TestBasic -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestCliSetUser
go test -v $(go list ./test/...) -run TestCliSetRole/TestBasic -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestCliSetRole/
go test -v $(go list ./test/...) -run TestCliSetRole/TestMembers -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestCliSetRole
go test -v $(go list ./test/...) -run TestCliRemoveUser/TestBasic -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestCliRemoveUser
go test -v $(go list ./test/...) -run TestCliRemoveService
go test -v $(go list ./test/...) -run TestCliLdap/TestSyncUsersFromLdap
go test -v $(go list ./test/...) -run TestCliRemoveRole/TestBasic -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestCliRemove
go test -v $(go list ./test/...) -run TestCliSet/TestContractSet -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliSetService/TestMissingRequired
go test -v $(go list ./test/...) -run TestCliSetService/TestMissingRequired -test_debug=true -test_stdout=true\

go test -v $(go list ./test/...) -run TestCliSet
go test -v $(go list ./test/...) -run TestCliSetService/TestUpdated
go test -v $(go list ./test/...) -run TestCliSetService/TestUpdated -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestCli
go test -v $(go list ./test/...) -run TestApiService/TestResolveAdvance -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiService/TestResolveBasic
go test -v $(go list ./test/...) -run TestApiService/TestResolveVmInstances
go test -v $(go list ./test/...) -run TestApiService/TestResource -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiService/TestResource
go test -v $(go list ./test/...) -run TestApiService/TestRole -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiService/TestServiceLogo -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiAuth/TestAuthoritiesList
go test -v $(go list ./test/...) -run TestApiLdap/TestServiceApi -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestConfig/TestLogFlagsUPDATE 
go test -v $(go list ./test/...) -run TestConfig/TestLogFlagsUPDATE -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestOperation/TestFail -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestReload -test_stdout=true -test_debug=true
git ci -m 'camelcase for settings in json,cli,operations scripts'
go test -v $(go list ./test/...) -run TestApiAuth/TestOAuth2Keycloak -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiAuth/TestOAuth2LinkEqualEmailAccounts -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) 
git ci -m 'implement authenticate strategy LINK_EQUAL_AUTHORITY_EMAIL_ON_AUTHENTICATION'
go test -v $(go list ./test/...) -run TestRedis
go test -v $(go list ./...) -run TestRedis/TestHashmodel -test_debug=tru -test_stdout=true
go test -v $(go list ./...) -run TestRedis/TestHashmodel
git ci -m 'fix redis tests.'
git ci -ammend
git ci -amend
git ci -m 'rename authargs -> authparams'
git ci -m 'rename authdata to authargs now that old autharg is authparam'
go get github.com/expr-lang/expr
git ci -m 'change expr repo url'
go run cmd/authly-cli/main.go
git co 0.13.0
git switch -c 0.13.0-disable-authly-user-login
git add diff
git ci -m 'add DISABLE_AUTHLY_USER_LOGIN env config'
git ci -m 'fix test'
git push --delete origin 0.14.0
git tag --delete 0.14.0
git ci -m 'forgot to run generator'
git tag 0.14.0
git tag 0.14.1
git co 0.13.0-disable-authly-user-login
git ci -m 'typo in getting config from environment'
git tag 0.14.2
go test -v $(go list ./test/...) -run TestCliSetRole/TestAuthParams
go test -v $(go list ./test/...) -run TestCliSetRole/TestAuthParams -test_debug=true -test_stdout=true
go test -v $(go list ./...) -run TestAuthApi/TestAuthParams
go test -v $(go list ./...) -run TestApiAuth/TestAuthParams
go test -v $(go list ./test/...) -run TestApiAuth/TestAuthParams
go version
bvun
git merge 0.13.0-disable-authly-user-login
cat redoc.standalone.js
cat index.html
nvim redoc.standalone.js
cd go/pkg/mod/github.com/mvrilo/go-redoc@v0.1.5
cat assets/index.html
cat assets/index.html -p
ssh pxn-gl-run1
pkill profile
nvim main.go
go get -u ./...
git ci -m 'required auth parameters and change to use redoc directly instead of plugin.'
go test -v $(go list ./test/...) -run TestOperation/TestSetSource -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApi -run TestApiAuth/TestLdap -test_debug=true -test_stdout=true
go run cmd/authly-cli/main.go set user
go generate $(go list ./internal/api/...)
git ci -m 'update README and move some sections into seperate files'
STARTUP_FILE=example.yaml go run cmd/server/main.go
go test -v $(go list ./test/...) -run TestCliLdap/TestSyncUsersFromLdap -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliLdap/TestSyncUsersFromLocalLdap -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestCliLdap
go test -v $(go list ./test/...) -run TestCliLdap/TestSourceLdapBasic -test_debug=true -test_stdout=true
git ci -m 'add bindDNTemplate and fix tests'
git add configs/ internal/ test/
git ci -m 'allow space in actionName and policyName'
git co -b admin_htmx
git ci -m 'initial web/admin'
git push --set-upstream origin admin_htmx
go test -v $(go list ./test/...) -run TestReload/TestResourceReload -test_stdout=true -test_debug=true
git ci -m 'split post policy endpoint into post and patch (create/update)'
git ci -m 'update operationID's in openapi'
git ci -m 'update operationIDs in openapi'
go test -v $(go list ./test/...) -run TestApiService/TestServiceImage -test_debug=true -test_stdout=true
git ci -m 'change logo to image'
go test -v $(go list ./test/...) -run TestApiService/TestLdap
ldapsearch -x -b "dc=example,dc=com" -H ldap://ldap.forumsys.com -s sub '(&(objectclass=*))'
go test -v $(go list ./test/...) -run TestApiAuth/TestLdap
git restore test/api_auth_test.go
git ci -m 'update change log for 0.15.0'
git tag 0.15.0
nvim platformio.ini
ca
cdva
go run cmd/authly-cli/main.go run file files/keycloak_provisioning.yaml
cd /home/t/dev/protojour/authly-core/internal/api/openapi/redoc_html
git ci -m 'forgot to copy redoc index.html into docker image. Also moved to /web/redoc_html'
go test -v $(go list ./test/...) -run TestApiAuth/TestAuthParams -test_debug=true -test_stdout=true
docker-compose -f docker-compose.yml up --force-recreate --remove-orphans --build
git tag 0.15.1
git ci -m 'update changelog with 0.15.1 changes'
git show fb1fd6e6019931c5a04df814057f1a2cc6463f9f
git show 61424b73c1a2bc0296bc7d9387d2642f504e4929
git show e5c70902caf8f5b13641080269f1db7f87ddd159
git ci -m 'use lower case keys in redis_test'
go test -v $(go list ./...) -run TestRedis
go test -v $(go list ./...) -run TestOperation/TestSetContract
go test -v $(go list ./test/...) -run TestOperation/TestSetContract -test_stdout=true -test_debug=true
git ci -m 'update operations to use SetOpdata instead of CreateOpdate. Should be possible to update contracts'
git tag 0.15.2
go get "github.com/valkey-io/valkey-go"
sudo pacman -R electron25
cdf
cdaa
cargo install mdbook-d2 --locked
sudo pacman d2
sudo pacman -S d2
d2
nvim authly_config.yml
nvim pubspec.
d2 -w docs/src/static/entities.d2 docs/src/static/entities.png
cd protojour
git add argocd/
git ci -m 'add authly doc infrastructure'
cdp
git ci -m 'fix copy paste err'
git ci -m 'update tag in kustomization for authly'
mv authly-docs authly-core-docs
git add authly-core-docs/
git ci -m 'change authly-docs folder to authly-core-docs'
builtin cd -- .wine/dosdevices/c:/users/t/Local\ Settings/Application\ Data/
go run cmd/authly-cli/main.go run file files/ldap_provisioning.yaml
git add files/
git ci -m 'fix relation created output'
git tag 0.15.3
git co mdbook
d2 -w docs/src/static/d2/d2_gen.d2 docs/src/static/entities.png
d2 --help
d2 -w docs/src/static/d2/d2_gen.d2 docs/src/static/data.png
d2 docs/src/static/d2/d2_gen.d2 docs/src/static/data.png
man d2
mdbook serve --open
git ci -m 'only build docs for tags'
git tags
git tag
git tag 0.15.4
git ci -m 'try to fix cicd'
git tag 0.15.5
mdbook build docs
cd docs/
cd book
cd static
rm data.*
cat README_COPY.html
nvim README_COPY.html
git ci -m 'minor updates to doc. Fix links to relative'
git tag 0.15.6
git ci -m 'actually fix link to relative paths in mdbook'
git tag 0.15.7
git push --tags 
git clone git@gitlab.com:protojour/pxn/infrastructure.git
git clone git@gitlab-proto.com:protojour/pxn/infrastructure.git
git clone git@gitlab-proto:protojour/pxn/infrastructure.git
git clone git@gitlab.com-proto:protojour/pxn/infrastructure.git
cd infrastructure
cd argocd
d2 -w docs/src/static/d2/entities.d2 docs/src/static/entities.png
git ci -m 'docs update'
git tag 0.15.10
cd docs
git add docs
git fetch
git rm docs
ls docs
cd authly-core
rm -rf docs
s
git switch -c mdbook
go generate $(go list ./internal/operation/opdata/...)
go generate $(go list ./internal/operation/...)
git restore internal/api/openapi/openapi_gen.go
go test -v $(go list ./...) -run TestOperation
go generate $(go list ./internal/operation/opschema/types/...)
go generate $(go list ./internal/operation/opschema/...)
go test -v $(go list ./test/...) -run TestOperation/TestRemoveAction -test_debug=true -test_stdout=true
git show remote origin
git merge mdbook
git ci -m 'add build_docs_docker and deploy_docs stages'
git ci -m 'remove only tags for test docs stagesw'
git ci -m 'update development docs to use valkey instead of redis'
git tag 0.15.8
git ci -m 'update doc paths'
git tag 0.15.9
sudo pacman -S thunar-archive-plugin
sudo pacman -S xarchiver
git ci -m 'fix expiration formating to use RFC3339'
git tag 0.16.0
nv
cd files
cd docs/src/static
mv Authly\ black.png authly.png
mdbook serve --open docs
git add docs/
git ci -m 'added authly logo to readme and mdbook. Also update Caddyfile with forwarding for no slash at end of path'
git tag 0.16.1
git co admin_htmx
git rebase master
git show be6018c3d2e1c487091f4fd16b0a8324b2abe1a3
prettierd
curl -fsSL -o get-platformio.py https://raw.githubusercontent.com/platformio/platformio-core-installer/master/get-platformio.py\
python3 get-platformio.py
cd .platformio
cd platforms
rm -rf espressif32*
python nvim.py
mv .gradle /tmp
pip install setuptools
pacman -Qq setuptools
pacman -S python-setuptools
sudo pacman -S python-setuptools
sudo pip install setuptools
pio upgrade --dev
pio pkg install -g -p "https://github.com/platformio/platform-espressif32.git"
pio run  --target upload --target monitor -e skraag-dev
git co device-refactor
flutter upgrade
flutter doctor
flutter doctor -v
cd gradle
yay -S android-sdk
cd android
./gradlew clean
flutter pub get
cat README.md
rm -rf android/.gradle
rm -rf .gradle
flutter clean
flutter run -t lib/main_testing.dart
sudo pacman -S android-studio
yay -S android-studio
yay -Qs discord
yay -Qq discord
yay -Q discord
ls /opt/discord
sudo pacman -R discord
sudo tar -xvzf discord-0.0.63.tar.gz -C /opt
sudo ln -sf -v /opt/Discord/Discord /usr/bin/Discord
discord
Discord
pkill discord
pkill Discord
pkill dockerd
pkill wine
kill -9 722830
ps aux | grep wine
ps aux | grep 360
kill -9 723408
cd /home/t/dev/protojour/authly-core/internal/web/files/signin/static
npm i -g vscode-langservers-extracted
sudpo npm i -g vscode-langservers-extracted
sudo npm i -g vscode-langservers-extracted
vscode-langservers-extracted
yay -S slack-desktop
cd,
git clone git@gitlab-proto.com:protojour/memoriam/onto.git
git clone git@gitlab-proto:protojour/memoriam/onto.git
git clone git@gitlab.com:protojour/memoriam/onto.git
git clone git@gitlab.com-proto:protojour/memoriam/onto.git
cd onto
nvim .ssh/config
cddd
cd neovim
nvim --version
ps aux | grep lua
kill -9 2293589
docker-compose -f test/docker-compose.yml up --force-recreate --remove-orphans --build
weechat-curses
cd internal/route/web
npm install -D tailwindcss
templ fmt
git clone git@gitlab.com:protojour/authly/auth-ui.git
git clone git@gitlab.com-proto:protojour/authly/auth-ui.git
git clone --recurse-submodules git@gitlab.com:protojour/memoriam/onto.git\

git clone --recurse-submodules git@gitlab.com-proto:protojour/memoriam/onto.git\

rm -rf onto
l\

cat .gitmodules
ssh-agent sh -c 'ssh-add ~/.ssh/id_rsa_proto;git submodule update --init
ssh-agent sh -c 'ssh-add ~/.ssh/id_rsa_proto'; git submodule update --init
git restore strata-uxr
git remote show
git remote set-url
git clone --recurse-submodules git@gitlab.com-proto:protojour/authly/auth-ui.git
git submodule update --init
make generate
git submodule add git@gitlab.com-proto:protojour/authly/auth-ui.git
;s
history
rm -rf strata-uxr
nvim .git/
cd .git
nvim .git
nvim .gitmodules
cat .git
cd ../.git/
cat .config
cat config
cd modules
make go_generate
npm run build auth-ui
make auth-ui
go generate $(go list ./internal/redis/rtype/hashmodel/model/...)
go install github.com/a-h/templ/cmd/templ@latest
go get github.com/a-h/templ
templ fmt --help
templ fmt .
cd internal/web/files/signin
templ fmt signin.templ
cd /home/t/dev/protojour/authly-core/internal/route/web/static/authly.svg
cd /home/t/dev/protojour/authly-core/internal/route/web/static/
templ generate
git clone git@gitlab.com:protojour/strata/strata-uxr.git
git clone git@gitlab.com-proto:protojour/strata/strata-uxr.git
npm build
nvim style.css
cd fonts
cat fonts.css
npm start
systemctl status
sudo pacman -S cmark
pacman -Qm
yay -Syu
pulsemixer
pulseaudio --check
sudo pulseaudio -D
sudo pacman -S pulseaudio-bluetooth
sudo pacman -S pulseaudio
systemctl --user stop pulseaudio
systemctl --user stop pulseaudio.sockert stop
systemctl --user stop pulseaudio.sockert restart
systemctl --user restart pulseaudio 
systemctl --user restart pulseaudio.sockert
systemctl --user restart pulseaudio.service
systemctl --user restart pulseaudio.socket
alsamixer
systemctl --user status
systemctl --user status pulseaudio.socket
systemctl --user status pulseaudio.service
sudo pacman -S pavucontrol
systemctl --user -l --no-pager status pulseaudio.{socket,service} pipewire.{socket,service}
systemctl status --user pipewire
systemctl restart --user pipewire
pkill fire
cd assets
cd auth-ui/dist
redis-cli monitor
nvim README.md
pkill slack
git stash pop 
git add src/
git ci -m 'fix merge 'Â´
git config pull.rebase false
git add strata-uxr
git commit
git add Makefile
git add - u
git ci -m 'updates to tie auth-ui to golang backend'
go test -v $(go list ./internal/redis/...) -run TestRedis/TestHashmap
go test -v $(go list ./internal/redis/...) -run TestRedis/TestHashmodel
go test -v $(go list ./internal/redis/...) -run TestRedis
go test -v $(go list ./...) -run TestApiAuth/TestAuthoritiesList
wa
go test -v $(go list ./...) -run TestApiAuth/TestAuthoritiesList -test_debug=true -test_stdout=true
go test -v $(go list ./...) -run TestApiAuth
go test -v $(go list ./...) -run TestApiAuth/TestGetRelations -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiAuth/TestGetRelations -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApi
git diff --staged
git add -u 
git ci -m '.'
git rebase -i
git rebase -i HEAD~3
git show 6594e9354b2a3eaf40afe29f181df972e66cab31
git rebase --abort
git merge --abort
rm -rf auth-ui
git merge admin_htmx
git ci -m 'fix merge conflicts from branch'
go vet $(go list ./...)
go install github.com/kisielk/errcheck@latest
git ci -m 'fix errcheck + go mod tidy'
cd ..4
npm run build
npm install
git ci -m 'change from reset-code to recover-code reset recover link argument'
git push origin main
git cherry-pick a292694
git add auth-ui
git restore --staged CHANGELOG.md
git ci -m 'some minor changes to singup process'
git ci -m '0.18.0 changelog'
git push 
docker build .
cd dist
rm -rf dist
ls web/auth
git add web/
git ci -m 'copy auth-ui dist folder into folder in this project and add to dockerfile for dist'
git ci -m 'forgot to remove copy line in Dockerfile'
git tag 0.18.0
git ci -m 'remove old htmx middleware. Should have been removed in previous merge conflict'
git tag 0.18.1
git ci -m 'doc/openapi description updates'
go get github.com/pquerna/otp/totp
go generate $(go list ./internal/api/openapi/...)
go generate $(go list ./internal/route/openapi/...)
cd skraag-web
pkill spotify
sudo systemctl restart bluetooth.service
sudo pacman -S pipewire
systemctl --user enable pipewire-pulse.service
systemctl --user restart pipewire-pulse.service
systemctl --user status pipewire-pulse.socket
systemctl --user restart pipewire-pulse.socket
systemctl --user restart pipewire.socket
systemctl restart pipewire.socket
systemctl restart bluetooth.service
systemctl restart pipewire.service
mhwd-kernel
mhwd-kernel -h
mhwd-kernel -i linux69
sudo mhwd-kernel -i linux69
sudo mhwd-kernel -i linux610
cd .config
blueman-manager
systemctl --user status wireplumber pipewire pipewire-pulse
sudo killall pulseaudio
sudo systemctl restart bluetooth
systemctl status bluetooth
systemctl restart bluetooth
systemctl --user status pipewire.service
sudo pacman -S libcamera
sudo pacman -S pipewire-libcamera
systemctl --user status wireplumber.service
mhwd-kernel -l
mhwd-kernel -li
blueman-tray
pulseaudio --restart
pulseaudio -h
pulseaudio -k
pkill i3status-rs
i3status-rs
ps aux | grep alsa
killall pulseaudio
nvim /etc/bluetooth/main.conf
removing pulseaudio breaks dependency 'pulseaudio=17.0-3' required by pulseaudio-bluetooth
emoving pulseaudio breaks dependency 'pulseaudio=17.0-3' required by pulseaudio-bluetooth
sudo pacman -R pulseaudio pulseaudio-equalizer pulseaudio-jack pulseaudio-lirc pulseaudio-rtp pulseaudio-zeroconf pulseaudio-bluetooth
pulseaudio --start
systemctl --user restart pipewire.service
pulseaudio -D
pkill pulseaudio
pulseaudio
systemctl --user status pulseaudio
systemctl --user restart pulseaudio
pipewire
sudo pacman -S pipewire-pulse
systemctl --user restart wireplumber.service
sudo pacman -Ru --nodeps pulseaudio pulseaudio-equalizer pulseaudio-jack pulseaudio-lirc pulseaudio-rtp pulseaudio-zeroconf pulseaudio-bluetooth pulseaudio-pa pulseaudio-alsa pulseaudio-ctl manjaro-pulse
sudo pacman -R pulseaudio pulseaudio-bluetooth
pavucontrol
bluetoothctl power on
bluetoothctl -h
bluetoothctl
sudo pacman -R manjaro-pipewire
sudo pacman -S manjaro-pipewire
cat /etc/hosts
cat /etc/hosts -p
stetxkbmap -layout us -variant altgr-intl -option nodeadkeys
go mod tidy
git ci -m Â´added first MFA implementationÂ´
git ci -m "added first MFA implementation"
git ci -m 'added changelog for 0.19.0'
git tag 0.19.0
git ci -m 'change from port 5000 to 443'
cd /tmp/authly-test
cd ser
cd serve
PORT=5000 USER_MFA_NEEDED=1 go run cmd/authly-serve/main.go
git ci -m 'fix mfaNeeded from was not set correctly for session '
git tag 0.19.1
git restore 
git restore -u
git restore *
git reset
git add internal/route/openapi/authapi.go
git ci -m 'forgot to set field in openapi struct'
git tag 0.19.2
git ci -m 'fix issue with service authentication'
git tag 0.19.3
go test -v $(go list ./test/...) -run TestApi/TestBasic -test_debug=true -test_stdout=true
cat .mailmap
cat docker-compose.
cat docker-compose.ci.yml
cat docker-compose.yaml
cat docker-compose.yml
PORT=5000 SMTP_USERNAME=authly SMTP_PASSWORD=secret SMTP_HOSTNAME=9712708a735f SMTP_ADDRESS=localhost:25 go run cmd/authly-serve/main.go
git ci -m 'remove hardcoded values for smtp configuration. Added SMTP_HOSTNAME for the email hostname'
git tag 0.19.4
go test -v $(go list ./test/...) -run TestApiAuth/TestAuthParamsRequired -test_debug=true -test_stdout=true
go clean -cache -modcache -testcache
[A
go test -v $(go list ./test/...) -run TestApiService/TestBasic\ 
go test -v $(go list ./test/...) -run TestApiService/TestBasic
go test -v $(go list ./test/...) -run TestApiService/TestPolicy -test_debug=true -test_stdout=true
git ci -m 'add min max length for field values'
git add 
git ci -m 'add change log for 0.20.0'
git tag 0.20.0
go test -v $(go list ./test/...) -run TestApiServer/TestPolicy
go test -v $(go list ./test/...) -run TestApiService/TestPolicy
go test -v $(go list ./test/...) -run TestReload/TestCliReload
SMTP_HOSTNAME=localhost PORT=5000 go run cmd/authly-serve/main.go
git ci -m 'add smtp_disable_ssl'
git tag 0.20.1
git show 3020777e47e845e9d36269f45802f80a5f260fca
git ci -m 'totp secret was not set correctly'
git tag 0.20.2
git ci -m 'add proxy_path config and use this for email'
git tag 0.20.3
99999-10
cat todo
git stash list
git add internal/entities/entity/email/
git ci -m 'fix go vet error; forgot arguments to error'
git tag 0.20.5
git restore auth-ui
go test -v $(go list ./test/...) -run TestApiAuth/TestSignupValidation -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiAuth/TestAuthoritiesList -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiAuth/TestAuthConfigList -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiAuth
go test -v $(go list ./test/...) -run TestOperation/TestRemoveSource -test_debug=true -test_stdout=true
go gnenerate $(go list ./...)
git ci -m 'move authenticator qr url to session. also available on authentication endpoint once'
git restore internal/
go test -v $(go list ./test/...) -run TestReload/TestCliReload -test_debug=true -test_stdout=true
git ci -m 'fix bug where authly crashed on reload of session from redis after reload'
git tag 0.20.6
go get github.com/pquerna/otp/hotp
go generate $(go list ./internal/data/...)
go test -v $(go list ./test/...) -run TestApiAuth/TestMFA
nvim CV-Protojour-Bjorn-Schjerve-en.typ
git clone git@gitlab.com:protojour/protojour-cv.git
git clone git@gitlab.com-proto:protojour/protojour-cv.git
sudo pacman -S typst
typst CV-Protojour-Terje-Loe-en.typ
typst --help
nvim CV-Protojour-Terje-Loe-en.typ
nvim CV-Protojour-Audun-Halland-en.typ
nvim CV-Protojour-Eirik-Krogstad-en.typ
go test -v $(go list ./test/...) -run TestApiAuth/TestMFA -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiAuth/TestLdap -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiAuth -test_debug=true -test_stdout=true
git add -iu
git ci -m 'add MFA; hotp code generation'
git tag 0.21.1
go test -v $(go list ./...)
go test -v $(go list ./test) -run TestCliSet -test_stdout=true -testify.m TestAuthoritySet
go test -v $(go list ./test) -run TestCliLdap/TestSourceLdapBasic 
go test -v $(go list ./test) -run TestCli
go test -v $(go list ./test/...) -run TestApiService/TestBasic -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiAuth/TestUser -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestApiAuth/TestService -test_debug=true -test_stdout=true
git add pkg/app/hostfile/
git ci 
git ci -m 'removed config PORT; Port defaults to 443 as its backed into https://. Add port to config HOST if needed. Added config HOSTNAME for external hostname. config PROXY_PATH is now relative and path only and authly url is hostname + PROXY_PATH. Added redirectURL for OAuth2Source authparam that will be used for redirect when OAuth2 callback is called and has a valid authentication'
git ci -m 'add docker down -v on before_script in gitlab ci'
PORT=5000 go run cmd/authly-serve/main.go
git ci -m 'fix issue where authenticatorURL does not show up in authentication request reply'
lll
cd protojour-cv
git s
git ci -m 'fix typo in model get value call'
git add internal/entities/users/user/
go run cmd/authly-serve/main.go
git ci -m 'fix double https:// in email href'
cat Doc
cat Dockerfile
cd web/auth
cd web
mkdir auth
HOST=0.0.0.0:5000 go run cmd/authly-serve/main.go
make authui
SMTP_HOSTNAME=localhost HOST=0.0.0.0:5000 go run cmd/authly-serve/main.go
git diff
git config submodule.recurse
git config show submodule.recurse
git config -a submodule.recurse
git config get submodule.recurse
git config --get submodule.recurse
git config submodule.recurse true
git config --list | grep recurse
cd strata-uxr
git co main
git pull 
cd auth-ui
git show 
git auth-ui
git reset HEAD^
git ci -m 'authenticatorURL was not added to ApiGet and was not exported in the api'
git show
git restore internal/route/openapi/openapi_gen.go
git add internal/entities/users/user/user.go
git ci -m 'fix missing secret'
git add internal/route/openapi/openapi.go
git ci -m 'remove / at end of whitelist path for /api/auth/session'
git tash
go test -v $(go list ./test/...) -run TestApiAuth/TestUser -test_debug=true -test_stdout=true
git ci -m 'fix mfaDone having empty string and authenticatorURL not being removed from session object after valid totp authentication'
git ci -m --amend
git add CHANGELOG.md
git ci -m 'updated changelog'
git tag 0.24.1
redis-cli
cat CHANGELOG.md
less CHANGELOG.md
git diff test
cd test
git diff reload_test.go
git show reload_test.go
git history reload_test.go
git co -b resource_group
git ci -m .
git stash
git stash pop
git co 22681063e05ac23112c8cb9291509f7933785d60 test/reload_test.go
git 
lazygit
git ci
errcheck -exclude test/errcheck_excludes.txt ./...
git tag 0.25.0
git co resource_group
nheko
yay -S nheko-git
yay -S proton-vpn-gtk-app
sudo pacman -S utorrent
sudo pacman -S qbittorrent
htop
sertxkbmap -layout us -variant altgr-intl -option nodeadkeys
nvim .config/kitty/kitty.conf
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestApi/TestServiceApiResolveAdvanced
go test -v $(go list ./test) -run TestApi -test_stdout=true -testify.m TestApi/TestServiceApiResolveBasic
go test -v $(go list ./test/...) -run TestApiService/TestResolveVmInstances -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiService
go test -v $(go list ./test/...) -run TestOperation/TestRemovePolicy -test_stdout=true -test_debug=true
go test -v $(go list ./test/...) -run TestOperation/TestSetResource -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestOperation
go test -v $(go list ./test/...) -run TestReload -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestReload/TestRekiad -test_debug=true -test_stdout=true
it st
git add internal/
git ci --amend
git merge origin/master
go test -v $(go list ./test/...) -run TestReload/TestReload -test_debug=true -test_stdout=true
go test -v $(go list ./test/...)
git add -u
git ci -m 'fix conflicts'
git co master
git merge resource_group
git log
go test -v $(go list ./test/...) -run TestApiService/TestResolveBasic -test_debug=true -test_stdout=true
op
go test -v $(go list ./test/...) -run TestApiService/TestResolveAdvanced -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiService/TestResolveResourceGroup -test_debug=true -test_stdout=true
go test -v $(go list ./test/...) -run TestApiService/TestResolveMultipleResurceNamesAndResourceGroup -test_debug=true -test_stdout=true
docker compose -f test/docker-compose.yml up --force-recreate --remove-orphans --build
go generate $(go list ./...)
go test -v $(go list ./test/...) -run TestApiService/TestResolveMultipleResourceNamesAndResourceGroup -test_debug=true -test_stdout=true
set
utorandr baat
ssh 192.168.1.138
ssh root@192.168.1.138
git blame .gitlab-ci.yml
git add .gitlab-ci.yml
git st
git ci -m 'set goshell for ci/cd build_docs_caddy_image'
git push
git tag 0.26.1
git push --tags
cda
nvim .gitlab-ci.yml
cd .cargo
nvim config.toml
cat .gitconfig
nvim config
cat .cargo/config.toml
cargo install just cross mdbook
pipx install uv
pip install --user uv
sudo pacman -S python-uv
git clone --recursive git@gitlab.com:protojour/memoriam/memoriam.git
git submodule update --init --recursive 
git pull --recurse-submodules
just
cross help
cross --help
git config core.sshCommand "ssh -i ~/.ssh/id_rsa_work"
git config core.sshCommand "ssh -i ~/.ssh/id_rsa_proto"
git show remote
git remote set-url origin git@gitlab.com:protojour/memoriam/memoriam-rs.git
cdm
cd memoriam-rs
git remote -v
git config --get core.sshCommand
cross
echo GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa_proto"
export GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa_proto"
sudo pacman -S rustup
rustup 
rustup update
rustup default
rustup toolchain
rustup toolchain install stable
rustup target 
rustup target add x86_64-unknown-linux-musl
just musl
just sync-jupyter
cat justfile
just jupyter
just docs
nvim docker-compose.yml
docker compose up --build
cdsf
gitstats
git-stats --authors
git-stats --author
pkill steam
cdss
cat
mkdir space-fight
tar -xf Godot_v4.3-stable_linux.x86_64.zip
unzip Godot_v4.3-stable_linux.x86_64.zip
mv Godot_v4.3-stable_linux.x86_64 /usr/bin/
./Godot_v4.3-stable_linux.x86_64
Godot_v4.3-stable_linux.x86_64
cd space-fight
rm Godot_v4.3-stable_linux.x86_64
rm Godot_v4.3-stable_linux.x86_64.zip
pacman -S godot
sudo pacman -S godot
cat CMakeLists.txt
conan
yay -S conan-git
pipx install conan
pip install conan
yay -S conan
cat ../Utils/Conan/Luajit/luajit.py
conan export ../Utils/Conan/Luajit/luajit.py
conan profile detect
cat ../Utils/Conan/Profiles/Linux/TEngineDebug
nvim ../Utils/Conan/Profiles/Linux/TEngineDebug
conan install .. --profile ../Utils/Conan/Profiles/Linux/TEngineDebug -g cmake --build=missing
pkill nheko
sudo pacman -S discord
yay -S discord
nvim .config/discord/settings.json
godot --help
godot --version
nvim todo
nvim skra
nvim skraag
/usr/bin/c++
/usr/bin/c++ --version
pkill xorg
ps aux | grep xotg
cat canbedeleted
rm canbedeleted
l
cd private
cd TEngine
git pull
cd Downloads
mkdir theme-cicki
mv theme_export__noomaad-com-expression__05FEB2025-0201pm.zip theme-cicki
cd theme-cicki
unzip theme_export__noomaad-com-expression__05FEB2025-0201pm.zip
cat util/conan/profiles/conan_debug_linux
conan help 
conan install help
conan help install
conan --help
conan install --help
ssh-keygen -t rsa -b 2048
cd .ssh
cat id_rsa.pub
cat id_rsa.pub -p
mkdir build
conan install -of=build --profile=util/conan/profiles/conan_debug_linux--build=missing
conan install . -of=build --profile=util/conan/profiles/conan_debug_linux--build=missing
conan --version
yay -S mkchromecast-git
mkchr
mkchromecast
yay -R mkchromecast-git
yay -S codelldb-git
yay -S codelldb
codelldb --version
codelldb
codelldb -v
codelldb --help
codelldb -V
lldb-dap
cd .config/nvim/lua/config/lazy.lua
nvim .config/nvim/lua/config/lazy.lua
mkdir config
top
cd .config/nvim/lua/
cd config
nvim lazy.lua
cd .config/nvim/lua/config
cat lazy.lua
mv plugin tmp
ls tmp
cd.
cd .config/nvim
cd lua
cd .local/share/nvim
cd shada
cat main.shada
cd plugin
cd .local/share/nvim/site/pack
rm -rf packer
nvi,m
pwd nvim
which nvim
rm /usr/local/bin/nvim
sudo rm /usr/local/bin/nvim
sudo pacman -S neovim
ping google.com
pkill firefox
/usr/local/bin/clangd
rm /usr/local/bin/clangd
clangd
git clone git@github.com:Tloe/tengine.git
pwd clang
cd
cd dev
sudo pacman -R clang
clang-13
sudo pacman -S clang-13
cd cmake
find . -r install_
find . -r install
find . install
find . install_manifest
find . 
find . |grep install_manifest
cd builds
cat cmake_install.cmake
cat .gitignore
ll
cd llvm-project
cd build
make uninstall
find . -type f -name "install_manifest.txt"
find
find | grep install_manifest.txt
clang++-18
clang++ 
sudo pacman -Rdd clang
clang-18
which clang
which clang-13
rm /usr/local/bin/clang
sudo rm /usr/local/bin/clang
sudo rm /usr/local/bin/clang-13
clang
clang --version
nvim util/conan/profiles/conan_debug_linux
clang++
clang++ --version
sudo pacman -S cmake
yay -S sdl3-git
conan search glm
sudo pacman 
sudo pacman -S vulkan-validation-layers
sudo shutdown -h now
yay -S usbimager
sudo pacman -S ventoy
sudo usbimager
fdisk -l
sudo fdisk -l
cd chipset
unzip DRV_Chipset_AMD_AM5_SZ-TSD_W11_64_V70108129_20250115R.zip
cd ..
cd wifi
unzip DRV_WiFi_MediaTek_SZ-TSD_W11_64_V3401063_20241225R.zip
ventoygui
cd /run/media/t/Ventoy
cd /run/media/t/9481-5083/terje_kan_slettes
mc
cd 
df -h
umount /dev/sda1
perrierd
sudo pacman -S prettierd
yay -S prettierd
nvim .local/share/nvim/lazy/nvim-dap-ui/lua/dapui/controls.lua
pkill fightspace
ps aux | grep fightspace
kill -9 71567
clangd -V
which clangd
rm /usr/local/clangd
sudo rm /usr/local/bin/clangd
sudo pacman -S clangd
sudo pacman -S clang
clangd --version
nvim .zshrc
vkconfig
conan install . -of=build --profile=util/conan/profiles/conan_release_linux --build=missing
conan build . -of=build --profile=util/conan/profiles/conan_release_linux
[A
sudo mhwd -l
sudo mhwd -li
sudo pacman -Syu
sudo pacman -S envycontrol
cdd
cd tengine
ls
cdv
yay -S optimus-manager
sudo mhwd -r video-linux
sudo mhwd -r pci video-linux
sudo mhwd -r pci video-modesetting
mhwd -i pci video-hybrid-intel-nvidia-prime
sudo mhwd -i pci video-hybrid-intel-nvidia-prime
optimus-manager
optimus-manager --print-mode
toraa
vac404VAC
autora
python
cd exec
./fightspace
nvim
cdte
conan install . -of=build --profile=util/conan/profiles/conan_debug_linux --build=missing
conan build . -of=build --profile=util/conan/profiles/conan_debug_linux
mhwd -li
mhwd -r video-hybrid-intel-nvidia-prime
sudo mhwd -r video-hybrid-intel-nvidia-prime
sudo mhwd pci -r video-hybrid-intel-nvidia-prime
sudo mhwd --pci -r video-hybrid-intel-nvidia-prime
sudo mhwd -r --pci video-hybrid-intel-nvidia-prime
sudo mhwd -r pci video-hybrid-intel-nvidia-prime
mhwd -l
sudo mhwd -i pci video-nvidia
sudo reboot
setxkbmap -layout us -variant altgr-intl -option nodeadkeys
autorandr baat
brightnessctl -d "intel_backlight" set 100%
